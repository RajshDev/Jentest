@model  IOAS.Models.FixedDepositModel
@{
    ViewBag.Title = "FixedList";
    ViewBag.Subtitle = "Fixed List";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>Fixed Deposit</h3>
    </div>
    <div class="col-md-8 flt-nav-links">
        <a href="@Url.Action("FixedDeposit")"> <i class="ion-plus"></i>Add New</a>

    </div>
</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="fixeddepositlist"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var alertMsg = '@TempData["alertMsg"]';
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        else if (alertMsg != '') {
            $('#alert').html(alertMsg);
            $('#Validation').modal('toggle');
        }
    });
    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };
    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            return new Date(value).toDateString();
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });
    jsGrid.fields.date = DateField;
    $("#fixeddepositlist").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 5,
        editing: false,
        filtering: true,
        pageLoading: true,
        autoload: true,
        controller: {

            loadData: function (filter) {
                var searchData = [];
                searchData = {
                    FixedDepositNumber: filter.FixedDepositNumber || null,
                    Bankaccountnumber: filter.BankNumber || null,
                    FDNumber: filter.FDNumber || null,
                    DepositAmount: filter.DepositAmount || null,
                    Status: filter.Status||null
                },
                filter.model = searchData;
                var deferred = $.Deferred();
                $.ajax({
                    type: "post",
                    url: "GetFixedDepositList",
                    data: JSON.stringify(filter),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        //db = result;
                        //$("#AdvanceBillPaymentList").jsGrid({ data: db });
                        var da = {
                            data: result.fixlist,
                            itemsCount: result.TotalRecords
                        }
                        deferred.resolve(da);
                    },
                    error: function (err) {
                        console.log("error : " + err);
                    }

                });
                return deferred.promise();
            }

        },

        fields: [
            { name: "SNo", title: "S.No", editing: false, width: 50 },
            { type: "number", name: "FixedDepositId", title: "Id", visible: false },
            { type: "text", name: "FixedDepositNumber", title: "Fixed Deposit Number", editing: false },
            { type: "text", name: "BankNumber", title: "Bank Account Number", editing: false },
            { type: "text", name: "DepositAmount", title: "Deposit Amount", editing: false },
            { type: "date", name: "FromDatetime", title: "FD From Date", editing: false },
            { type: "date", name: "TofromDate", title: "FD To Date", editing: false },
            { type: "text", name: "FDNumber", title: "FD Account Number", editing: false },
           {type: "text",name: "Status", title: "Status", editing: false },
             {
                 type: "control", editButton: false, deleteButton: false, width: 120, title: "Action",

                 itemTemplate: function (value, item) {
                     var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                     if (item.Status == "Open") {
                         statusList = [{ id: "", name: "Select Action" }, { id: "Edit", name: "Edit" }, { id: "Submit for approval", name: "Submit for approval" }, { id: "View", name: "View" }]
                     }
                     else if (item.Status == "Approval Pending")
                     {
                         statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }, { id: "Approve", name: "Approve" }]
                     }
                     else if (item.Status == "Active") {
                         statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }, { id: "Closed", name: "Closed" }]
                     }
                     else {
                         statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }]
                     }
                     var $customSelect = $("<select>")
                         .attr("class", "form-control").prop("selectedIndex", "")
                     $.each(statusList, function (index, itemData) {
                         $customSelect.append($('<option/>', {

                             value: itemData.id,
                             text: itemData.name
                         }));
                     });
                     $customSelect.change(function (e) {
                         var selVal = $(this).val();
                         if (selVal == "Edit") {
                             var url = '@Url.Action("FixedDeposit", "CoreAccounts")?Fixeddepositid=' + item.FixedDepositId;
                             window.location.href = url;
                         }
                         else if (selVal == "View") {
                             var url = '@Url.Action("FixedDepositView", "CoreAccounts")?Fixeddepositid=' + item.FixedDepositId;
                             window.location.href = url;
                         } else if (selVal == "Print Bill") {
                             var url = '@Url.Action("", "ReportMaster")?Fixeddepositid=' + item.FixedDepositId;
                             window.open(url, '_blank');
                         }
                         else if (selVal == "Closed") {
                             var url = '@Url.Action("FixedDepositClose", "CoreAccounts")?FixedepositId=' + item.FixedDepositId;
                             window.open(url, '_blank');
                         }
                         else if (selVal == "Submit for approval") {
                             var choice = confirm("Are you sure, Do you want to submit this bill for approval process?");
                             if (choice === true) {
                                 $.ajax({
                                     type: "GET",
                                     url: '@Url.Action("ApprovalForFixedDeposit", "CoreAccounts")',
                                     data: {
                                         FixedDepositid: item.FixedDepositId
                                     },
                                     success: function (result) {
                                         if (result.status == true) {
                                             $('#alertSuccess').html("Fixed Deposit has been submitted for approval process successfully.");

                                             $('#Success').modal('toggle');
                                             loadDetails();
                                         } else if (result.status == false) {

                                             $('#FailedAlert').html(result.msg);
                                             $('#Failed').modal('toggle');
                                         }
                                     },
                                     error: function (err) {
                                         console.log("error1 : " + err);
                                     }
                                 });
                             }

                         }
                         else if (selVal == "Approve") {
                             var choice = confirm("Are you sure, Do you want to approve this Fixed Deposit entry?");
                             if (choice === true) {
                                 $.ajax({
                                     type: "GET",
                                     url: '@Url.Action("ApprovalPendingForFixedDeposit", "CoreAccounts")',
                                     data: { Fixeddepositid: item.FixedDepositId},
                                     success: function (result) {
                                         if (result.status == true) {
                                             $('#alertSuccess').html("Fixed Deposit has been approved successfully.");
                                             $('#Success').modal('toggle');
                                             loadDetails();
                                         } else if (result.status == false) {
                                             $('#FailedAlert').html("Something went wrong please contact administrator.");
                                             $('#Failed').modal('toggle');
                                         }
                                     },
                                     error: function (err) {
                                         console.log("error1 : " + err);
                                     }
                                 });
                             }
                         }
                         $(this).val("");
                         return false;
                         e.stopPropagation();
                     });
                     return $result.add($customSelect);
                 },
                 _createFilterSwitchButton: function () {
                     return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                 }
             }


        ],

    });
    $("#fixeddepositlist").jsGrid("option", "filtering", false);
    loadDetails();
    function loadDetails() {
        var input = [];
        input = {
            FixedDepositNumber: null,
            Bankaccountnumber: null,
            FDNumber: null,
            DepositAmount: null,
            Status: null
        },
        $("#fixeddepositlist").jsGrid("search", input, pageIndex = 1, pageSize = 5);
    }
</script>