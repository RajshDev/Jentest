@model IOAS.Models.TravelAdvanceModel
@{
    ViewBag.Title = "Travel Advance";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}


    <div class="row hd-tt-bg">
        <div class="col-md-12">
            <h4><b>Travel Advance</b> </h4>
        </div>
    </div>
    <div class="row">
        <div class="white-bg ad-navbar">
            <div class="col-md-3 ds-spl-bg">
                <div class="ds-icn">
                    <i class="ion-ios-list-outline "></i>
                </div>
                <div class="ds-tt">
                    <span>Request Reference</span> <br />
                   <span>@Html.DisplayFor(m=>m.SourceName)</span>
                    @Html.ValidationMessageFor(m => m.Source)
                    @Html.HiddenFor(m => m.TravelBillId)
                </div>
            </div>
            <div class="col-md-3 ds-spl-bg">
                <div class="ds-icn">
                    <i class="ion-ios-calendar-outline"></i>
                </div>
                @if (Model.ReferenceNumber != null)
                {
                    <div class="ds-tt">
                        <span>Ref Number (WF / Tapal)</span>
                        <span>@Html.DisplayFor(m => m.ReferenceNumber)</span>


                    </div>
                }
                else
                {
                    <div class="ds-tt">
                        <span>Email Date</span><br />
                        <span>@Html.DisplayFor(m => m.SourceBillEmailDate)</span>
                    </div>
                }
            </div>


            <div class="col-md-3 col-md-offset-3">
                <div class="reg-no custom-reg-no vw-reg-no">
                    <div class="form-group custom-form-group">
                        <label>Number</label>
                        <h4>@Html.DisplayFor(m => m.BillNumber)</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="vw-dts-bg">
        <div class="row">
            <div class="col-md-12">
                <table class="table table-bordered mb-null">
                    <tbody>
                        <tr>
                            <td>
                                <label>PI</label>
                                @Html.DisplayFor(m => m.PIName)
                            </td>
                            <td>
                                <label>Country</label>
                                             
                              
                                <h4>@Html.DisplayFor(m=>m.CountryName)</h4>
                            </td>
                            <td >
                                <label>From Duration</label>
                             
                                <h4>@Html.DisplayFor(m=>m.TravelBillFromDate)</h4>
                                <label id="lblDuration"></label>
                            </td>
                            <td>
                                <label>To Duration</label>
                              
                                <h4>@Html.DisplayFor(m => m.TravelBillToDate)</h4>
                            </td>
                            <td style="width:200px;">
                                <label>Place</label>
                                
                                <h4>@Html.DisplayFor(m => m.Place)</h4>
                            </td>
                        </tr>
                        <tr>                           
                           
                            <td>
                                <label>Purpose</label>
                               
                                <h4>@Html.DisplayFor(m=>m.Purpose)</h4>
                            </td>
                            <td>
                                <label>No. of Travelers</label>
                               
                                <h4>@Html.DisplayFor(m=>m.NoOfTraveller)</h4>
                            </td>
                            <td>
                                <label>Estimated Budget</label>
                                @Html.HiddenFor(m => m.EstimatedValue, new { @class = "form-control", @onkeypress = "return ValidateDecimalOnly(event)" })
                                <h4>@Html.DisplayFor(m => m.EstimatedValue)</h4>
                            </td>
                            <td>
                                <label>Advance Requested</label>
                                @Html.HiddenFor(m => m.AdvanceValue, new { @class = "form-control", @onkeypress = "return ValidateDecimalOnly(event)" })
                                <h4>@Html.DisplayFor(m => m.AdvanceValue)</h4>
                            </td>
                            <td>
                                <label>Remarks</label>

                                <h4>@Html.DisplayFor(m => m.Remarks)</h4>
                            </td>
                        </tr>
                        <tr>
                           
                            <td colspan="2">
                              
                                    <label>Approved for 100% : </label> 
                                    @if (Model.Adv100Pct_f == true)
                                    {
                                     <h4>Yes</h4>
                                    }
                                    else
                                    {
                                        <h4>No</h4>
                                    }
                                <label>Proforma Invoice Attached : </label>
                                    @if(Model.ProformaInvoiceSubmit_f==true)
                                    {
                                     <h4>Yes</h4>
                                    }
                                    else
                                    {
                                        <h4>No</h4>
                                    }
                              
                              
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="col-md-12">
                <h3>Traveller Details</h3>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Category</th>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="tbodyTraveller">
                        <tr>
                            <td>
                               
                                <h4>@Html.Display("CategoryName","")</h4>
                            </td>
                            <td class="tdDDLTraveler">
                               
                                <h4>@Html.Display("TravellerName", "")</h4>
                            </td>
                            <td class="tdTxtTraveler dis-none">
                              <h4>@Html.Display("TravellerName","")</h4>
                            </td>
                            

                        </tr>
                    </tbody>
                </table>
            </div>
         </div>

        <div class="row">
            <div class="col-md-12">
                @Html.Partial("_DocumentDetailView", Model.DocumentDetail)
            </div>
        </div>
    </div>
<div class="row">
    <div class="col-md-12 text-center pd-tb-30">

        <input type="button" onclick="window.location.href='@Url.Action("TravelAdvancePaymentList", "CoreAccounts")';" class="btn btn-default" value="Close" id="btnclose" />
    </div>
</div>
    


<input type="hidden" id="currentRefId" value="@Model.TravelBillId" />
<input type="hidden" id="processGuideLineId" value="@ViewBag.processGuideLineId" />
@Html.Partial("_ProcessStatus")



<script>
    @*var dis = '@ViewBag.disabled';
    if (dis != "")
    {

        $('.ion-trash-a').removeClass();
        $('#btnAddPO').hide();
        $("input[type='radio']").prop('disabled', true);
        $('#selectCommitment').hide();
        $('#btnReset,#btnbookcommitment,#btnbookcommitment,#btnCollapseSrchCommit').hide();
        $('input[type="checkbox"]').prop('disabled', true);
        $('input[type="file"],#btnAddAttachment').hide();
        $('.form-control').prop('disabled', true);
        $('#ProcessStatusContainer .form-control').prop('disabled', false);
        $('#btnAddExpense').hide();
        $('.btn-circle').removeClass();
        $('.ion-close-round').removeClass();

    }*@
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
   
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        $('.selectpicker').selectpicker({
            liveSearch: true
        });
        applyAutoComplete($('#PIName'), $('#PI'), "@Url.Action("LoadPIList", "CoreAccounts")");
        var selSource = $('#Source').val();
        $("#divRefNum, #divRefEmailDate").addClass('dis-none');
        if (selSource == '1') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACWorkflowRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
        } else if (selSource == '3') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACTapalRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
        }
        else if (selSource == '2') {
            $('#divRefEmailDate').removeClass('dis-none');
        } else {
            $("#divRefNum").removeClass('dis-none');
        }
        var category = @Html.Raw(Json.Encode(Model.CategoryId));
        var tID = @Html.Raw(Json.Encode(Model.TravellerId));
        var tName = @Html.Raw(Json.Encode(Model.TravellerName));
        var countryies = @Html.Raw(Json.Encode(Model.CountryId));
        $('#CountryId').val(countryies)
        $('#CountryId').selectpicker('refresh');
        $.each(category, function (i, selVal) {
            var trEle;
            if (i == 0) {
                trEle = $('#tbodyTraveller tr:first');
                $('#tbodyTraveller tr').not(':first').remove();
            } else {
                trEle = $('#tbodyTraveller tr:first').clone().find("input,select").val("").end();
                //$(trEle).find('a.dis-none').removeClass('dis-none');
                $('#tbodyTraveller').append(trEle);
            }
            $(trEle).find("select[name='CategoryId']").val(selVal);
            if (selVal == 1) {
                $(trEle).closest('tr').find("td.tdDDLTraveler").removeClass('dis-none');
                $(trEle).closest('tr').find("td.tdTxtTraveler").addClass('dis-none');
                var ele = $(trEle).find("input[name='autoComplete']");
                var eleTId = $(trEle).find("input[name='TravellerId']");
                var eleTName = $(trEle).find("input[name='TravellerName']");
                $(eleTId).addClass('required');
                $(eleTName).removeClass('required');
                $(eleTName).val(tName[i]);
                $(ele).val(tName[i]);
                $(eleTId).val(tID[i]);
                setAutoComplete(ele, "@Url.Action("LoadPIList", "CoreAccounts")", true)
            } else if (selVal == 2) {
                $(trEle).closest('tr').find("td.tdDDLTraveler").removeClass('dis-none');
                $(trEle).closest('tr').find("td.tdTxtTraveler").addClass('dis-none');
                var ele = $(trEle).find("input[name='autoComplete']");
                var eleTId = $(trEle).find("input[name='TravellerId']");
                var eleTName = $(trEle).find("input[name='TravellerName']");
                $(eleTId).addClass('required');
                $(eleTName).removeClass('required');
                $(eleTName).val(tName[i]);
                $(ele).val(tName[i]);
                $(eleTId).val(tID[i]);
                setAutoComplete(ele, "@Url.Action("LoadStudentList", "CoreAccounts")", false);
            } else if (selVal == 4) {
                $(trEle).closest('tr').find("td.tdDDLTraveler").removeClass('dis-none');
                $(trEle).closest('tr').find("td.tdTxtTraveler").addClass('dis-none');
                var ele = $(trEle).find("input[name='autoComplete']");
                var eleTId = $(trEle).find("input[name='TravellerId']");
                var eleTName = $(trEle).find("input[name='TravellerName']");
                $(eleTId).addClass('required');
                $(eleTName).removeClass('required');
                $(eleTName).val(tName[i]);
                $(ele).val(tName[i]);
                $(eleTId).val(tID[i]);
                setAutoComplete(ele, "@Url.Action("LoadACProjectStaff", "CoreAccounts")", true)
            }
            else if (selVal == 5) {
                $(trEle).closest('tr').find("td.tdDDLTraveler").removeClass('dis-none');
                $(trEle).closest('tr').find("td.tdTxtTraveler").addClass('dis-none');
                var ele = $(trEle).find("input[name='autoComplete']");
                var eleTId = $(trEle).find("input[name='TravellerId']");
                var eleTName = $(trEle).find("input[name='TravellerName']");
                $(eleTId).addClass('required');
                $(eleTName).removeClass('required');
                $(eleTName).val(tName[i]);
                $(ele).val(tName[i]);
                $(eleTId).val(tID[i]);
                setAutoComplete(ele, "@Url.Action("LoadInstituteStaffList", "CoreAccounts")", true)
            }
            else if (selVal == 6) {
                $(trEle).closest('tr').find("td.tdDDLTraveler").removeClass('dis-none');
                $(trEle).closest('tr').find("td.tdTxtTraveler").addClass('dis-none');
                var ele = $(trEle).find("input[name='autoComplete']");
                var eleTId = $(trEle).find("input[name='TravellerId']");
                var eleTName = $(trEle).find("input[name='TravellerName']");
                $(eleTId).addClass('required');
                $(eleTName).removeClass('required');
                $(eleTName).val(tName[i]);
                $(ele).val(tName[i]);
                $(eleTId).val(tID[i]);
                setAutoComplete(ele, "@Url.Action("LoadAdhocStaffList", "CoreAccounts")", true)
            }else if (selVal == 3) {
                $(trEle).closest('tr').find("td.tdDDLTraveler").addClass('dis-none');
                $(trEle).closest('tr').find("td.tdTxtTraveler").removeClass('dis-none');
                var ele = $(trEle).find("input[name='TravellerId']");
                $(ele).removeClass('required');
                var eleTName = $(trEle).find("input[name='TravellerName']");
                $(eleTName).addClass('required');
                $(eleTName).val(tName[i]);
            }
        });
        CalculateNoOfTraveller();
        calcDateDiff();
    });
    function setAutoComplete(ele,url,setId) {
        $(ele).autocomplete({
            select: function (event, ui) {
                event.preventDefault();
                $(ele).val(ui.item.label);
                if (setId == true) {
                    $(ele).closest('tr').find("input[name='TravellerId']").val(ui.item.value);
                    $(ele).closest('tr').find("input[name='TravellerName']").val(ui.item.label);
                } else {
                    $(ele).closest('tr').find("input[name='TravellerId']").val(ui.item.label);
                    $(ele).closest('tr').find("input[name='TravellerName']").val(ui.item.label);
                }
            },
            focus: function (event, ui) {
                event.preventDefault();
                $(ele).val(ui.item.label);
            },
            source: function (request, response) {
                $.getJSON(url,{ term: request.term },
                 function (locationdata) {
                     response(locationdata);
                 });
            },
            minLength: 3
        });
    }
    $('#PIName').keyup(function () {
        if ($(this).val() == "") {
            $('#PI').val('')
        }
    });
    $(document).on('click', 'a.removeTravellerDetail', function () {
        $(this).closest('tr').remove();
        CalculateNoOfTraveller();
    });
    $('#btnAddTraveller').click(function () {
        var cln = $('#tbodyTraveller tr:first').clone().find("input,select").val("").end();
        $(cln).find('a.dis-none').removeClass('dis-none');
        $(cln).find('td.tdDDLTraveler').removeClass('dis-none');
        $(cln).find('td.tdTxtTraveler').addClass('dis-none');
        $('#tbodyTraveller').append(cln);
        CalculateNoOfTraveller();
    });
    $('#Source').change(function () {
        var selSource = $(this).val();
        $("#SourceReferenceNumber,#ReferenceNumber").val('');
		$("#divRefNum, #divRefEmailDate").addClass('dis-none');
        $("#SourceTapalOrWorkflow").val('False');
		if (selSource == '1') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACWorkflowRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('True');
        } else if (selSource == '3') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACTapalRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('True');
        }
        else if (selSource == '2') {
            $('#divRefEmailDate').removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('False');
        } else {
            $("#divRefNum").removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('True');
        }
    });
    function formSave(){
        var isValid = $('#formADV').valid();
        if (!isValid)
            return false;

        $('#formADV').submit();
    }
   
    function calcDateDiff() {
        var strDate = '@Model.TravelBillFromDate';
        var clsDate = '@Model.TravelBillToDate';
        if (strDate != '' && clsDate != '') {
            var startDate = moment(parseDate(strDate));
            var closeDate = moment(parseDate(clsDate));

            var mins = closeDate.diff(startDate, 'minutes');
            if (mins <= 0) {
                $('#alert').html("To Date must be greater than from date.");
                $('#Validation').modal('toggle');
                return false;
            }
            var result = '';
            var years = closeDate.diff(startDate, 'year');
            startDate.add(years, 'years');

            var months = closeDate.diff(startDate, 'months');
            startDate.add(months, 'months');

            var days = closeDate.diff(startDate, 'days');
            if (years > 1) {
                result = years + ' years ';
            } else if (years == 1) {
                result = years + ' year ';
            }
            if (months > 1) {
                result = result + months + ' months ';
            } else if (months == 1) {
                result = result + months + ' month ';
            }
            if (days > 1) {
                result = result + days + ' days';
            } else if (days == 1) {
                result = result + days + ' day';
            }
            $('#lblDuration').html(result);
        }
    }
    function parseDate(s) {
        var months = {
            january: 0, february: 1, march: 2, april: 3, may: 4, june: 5,
            july: 6, august: 7, september: 8, october: 9, november: 10, december: 11
        };
        var p = s.split('-');
        return new Date(p[2], months[p[1].toLowerCase()], p[0]);
    }

    function CalculateNoOfTraveller() {
        var len = $('#tbodyTraveller tr').length;
        $('#NoOfTraveller').val(len);
    }
    $('#AdvanceValue, #AdvanceValue, #NoOfTraveller').on("copy cut paste drop", function () {
        return false;
    });
    @*$(document).on('change','select[name="CategoryId"]',function () {
        var selVal = $(this).val();
        if (selVal == 1) {
            $(this).closest('tr').find("td.tdDDLTraveler").removeClass('dis-none');
            $(this).closest('tr').find("td.tdTxtTraveler").addClass('dis-none');
            var ele = $(this).closest('tr').find("select[name='TravellerId']");
            $(ele).addClass('required');
            $(this).closest('tr').find("input[name='TravellerName']").removeClass('required');
            $.getJSON("@Url.Action("LoadPIList", "CoreAccounts")",
             function (locationdata) {
                 ele.empty();
                 fillAutoCompleteDropDown(ele, locationdata, true);
             });
        } else if (selVal == 2) {
            $(this).closest('tr').find("td.tdDDLTraveler").removeClass('dis-none');
            $(this).closest('tr').find("td.tdTxtTraveler").addClass('dis-none');
            var ele = $(this).closest('tr').find("select[name='TravellerId']");
            $(ele).addClass('required');
            $(this).closest('tr').find("input[name='TravellerName']").removeClass('required');
            $.getJSON("@Url.Action("LoadStudentList", "CoreAccounts")",
             function (locationdata) {
                 ele.empty();
                 fillAutoCompleteDropDown(ele, locationdata, true,true);
             });
        } else if (selVal == 3) {
            $(this).closest('tr').find("td.tdDDLTraveler").addClass('dis-none');
            $(this).closest('tr').find("td.tdTxtTraveler").removeClass('dis-none');
            var ele = $(this).closest('tr').find("select[name='TravellerId']");
            $(ele).removeClass('required');
            $(this).closest('tr').find("input[name='TravellerName']").addClass('required');

        }
    });*@
    function fillMasterDropDown(ele, data, fillDafaultText,valueAsName) {
        if (fillDafaultText !== undefined) {
            ele.append($('<option/>', {
                value: '',
                text: 'Select any',
            }));
        }
        if(valueAsName !== undefined) {
            $.each(data, function (index, itemData) {
                ele.append($('<option/>', {
                    value: itemData.name,
                    text: itemData.name,
                }));
            });
        }else{
            $.each(data, function (index, itemData) {
                ele.append($('<option/>', {
                    value: itemData.id,
                    text: itemData.name,
                }));
            });
        }
    }
    function fillAutoCompleteDropDown(ele, data, fillDafaultText,valueAsName) {
        if (fillDafaultText !== undefined) {
            ele.append($('<option/>', {
                value: '',
                text: 'Select any',
            }));
        }
        if(valueAsName !== undefined) {
            $.each(data, function (index, itemData) {
                ele.append($('<option/>', {
                    value: itemData.label,
                    text: itemData.label,
                }));
            });
        }else{
            $.each(data, function (index, itemData) {
                ele.append($('<option/>', {
                    value: itemData.value,
                    text: itemData.label,
                }));
            });
        }
    }


    /* Tab Sections Start*/
    //var currentTab = 0; // Current tab is set to be the first tab (0)
    //showTab(currentTab); // Display the crurrent tab
    //function showTab(n) {
    //     This function will display the specified tab of the form...
    //    var x = document.getElementsByClassName("tab");
    //    x[n].style.display = "block";
    //    $(".custom-nav-pills li:eq(" + n + ")").addClass("active");
    //    ... and fix the Previous/Next buttons:
    //    if (n == 0) {
    //        document.getElementById("prevBtn").style.display = "none";
    //    } else {
    //        document.getElementById("prevBtn").style.display = "inline";
    //    }
    //    if (n == (x.length - 1)) {
    //        document.getElementById("nextBtn").innerHTML = "Submit";
    //        $('#nextBtn').hide();
    //    } else {
    //        document.getElementById("nextBtn").innerHTML = "Next";
    //        $('#nextBtn').show();
    //    }
    //    ... and run a function that will display the correct step indicator:
    //    fixStepIndicator(n)
    //}

    //function nextPrev(n) {
    //    // This function will figure out which tab to display
    //    var x = document.getElementsByClassName("tab");
    //    // Exit the function if any field in the current tab is invalid:
    //    //if (n > 0 && !validateForm(n)) return false;
    //    if (currentTab + n < x.length) {
    //        // Hide the current tab:
    //        x[currentTab].style.display = "none";
    //        $(".custom-nav-pills li:eq(" + currentTab + ")").removeClass("active");
    //    } else {
    //        // ... the form gets submitted:
    //        formSave();
    //        return false;
    //    }
    //    // Increase or decrease the current tab by 1:
    //    currentTab = currentTab + n;

    //    // Otherwise, display the correct tab:
    //    showTab(currentTab);
    //}

    //function validateForm(n) {
    //    // This function deals with validation of the form fields
    //    var isValid = false;
    //    var hadError = false;
    //    var tabs = $(".tab");
    //    var currentTabEle = tabs[currentTab];
    //    var inputs = $(":input, textarea, select"); // get all the form inputs and selects
    //    var stepElements = $(currentTabEle).find(inputs); // get inputs for current step
    //    var count = stepElements.length; // check that there are inputs
    //    if (count <= 0) {                // if there are not no reason to loop them
    //        return true;                 // this can be used to perform other action if there are no steps
    //    } else if (currentTab == 0) {
    //        var strDate = $("#TravelFromDate").val();
    //        var clsDate = $("#TravelToDate").val();
    //        if (strDate != '' && clsDate != '') {
    //            var startDate = moment(parseDate(strDate));
    //            var closeDate = moment(parseDate(clsDate));

    //            var mins = closeDate.diff(startDate, 'minutes');
    //            if (mins <= 0) {
    //                $('#alert').html("To Date must be greater than from date.");
    //                $('#Validation').modal('toggle');
    //                return false;
    //            }
    //        }
    //        var isChecked = $('#ProformaInvoiceSubmit_f').is(":checked");
    //        if (!isChecked) {
    //            $('#alert').html("Proforma Invoice Attached is not checked.");
    //            $('#Validation').modal('toggle');
    //            return false;
    //        }
    //    }
    //    $(stepElements).each(function (idx, ele) {

    //        if (!$(ele).is(':radio') && !$(ele).is(':checkbox') && !$(ele).is(':password')) {
    //            isValid = $(ele).valid();//$(document.forms[0]).validate().element($(this)); // check that the input is valid. This can also be used on a per input basis to perform another action if the field is not valid.
    //            if (!isValid) { hadError = true; } // set our flag if there was an error
    //        }

    //    });
    //    return !hadError; // return the valid status

    //}
</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
