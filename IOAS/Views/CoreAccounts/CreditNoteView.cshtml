@model IOAS.Models.CreditNoteModel
@{
    ViewBag.Title = "Credit Note";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

@using (Html.BeginForm("CreditNote", "CoreAccounts", FormMethod.Post, new { @class = "", role = "form", @id = "formCRN", enctype = "multipart/form-data" }))
{
    <div class="row hd-tt-bg">
        <div class="col-md-12">
            <h4><b>Credit Note</b> </h4>
        </div>
    </div>
    <div class="row">
        <div class="white-bg ad-navbar">
            <div class="col-md-3 ds-spl-bg">
                <div class="ds-icn">
                    <i class="ion-ios-list-outline "></i>
                </div>
                <div class="ds-tt">
                    <span>Request Reference</span><br />
                    <span>@Html.DisplayFor(m => m.SourceName)</span>
                    @Html.HiddenFor(m => m.Source, new { @id = "Source" })
                  
                </div>
            </div>
            <div class="col-md-3 ds-spl-bg">
                <div class="ds-icn">
                    <i class="ion-ios-calendar-outline"></i>
                </div>
                @if (Model.ReferenceNumber != null)
                {
                    <div class="ds-tt">
                        <span>Ref Number (WF / Tapal)</span>
                        <span>@Html.DisplayFor(m => m.ReferenceNumber)</span>
                        @Html.TextBoxFor(m => m.ReferenceNumber, new { @class = "form-control dis-none" })
                        @Html.TextBoxFor(m => m.SourceReferenceNumber, new { @class = "form-control dis-none" })
                        @Html.Hidden("SourceTapalOrWorkflow", "True")
                        @Html.HiddenFor(m => m.SubCode)
                        @Html.Hidden("TransactionTypeCode", "CRN")
                    </div>
                }
                else
                {
                    <div class="ds-tt">
                        <span>Email Date</span><br />
                        <span>@Html.DisplayFor(m => m.SourceEmail)</span>
                    </div>
                }


            </div>
            <div class="col-md-3 col-md-offset-3">
                <div class="reg-no custom-reg-no">
                    <div class="form-group custom-form-group">
                        
                        <label>Number</label>
                        <h4>@Html.DisplayFor(m => m.CreditNoteNumber)</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
   
    <div class="row">
        <div class="page-wrapper">
            <div class="col-md-12 mt30">

                <div class="col-md-12 col-sm-12 m-b-sm">
                    <div class="row mb-lg">
                        <div class="white-bg ad-navbar text-center">
                            <div class="col-md-4 col-md-offset-4">
                                <label>Invoice Number</label>
                                <h4>@Html.DisplayFor(m => m.InvoiceNumber)</h4>
                                
                                @Html.TextBoxFor(m => m.InvoiceId, new { @class = "form-control dis-none" })
                                @Html.TextBoxFor(m => m.InvoiceType, new { @class = "form-control dis-none" })
                                @Html.ValidationMessageFor(m => m.InvoiceId)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="white-bg ad-navbar">
                            <div class="col-md-3 ds-spl-bg">
                                <div class="ds-icn">
                                    <i class="ion-ios-list-outline "></i>
                                </div>
                                <div class="ds-tt">
                                    <span>Invoice Date</span>
                                    <h4 id="InvoiceDate">@Html.DisplayFor(m => m.InvoiceDate, new { @class = "form-control" })</h4>
                                </div>
                            </div>
                            <div class="col-md-3 ds-spl-bg">
                                <div class="ds-icn">
                                    <i class="ion-ios-list-outline "></i>
                                </div>
                                <div class="ds-tt">
                                    <span>Project No</span>
                                    <h4 id="ProjectNumber">@Html.DisplayFor(m => m.ProjectNumber, new { @class = "form-control" })</h4>
                                </div>
                            </div>

                            <div class="col-md-3 ds-spl-bg">
                                <div class="ds-icn">
                                    <i class="ion-ios-calendar-outline"></i>
                                </div>
                                <div class="ds-tt">
                                    <span>Department Name:</span>
                                    <h4 id="PIDepartmentName">@Html.DisplayFor(m => m.PIDepartmentName, new { @class = "form-control" }) </h4>
                                </div>
                            </div>

                            <div class="col-md-2 ds-spl-bg">
                                <div class="ds-icn">
                                    <i class="ion-android-open"></i>
                                </div>
                                <div class="ds-tt">
                                    <span>PI Name:</span>
                                    <h4 id="NameofPI">@Html.DisplayFor(m => m.NameofPI, new { @class = "form-control" })</h4>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="page-wrapper">

                            <div class="col-md-6 mb-lg">

                                <div class="white-bg">

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Name: </label>
                                                <h4 id="SponsoringAgencyName" class="sb-dts">@Html.DisplayFor(m => m.SponsoringAgencyName, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Address  : </label>
                                                <h4 id="Agencyregaddress" class="sb-dts">@Html.DisplayFor(m => m.Agencyregaddress, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>District: </label>
                                                <h4 id="Agencydistrict" class="sb-dts">@Html.DisplayFor(m => m.Agencydistrict, new { @class = "form-control" })</h4>

                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Pin Code:</label>
                                                <h4 id="AgencyPincode" class="sb-dts">@Html.DisplayFor(m => m.AgencyPincode, new { @class = "form-control" })</h4>

                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>State: </label>
                                                <h4 id="Agencystate" class="sb-dts">@Html.DisplayFor(m => m.Agencystate, new { @class = "form-control" })</h4>

                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>State Code: </label>
                                                <h4 id="Agencystatecode" class="sb-dts">@Html.DisplayFor(m => m.Agencystatecode, new { @class = "form-control" })</h4>

                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>GSTIN: </label>
                                                <h4 id="GSTNumber" class="sb-dts">@Html.DisplayFor(m => m.GSTNumber, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>PAN No: </label>
                                                <h4 id="PAN" class="sb-dts">@Html.DisplayFor(m => m.PAN, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>TAN No: </label>
                                                <h4 id="TAN" class="sb-dts">@Html.DisplayFor(m => m.TAN, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Contact Person: </label>
                                                <h4 id="Agencycontactperson" class="sb-dts">@Html.DisplayFor(m => m.Agencycontactperson, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Email: </label>
                                                <h4 id="AgencycontactpersonEmail" class="sb-dts">@Html.DisplayFor(m => m.AgencycontactpersonEmail, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Contact No: </label>
                                                <h4 id="Agencycontactpersonmobile" class="sb-dts">@Html.DisplayFor(m => m.Agencycontactpersonmobile, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Bank: </label>
                                                <h4 id="BankName" class="sb-dts">@Html.DisplayFor(m => m.BankName, new { @class = "form-control" })</h4>

                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group custom-form-group">
                                                <label>Account Number: </label>
                                                <h4 id="BankAccountNumber" class="sb-dts">@Html.DisplayFor(m => m.BankAccountNumber, new { @class = "form-control" })</h4>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="bl-panel-box custom-tab-pills ">
                                    <div class="bl-panel-hd">
                                        <ul class="nav nav-pills">
                                            <li class="active">
                                                <a data-toggle="pill" href="form1">Previous Receipt</a>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="bl-panel-dts tab-content ">
                                        <div id="form1" class="tab-pane fade active in">
                                            <table class="table wht-table">
                                                <thead>
                                                    <tr>
                                                        <th>Receipt No.</th>
                                                        <th>Date</th>
                                                        <th>Value</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="tbodyPreRec">
                                                    @{
                                                        if (Model != null && Model.PreviousReceiptDetails != null)
                                                        {
                                                            foreach (var item in Model.PreviousReceiptDetails)
                                                            {
                                                                <tr>
                                                                    <td>@Html.DisplayFor(m => item.ReceiptNumber)</td>
                                                                    <td>@Html.DisplayFor(m => item.ReceiptDate)</td>
                                                                    <td>@Html.DisplayFor(m => item.TotalReceiptValue)</td>
                                                                    <td></td>
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                </tbody>
                                            </table>

                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="white-bg ad-navbar mt-20">
                                    <label>Total Invoice Value:</label>
                                    <h4>@Html.DisplayFor(m => m.TotalInvoiceValue)</h4>
                                    @Html.HiddenFor(m => m.TotalInvoiceValue, new { @class = "form-control", @readonly = true })
                                    
                                </div>
                                <div class="white-bg ad-navbar mt-20">
                                    <label>Reason :</label>
                                   <h4>@Html.DisplayFor(m=>m.ResonName)</h4>
                                </div>
                                <div class="white-bg ad-navbar mt-20">
                                    <label>Taxable Value :</label>
                                    <h4>@Html.DisplayFor(m=>m.TaxableAmount)</h4>
                                    @Html.HiddenFor(m => m.TaxableAmount, new { @class = "form-control", @onkeypress = "return ValidateDecimalOnly(event)" })
                                   
                                </div>
                                @if (Model.InvoiceType == 1)
                                {
                                    <div class="white-bg ad-navbar mt-20">
                                        <label>Foreign Currency :</label>
                                        <h4>@Html.DisplayFor(m => m.CurrencyName)</h4>
                                        @Html.TextBoxFor(m => m.Currency, new { @class = "form-control dis-none" })
                                        @Html.ValidationMessageFor(m => m.Currency)
                                    </div>
                                    <div class="white-bg ad-navbar mt-20">
                                        <label>Foreign Currency Value :</label>
                                        <h4>@Html.DisplayFor(m => m.ForeignCurrencyValue)</h4>
                                        @Html.TextBoxFor(m => m.ForeignCurrencyValue, new { @class = "form-control dis-none", @onkeypress = "return ValidateDecimalOnly(event)" })
                                        @Html.ValidationMessageFor(m => m.ForeignCurrencyValue)
                                        @Html.TextBoxFor(m => m.CurrForeignCurrencyValue, new { @class = "form-control dis-none" })
                                        @Html.TextBoxFor(m => m.InvForeignCurrencyValue, new { @class = "form-control dis-none" })
                                        @Html.TextBoxFor(m => m.PrevCrNoteForeignCurrVal, new { @class = "form-control dis-none" })
                                    </div>
                                }
                                <div class="tx-dts">
                                    <h3>Tax Details</h3>
                                    <div class="row">
                                        <label class="col-md-4">CGST :</label>
                                        <h4 class="sb-dts col-md-4" id="lblCGST"></h4>
                                        @Html.HiddenFor(m => m.CGST, new { @class = "form-control", @readonly = true })
                                        <h4 class="sb-dts col-md-4" id="lblCGSTPercentage">
                                            @Html.HiddenFor(m => m.CGSTPercentage, new { @class = "form-control", @readonly = true })

                                        </h4>
                                    </div>
                                    <div class="row">
                                        <label class="col-md-4">SGST :</label>
                                        <h4 class="sb-dts col-md-4" id="lblSGST">@Html.HiddenFor(m => m.SGST, new { @class = "form-control", @readonly = true }) </h4>
                                        <h4 class="sb-dts col-md-4" id="lblSGSTPercentage">
                                            @Html.HiddenFor(m => m.SGSTPercentage, new { @class = "form-control", @readonly = true })
                                        </h4>
                                    </div>
                                    <div class="row">
                                        <label class="col-md-4">IGST :</label>
                                        <h4 class="sb-dts col-md-4" id="lblIGST">@Html.HiddenFor(m => m.IGST, new { @class = "form-control", @readonly = true }) </h4>
                                        <h4 class="sb-dts col-md-4" id="lblIGSTPercentage">
                                            @Html.HiddenFor(m => m.IGSTPercentage, new { @class = "form-control", @readonly = true })
                                        </h4>
                                    </div>
                                    <div class="row dts-bm">
                                        <label class="col-md-4">Total Tax :</label>
                                        <h4 class="sb-dts col-md-4" id="lblTotalTaxValue">@Html.HiddenFor(m => m.TotalTaxValue, new { @class = "form-control", @readonly = true }) </h4>
                                        <h4 class="sb-dts col-md-4" id="lblTotalTaxpercentage">
                                            @Html.HiddenFor(m => m.TotalTaxpercentage, new { @class = "form-control", @readonly = true })
                                        </h4>
                                    </div>
                                </div>

                                <div class="white-bg ad-navbar mt10">
                                    <h4>
                                        <label><b>Total Credit Value: </b></label>
                                    </h4>
                                    <h4 id="lblTotalCreditAmount">
                                        @Html.HiddenFor(m => m.TotalCreditAmount, new { @class = "form-control", @readonly = true })
                                    </h4>
                                </div>


                            </div>

                        </div>

                    </div>
                </div>


                <div class="text-center mt-lg mb-lg">
                    <button type="button" class="btn btn-default" onclick="window.location.href='@Url.Action("CreditNoteList", "CoreAccounts" )';">Close</button>
                </div>

            </div>

        </div>
    </div>
                                                        }
@Html.AntiForgeryToken()
<script>
    @*var dis = '@ViewBag.disabled';
    if (dis != "") {

        $('.ion-trash-a').removeClass();
        $('.form-control').prop('disabled', true);
        $('#ProcessStatusContainer .form-control').prop('disabled', false);
        $('input[type="file"],#btnsave').hide();
        $('.btn-circle').removeClass();
        $('.ion-close-round').removeClass();

    }*@
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    $('#SourceEmailDate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy' }).attr('readonly', 'readonly');
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        $('.selectpicker').selectpicker({
            liveSearch: true,
        });

        var selSource = $('#Source').val();
        $("#divRefNum, #divRefEmailDate").addClass('dis-none');
        if (selSource == '1') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACWorkflowRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
        } else if (selSource == '3') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACTapalRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
        }
        else if (selSource == '2') {
            $('#divRefEmailDate').removeClass('dis-none');
        } else {
            $("#divRefNum").removeClass('dis-none');
        }
        applyAutoComplete($('#InvoiceNumber'), $('#InvoiceId'), "@Url.Action("LoadInvoiceList", "CoreAccounts")", 'changeInvoice');
        calcTtlCrAmount();
        $('select[name="Currency"]').val(@Model.Currency);
        var invtype = $('input[name="InvoiceType"]').val();
        if (invtype == 1) {
            $('#forncurr').removeClass('dis-none');;
            $('#forncurrval').removeClass('dis-none');;
        }
        else {
            $('#forncurr').addClass('dis-none');;
            $('#forncurrval').addClass('dis-none');;
        }
    });
    function changeInvoice() {
        var token = $("input[name=__RequestVerificationToken]").val();
        var invoiceId = $('#InvoiceId').val();
        var searchData = { "__RequestVerificationToken": token, "invoiceId": invoiceId };
        $.ajax({
            url: "@Url.Action("GetInvoiceDetail", "CoreAccounts")",
            type: "POST",
            data: searchData,
            contentType: "application/x-www-form-urlencoded",
            success: function (data) {
                resetData();
                fillData(data);
            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
    }
    function fillData(result) {
        
        $('#formCRN').removeData("validator");
        var taEle = $('#TaxableAmount');
        taEle.attr('data-val-range-max', result.AvailableBalance)
        taEle.attr('data-val-range-min', 1)
        taEle.attr("data-val-range", "The field Taxable Amount must be between 1 and " + result.AvailableBalance);
        $.validator.unobtrusive.parse(document);
        $('#InvoiceDate').text(result.InvoiceDate);
        $('#ProjectNumber').text(result.ProjectNumber);
        $('#PIDepartmentName').text(result.PIDepartmentName);
        $('#NameofPI').text(result.NameofPI);
        $('#SponsoringAgencyName').text(result.SponsoringAgencyName);
        $('#Agencyregaddress').text(result.Agencyregaddress);
        $('#Agencydistrict').text(result.Agencydistrict);
        $('#AgencyPincode').text(result.AgencyPincode);
        $('#Agencycontactpersonmobile').text(result.Agencycontactpersonmobile);
        $('#AgencycontactpersonEmail').text(result.AgencycontactpersonEmail);
        $('#Agencycontactperson').text(result.Agencycontactperson);
        $('#TAN').text(result.TAN);
        $('#PAN').text(result.PAN);
        $('#GSTNumber').text(result.GSTNumber);
        $('#Agencystatecode').text(result.Agencystatecode);
        $('#Agencystate').text(result.Agencystate);
        $('#BankName').text(result.BankName);
        $('#BankAccountNumber').text(result.BankAccountNumber);
       
        $('#IGSTPercentage').val(result.IGSTPercentage);
        
        $('#CGST').val(result.CGST);
        $('#lblCGST').text(result.CGST);
        $('#CGSTPercentage').val(result.CGSTPercentage);
       
        $('#SGST').val(result.SGST);
        $('#lblSGST').text(result.SGST);
        $('#SGSTPercentage').val(result.SGSTPercentage);
      
        $('#IGST').val(result.IGST);
        $('#lblIGST').text(result.IGST);
        $('#TotalInvoiceValue').val(result.TotalInvoiceValue);
       
        $('input[name="ForeignCurrencyValue"]').val(result.ForeignCurrencyValue);
        $('input[name="PrevCrNoteForeignCurrVal"]').val(result.PrevCrNoteForeignCurrVal);
        $('input[name="InvForeignCurrencyValue"]').val(result.InvForeignCurrencyValue);
        $('input[name="CurrForeignCurrencyValue"]').val(result.ForeignCurrencyValue);
        $('input[name="Currency"]').val(result.Currency);
        $('select[name="Currency"]').val(result.Currency);
        $('input[name="InvoiceType"]').val(result.InvoiceType);

        if (result.PreviousReceiptDetails != null){
            for (var i = 0; i < result.PreviousReceiptDetails.length; i++) {
                var row = $('<tr>');
                row.append($('<td>').html(result.PreviousReceiptDetails[i].ReceiptNumber));
                row.append($('<td>').html(result.PreviousReceiptDetails[i].ReceiptDate));
                row.append($('<td>').html(result.PreviousReceiptDetails[i].TotalReceiptValue));
                $('#tbodyPreRec').append(row);
            }
        }
        calcTtlCrAmount();
    }
    $('#TaxableAmount').blur(function () {
        calcTtlCrAmount();
    });
    $('#InvoiceNumber').keyup(function () {
        if ($(this).val() == "") {
            $('#InvoiceId').val('')
            resetData();
        }
    });
    function calcTtlCrAmount() {
        var taxableAmt = parseFloat($('#TaxableAmount').val()) || 0;
        if (taxableAmt > 0) {
            var sgstPct = parseFloat($('#SGSTPercentage').val()) || 0;
            var cgstPct = parseFloat($('#CGSTPercentage').val()) || 0;
            var igstPct = parseFloat($('#IGSTPercentage').val()) || 0;
            $('#lblCGSTPercentage').text(cgstPct);
            $('#lblSGSTPercentage').text(sgstPct);
            $('#lblIGSTPercentage').text(igstPct);
            var sgst = 0, cgst = 0, igst = 0;
            if (sgstPct != 0) {
                sgst = Math.round(taxableAmt * sgstPct / 100);
                $('#SGST').val(sgst);
                $('#lblSGST').text(sgst);
            }
            if (cgstPct != 0) {
                cgst = Math.round(taxableAmt * cgstPct / 100);
                $('#CGST').val(cgst);
                $('#lblCGST').text(cgst);
            }
            if (igstPct != 0) {
                igst = Math.round(taxableAmt * igstPct / 100);
                $('#IGST').val(igst)
                $('#lblIGST').text(igst);
            }
            var ttlTax = sgst + cgst + igst;
            $('#TotalTaxValue').val(ttlTax);
            $('#lblTotalTaxValue').text(ttlTax);
            $('#TotalTaxpercentage').val(sgstPct + cgstPct + igstPct);
            $('#lblTotalTaxpercentage').text(sgstPct + cgstPct + igstPct);
            $('#TotalCreditAmount').val(Math.round(taxableAmt + ttlTax));
            $('#lblTotalCreditAmount').text(Math.round(taxableAmt + ttlTax));
        } else {
            $('#CGST,#SGST,#IGST,#TotalTaxValue,#TotalTaxpercentage,#TotalCreditAmount').val('');
        }
    }
    function resetData() {
        $('#InvoiceDate,#ProjectNumber,#PIDepartmentName,#NameofPI,#SponsoringAgencyName,#Agencyregaddress,#Agencydistrict,#AgencyPincode').text('');
        $('#Agencycontactpersonmobile,#AgencycontactpersonEmail,#Agencycontactperson,#TAN,#PAN,#GSTNumber,#Agencystatecode,#Agencystate,#BankName,#BankAccountNumber').text('');
        $('#TaxableAmount,#CGST,#CGSTPercentage,#SGST,#SGSTPercentage,#IGST,#IGSTPercentage,#TotalTaxValue,#TotalTaxpercentage,#TotalInvoiceValue,#TotalCreditAmount').val('');
        $('input[name="InvoiceType"]').val('');
        $('#tbodyPreRec tr').remove();
    }
    $('#Source').change(function () {
        var selSource = $(this).val();
        $("#SourceReferenceNumber,#ReferenceNumber").val('');
		$("#divRefNum, #divRefEmailDate").addClass('dis-none');
        $("#SourceTapalOrWorkflow").val('False');
		if (selSource == '1') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACWorkflowRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('True');
        } else if (selSource == '3') {
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACTapalRefNumber", "Proposal")");
            $("#divRefNum").removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('True');
        }
        else if (selSource == '2') {
            $('#divRefEmailDate').removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('False');
        } else {
            $("#divRefNum").removeClass('dis-none');
            $("#SourceTapalOrWorkflow").val('True');
        }
    });
    $('#btnSave').click(function (e) {
        e.preventDefault();
        var isValid = $('#formCRN').valid();
        if (!isValid)
            return false;
        isValid = $('#InvoiceId').valid();
        if (!isValid)
            return false;
        $('#formCRN').submit();
    });

    $('#TaxableAmount').on("copy cut paste drop", function () {
        return false;
    });

</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>

