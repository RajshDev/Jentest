@model IOAS.Models.LCOpeningModel
@{
    ViewBag.Title = "LC Retirement";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

@using (Html.BeginForm("LCRetirement", "CoreAccounts", FormMethod.Post, new { @class = "", role = "form", @id = "formSI", enctype = "multipart/form-data" }))
{
    <div class="row hd-tt-bg">
        <div class="col-md-12">
            <h4><b>LC Retirement</b> </h4>
        </div>
    </div>
    <div class="row">
        <div class="white-bg ad-navbar">
            @*<div class="col-md-3 ds-spl-bg">
                <div class="ds-icn">
                    <i class="ion-ios-list-outline "></i>
                </div>
                <div class="ds-tt">
                    <span class="required">Request Reference</span>
                    @Html.DropDownListFor(m => m.Source, new SelectList(ViewBag.SourceList, "codevalAbbr", "CodeValDetail"), "Select any",
         new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Source)
                    @Html.HiddenFor(m => m.NeedUpdateTransDetail)
                    @Html.HiddenFor(m => m.LCOpeningId)
                </div>
            </div>
            <div class="col-md-3 ds-spl-bg">
                <div class="ds-icn">
                    <i class="ion-ios-calendar-outline"></i>
                </div>
                <div class="ds-tt" id="divRefNum">
                    <span class="required">Ref Number (WF / Tapal)</span>
                    @Html.DropDownListFor(m => m.SourceReferenceNumber, new SelectList(ViewBag.SourceRefNumberList, "id", "name"), "Select any",
                        new { @class = "form-control" })
                    @Html.TextBoxFor(m => m.ReferenceNumber, new { @class = "form-control" })
                    @Html.TextBoxFor(m => m.SourceReferenceNumber, new { @class = "form-control dis-none" })
                    @Html.ValidationMessageFor(m => m.SourceReferenceNumber)
                    @Html.Hidden("SourceTapalOrWorkflow", "True")
                    @Html.HiddenFor(m => m.SubCode)
                    @Html.Hidden("TransactionTypeCode", "LCO")
                    @Html.TextBoxFor(m => m.IsEstablish, new { @class = "form-control dis-none", @id = "txtIsEstablish" })
                    @Html.TextBoxFor(m => m.IsEditMode, new { @class = "form-control dis-none", @id = "txtIsEditMode" })
                </div>
                <div class="dis-none ds-tt" id="divRefEmailDate">
                    <span class="required">Email Date</span>
                    @Html.EditorFor(m => m.SourceEmailDate, new { @class = "form-control" })
                    <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.SourceEmailDate)</div>
                </div>
            </div>*@

            
            @*<div class="col-md-3 pull-right">
                <div class="reg-no custom-reg-no">
                    <div class="form-group custom-form-group">
                        <label>Number</label>
                        <h4>@Html.DisplayFor(m => m.ReferenceNumber)</h4>
                    </div>
                </div>
            </div>*@
        </div>
        <div class="row">

            <div class="col-md-12 mt30">
                <ul class="nav nav-pills custom-nav-pills">
                    <li class="active"><a href="javascript:void(0)"><span>01</span>LC Retirement Info</a></li>
                    @*<li><a href="javascript:void(0)"><span>02</span>Commitment Details</a></li>
                    <li><a href="javascript:void(0)"><span>03</span>Transaction Details</a></li>
                    <li><a href="javascript:void(0)"><span>04</span>CheckList Details</a></li>
                    <li><a href="javascript:void(0)"><span>05</span>Document Details</a></li>*@
                </ul>

                <div class="tab">
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="bl-lg-panel-box pb-null">
                                    <div class="cmn-panel-box">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <div class="vh-grid-tb mt-null mb-lg">
                                                            <div class="vh-grid-cell grey-bg">
                                                                <div class="grey-bg-adj">

                                                                    <div class="row">
                                                                        <div class="col-md-3">
                                                                            <a href="javascript:void(0)" id="btnViewDetails" class="btn btn-primary">View LC Details</a>
                                                                        </div>
                                                                        
                                                                    </div>

                                                                    <div class="row mt-20">
                                                                        <div class="col-md-12">
                                                                            <div class="lt-bl-bg">
                                                                                <div class="row">
                                                                                    <div class="col-md-12">
                                                                                        <h4 class="text-center">Ammendment History</h4>
                                                                                    </div>
                                                                                </div>
                                                                                
                                                                                <div class="m-b-sm">
                                                                                    <div class="rec-tb-scrl">
                                                                                        <table class="table alter-table">
                                                                                            <thead>
                                                                                                <tr>
                                                                                                    <th>Amendment Date</th>
                                                                                                    <th>Seq. No.</th>
                                                                                                    <th>View</th>
                                                                                                </tr>
                                                                                            </thead>
                                                                                            <tbody>
                                                                                                @{
                                                                                                    if (Model.AmendSeqNumber != null)
                                                                                                    {
                                                                                                        if (Model.AmendSeqNumber.Count() > 0)
                                                                                                        {
                                                                                                            for (int i = 0; i < Model.AmendSeqNumber.Count(); i++)
                                                                                                            {
                                                                                                            <tr>
                                                                                                                <td>@Html.DisplayFor(m => m.AmendDte[i], new { @class = "form-control", @id = "txtPreviousReceiptdate", @readonly = true })</td>
                                                                                                                <td>@Html.DisplayFor(m => m.AmendSeqNumber[i], new { @class = "form-control", @id = "txtPreviousReceiptnumber", @readonly = true })</td>
                                                                                                                @Html.HiddenFor(m => m.AmendId[i], new { @id = "txtAmmendId" })                                                                                                                
                                                                                                                <td>
                                                                                                                    @*<a href="javascript:void(0)" id="btnViewAmends">Click Here</a>*@
                                                                                                                    @{var btnEdit = "btnEdit_" + Model.AmendId[i];
                                                                                                                    }
                                                                                                                    <span>
                                                                                                                        @*<a id="@btnView" href="javascript:void(0)" class="view-mr-btn"><i class="ion-edit"></i> <i class="ion-more"></i> </a>*@
                                                                                                                        <a id="@btnEdit" href="javascript:void(0)"> Click Here </a>
                                                                                                                    </span>
                                                                                                                </td>
                                                                                                            </tr>
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                            </tbody>
                                                                                        </table>
                                                                                    </div>
                                                                                </div>

                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                    <div class="col-md-4">
                                                        <div class="reg-no custom-reg-no" style="margin-bottom: 0px;padding: 5px 15px;">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <div class="form-group custom-form-group">
                                                                        <label>Reference Number</label>
                                                                        <h4>@Html.DisplayFor(m => m.ReferenceNumber)</h4>
                                                                        @Html.HiddenFor(m => m.ReferenceNumber)
                                                                        @Html.HiddenFor(m => m.NeedUpdateTransDetail)
                                                                        @Html.HiddenFor(m => m.LCRetirementId)
                                                                        @Html.HiddenFor(m => m.LCOpeningId)
                                                                        @Html.HiddenFor(m => m.SubCode)
                                                                        @Html.Hidden("TransactionTypeCode", "LCR")
                                                                    </div>
                                                                </div>
                                                                @*<div class="col-md-3">
                                                                    <div class="form-group custom-form-group">
                                                                        <label>Seq.No.</label>
                                                                        <h4>@Html.DisplayFor(m => m.LCAmmendSeqNumber)</h4>
                                                                        @Html.HiddenFor(m => m.LCAmmendSeqNumber)
                                                                        @Html.HiddenFor(m => m.DraftLCNumber)
                                                                    </div>
                                                                </div>*@

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-4 mt-40">
                                                        <div class="vh-grid-tb mt-null mb-lg">
                                                            <div class="vh-grid-cell grey-bg">
                                                                <div class="grey-bg-adj">
                                                                    
                                                                    <div class="row">                                                                        
                                                                        <div class="col-md-12">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">FLC Number</label>
                                                                                @Html.TextBoxFor(m => m.DraftLCNumber, new { @class = "form-control", @id = "txtLCNumber", @readonly = true })
                                                                                @Html.ValidationMessageFor(m => m.DraftLCNumber)
                                                                            </div>
                                                                        </div>                                                                       
                                                                    </div>
                                                                    <div class="row">
                                                                        <div class="col-md-12">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">ABLC Number</label>
                                                                                @Html.TextBoxFor(m => m.ABLCNumber, new { @class = "form-control", @id = "txtABLCNumber" })
                                                                                @Html.ValidationMessageFor(m => m.ABLCNumber)
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="row">
                                                                        <div class="col-md-12">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">LC Opening Date</label>
                                                                                @Html.TextBoxFor(m => m.LCCrtdDate, new { @class = "form-control", @id = "txtLCOpenDate", @readonly = true, @disabled = true })
                                                                                @Html.ValidationMessageFor(m => m.LCCrtdDate)
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="row">
                                                                        <div class="col-md-12">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">Last Amendment Date</label>
                                                                                @Html.TextBoxFor(m => m.lastAmendDate, new { @class = "form-control", @id = "txtlastammenddate", @readonly = true })
                                                                                @Html.ValidationMessageFor(m => m.lastAmendDate)
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <div class="row">
                                                                        <div class="col-md-12">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">LC Retirement Date</label>
                                                                                @Html.TextBoxFor(m => m.LCRetireDate, new { @class = "form-control", @id = "txtlastammenddate", @readonly = true })
                                                                                @Html.ValidationMessageFor(m => m.LCRetireDate)
                                                                                @Html.TextBoxFor(m => m.LCRetireSeqNo, new { @class = "form-control dis-none", @id = "txtretireseqno" })
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                    </div>
                                                    
                                                </div>
                                                <div class="row">
                                                    
                                                    <div class="col-md-12">
                                                        <div class="vh-grid-tb mt-null mb-lg">
                                                            <div class="vh-grid-cell grey-bg">
                                                                <div class="grey-bg-adj">
                                                                    <div class="row">
                                                                        <div class="col-md-2">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">LC Value in Foreign Currency</label>
                                                                                @Html.TextBoxFor(m => m.LCRetirementAmtinForgnCurrency, new { @class = "form-control", @id = "txtretireamtinforncurr", @required = "required", @onchange = "calculatenetamount()" })
                                                                                @Html.ValidationMessageFor(m => m.LCRetirementAmtinForgnCurrency)
                                                                                @Html.TextBoxFor(m => m.LCPrevRetirementAmtinForgnCurrency, new { @class = "form-control dis-none", @id = "txtprevRemittanceamtinforgncurr" })
                                                                                @Html.TextBoxFor(m => m.LCCurrRetirementAmtinForgnCurrency, new { @class = "form-control dis-none", @id = "txtcurrRemittanceamtinforgncurr" })
                                                                                @Html.TextBoxFor(m => m.LCDraftAmount, new { @class = "form-control dis-none", @id = "txtlcdraftamt" })
                                                                                @Html.TextBoxFor(m => m.LCRetirementAmountinWords, new { @class = "form-control dis-none", @id = "txtlcretireamtinwords" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-3">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">Currency</label>
                                                                                @Html.DropDownListFor(m => m.Currency, new SelectList(ViewBag.Currency, "id", "name"), "Select any", new { @class = "form-control mt20", @required = "required", @disabled = true})
                                                                                @Html.ValidationMessageFor(m => m.Currency)
                                                                                @Html.TextBoxFor(m => m.Currency, new { @class = "form-control dis-none", @id = "txtRemittanceCurrency" })
                                                                            </div>
                                                                        </div>
                                                                        @*<div class="col-md-2">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">Exchange Rate Equivalant to INR</label>
                                                                                @Html.TextBoxFor(m => m.FXRate, new { @class = "form-control", @id = "txtExchangeRate", @required = "required", @onchange = "calculatenetamount()" })
                                                                                @Html.ValidationMessageFor(m => m.FXRate)
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-2">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">Exchange Rate as on Date</label>
                                                                                @Html.TextBoxFor(m => m.FXRateAsOnDate, new { @class = "form-control", @id = "txtFXRate", @required = "required" })
                                                                                @Html.ValidationMessageFor(m => m.FXRateAsOnDate)
                                                                            </div>
                                                                        </div>
                                                                        <div class="col-md-3">
                                                                            <div class="form-group custom-form-group">
                                                                                <label class="required">INR Value</label>
                                                                                @Html.TextBoxFor(m => m.LCRetireEquivalentINRValue, new { @class = "form-control mt20", @id = "txtINRValue", @required = "required", @onchange = "calculatenetamount()" })
                                                                                @Html.ValidationMessageFor(m => m.LCRetireEquivalentINRValue)
                                                                            </div>
                                                                        </div>*@
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                </div>
                                                
                                                @*<div class="row">
                                                    <div class="col-md-12">
                                                        <div class="lt-bl-bg">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <h4>Deductions</h4>
                                                                </div>
                                                            </div>
                                                            <div class="text-right mb20">
                                                                <a href="javascript:void(0)" id="btnAdddeducts" class="btn btn-primary">Add New</a>
                                                            </div>

                                                            <div class="row  mb-md">
                                                                <div class="col-md-12">
                                                                    <table class="table table-bordered">
                                                                        <thead>
                                                                            <tr>
                                                                                <th style="width:650px;">Reason For Deduction</th>
                                                                                <th style="width:250px;">Amount</th>                                                                                
                                                                                <th style="width:50px;"></th>
                                                                            </tr>
                                                                        </thead>
                                                                        <tbody id="tbodyclause">
                                                                            @if (Model.RetireDeducts != null)

                                                                            {
                                                                                var count = 0;
                                                                                foreach (var item in Model.RetireDeducts)
                                                                                {
                                                                                    //var category = "PCFDetails[" + count + "].FacultyCategory";
                                                                                    var id = "RetireDeducts[" + count + "].RetireDeductsId";
                                                                                    var reason = "RetireDeducts[" + count + "].ReasonForDeduction";
                                                                                    var amt = "RetireDeducts[" + count + "].LCRetireDeductsAmount";
                                                                                    count++;
                                                                                    <tr>

                                                                                        <td class="tdLCCondtns">
                                                                                            @Html.TextBox(@reason, item.ReasonForDeduction, new { @class = "form-control" })
                                                                                            @Html.TextBox(@id, item.RetireDeductsId, new { @class = "form-control dis-none" })
                                                                                            @Html.ValidationMessage(@reason)
                                                                                            @Html.Hidden("RetireDeducts.Index", @count)
                                                                                        </td>

                                                                                        <td>
                                                                                            @Html.TextBox(@amt, item.LCRetireDeductsAmount, new { @class = "form-control", @onchange = "calculateamount()", @onkeypress = "calculatenetamount()" })
                                                                                            @Html.ValidationMessage(@amt)
                                                                                        </td>
                                                                                        
                                                                                        <td>
                                                                                            <a href="javascript:void(0)" class="btn-circle dis-none removeDeducts"><i class="ion-trash-a"></i></a>
                                                                                        </td>
                                                                                    </tr>
                                                                                    
                                                                                }
                                                                            }
                                                                            else
                                                                            {
                                                                                <tr>

                                                                                    <td class="tdLCCondtl">
                                                                                        @Html.TextBox("RetireDeducts[0].ReasonForDeduction", "", new { @class = "form-control" })
                                                                                        @Html.TextBox("RetireDeducts[0].RetireDeductsId", "", new { @class = "form-control dis-none" })
                                                                                        @Html.Hidden("RetireDeducts.Index", 0)
                                                                                        @Html.ValidationMessage("RetireDeducts[0].ReasonForDeduction")
                                                                                    </td>
                                                                                    <td>
                                                                                        @Html.TextBox("RetireDeducts[0].LCRetireDeductsAmount", "", new { @class = "form-control", @onchange = "calculateamount()" })
                                                                                        @Html.ValidationMessage("RetireDeducts[0].LCRetireDeductsAmount")
                                                                                    </td>
                                                                                    
                                                                                    <td>
                                                                                        <a href="javascript:void(0)" class="btn-circle dis-none removeDeducts"><i class="ion-trash-a"></i></a>
                                                                                    </td>
                                                                                </tr>
                                                                            }
                                                                        </tbody>
                                                                    </table>

                                                                </div>

                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">                                                                                                     
                                                    <div class="col-md-3 pull-right">
                                                        <div class="form-group custom-form-group">
                                                            <label class="required">Total Deduction Value</label>
                                                            @Html.TextBoxFor(m => m.LCRetireTotalDeduction, new { @class = "form-control", @id = "txtRetireTotalDeduction", @required = "required" })
                                                            @Html.ValidationMessageFor(m => m.LCRetireTotalDeduction)
                                                        </div>
                                                    </div>
                                                    <div class="col-md-3 pull-right">
                                                        <div class="form-group custom-form-group">
                                                            <label class="required">Net Total Value</label>
                                                            @Html.TextBoxFor(m => m.LCRetireNetTotalAmt, new { @class = "form-control", @id = "txtRetireNetTotalAmt", @required = "required", @onkeypress = "return ValidateDecimalOnly(event)" })
                                                            @Html.ValidationMessageFor(m => m.LCRetireNetTotalAmt)
                                                        </div>
                                                    </div>   
                                                </div>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*<div class="tab">
                    @Html.Partial("_CommitmentDetails", Model.CommitmentDetail)
                </div>

                <div class="tab">
                    @Html.Partial("_TransactionDetails", Model)
                </div>
                <div class="tab">
                    <div class="col-md-12 col-sm-12 m-b-sm">
                        <div class="">
                            @Html.Partial("_CheckListDetail", Model.CheckListDetail)
                        </div>
                        <div>
                            @Html.HiddenFor(m => m.CheckListVerified_By)
                            @Html.HiddenFor(m => m.CheckListVerifierName)
                            <div class="col-md-3 col-md-offset-9">
                                <div class="form-group custom-form-group">
                                    <label>Verified by</label>
                                    <h4 id="Verified_ByName">@Html.DisplayFor(m => m.CheckListVerifierName)</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="tab">
                    <div class="col-md-12 col-sm-12 m-b-sm">
                        <div class="">
                            @Html.Partial("_DocumentDetail", Model.DocumentDetail)
                        </div>
                    </div>
                </div>*@

                <div class="custom-nav-btn text-right">
                    <button type="button" class="btn btn-default pull-left" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                    <button type="button" class="btn btn-primary pull-right" id="nextBtn" onclick="nextPrev(1)">Next</button>
                    <button type="button" class="btn btn-default pull-right" onclick="window.location.href='@Url.Action("LCRetirementList", "CoreAccounts")';">Close</button>
                </div>

            </div>


        </div>
    </div>
}
<div id="ValidationModal" class="modal fade modal-warning" role="dialog">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <i class="ion-android-warning"></i>
                <h3 class="modal-title">Warning</h3>
            </div>
            <div class="modal-body">

                <p id="MsgValidation"></p>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>

    </div>
</div>
@Html.AntiForgeryToken()
<div id="popup"></div>
<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    // $('#TravelToDate, #TravelFromDate').datepicker({ minDate: 0, dateFormat: 'dd-MM-yy', changeYear: true });
    $('input[name="RequestDate"]').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true });
    $('#SourceEmailDate, #srchFromDate, #srchToDate, #txtAmmendmentDate, #txtFXRate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true });
    $('#srchToDate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true }).datepicker("setDate", "0");
    var defaultFromDate = moment(new Date()).add(-10, 'days').toDate();
    $('#srchFromDate').datepicker({ maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true }).datepicker("setDate", defaultFromDate);
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
            CalculateDeductionTotal();
            GetTransactionDetails();
        }
        $('.selectpicker').selectpicker({
            liveSearch: true
        });
        var selSource = $('#Source').val();
        $("#divRefNum, #divRefEmailDate").addClass('dis-none');
        if (selSource == '1') {
            $("#divRefNum").removeClass('dis-none');
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACWorkflowRefNumber", "Proposal")");
        } else if (selSource == '3') {
            $("#divRefNum").removeClass('dis-none');
            applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACTapalRefNumber", "Proposal")");
        }
        else if (selSource == '2') {
            $('#divRefEmailDate').removeClass('dis-none');
        } else {
            $("#divRefNum").removeClass('dis-none');
        }

        $('input[name="LCRetirementAmtinForgnCurrency"]').each(function () {            
            var amtinforgncurr = parseFloat($(this).val()) || 0;            
            var num = parseFloat($('input[name="LCRetirementAmtinForgnCurrency"]').val());
            var str = inWords(num);
            var dec = RsPaise(num * 100 / 100);
        });
        @*var lcrdeducts = @Html.Raw(Json.Encode(Model.RetireDeducts));
        $.each(lcrdeducts, function (i, result) {
            if (i == 0) {
                var trEle = $('#tbodyclause tr:first');
                $('#tbodyclause tr').not(':first').remove();
                $(trEle).find("input[name='RetireDeducts.Index']").val(i);

                trEle.find('input[name$=".RetireDeductsId"]').val(result.RetireDeductsId);
                trEle.find('input[name$=".ReasonForDeduction"]').val(result.ReasonForDeduction);
                trEle.find('input[name$=".LCRetireDeductsAmount"]').val(result.LCRetireDeductsAmount);

            } else {
                var trEleNew = $('#tbodyclause tr:first').clone();
                $(trEleNew).find('a.dis-none').removeClass('dis-none');
                $(trEleNew).find("input[name='RetireDeducts.Index']").val(i);
                $(trEleNew).find("input, select").each(function () {
                    $(this).attr("name", $(this).attr("name").replace(/\d+/, i));
                    $(this).attr("id", $(this).attr("id").replace(/\d+/, i));
                    //$(this).attr("code", $(this).attr("id").replace(/\d+/, i));
                });
                $(trEleNew).find("span[data-valmsg-for]").each(function () {
                    $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, i));
                });

                trEleNew.find('input[name$=".RetireDeductsId"]').val(result.RetireDeductsId);
                trEleNew.find('input[name$=".ReasonForDeduction"]').val(result.ReasonForDeduction);
                trEleNew.find('input[name$=".LCRetireDeductsAmount"]').val(result.LCRetireDeductsAmount);

                $('#tbodyclause').append(trEleNew);
            }
        });
        CalculatePaymentValue();
        CalculateDeductionTotal();*@
        $("select[name='Currency']").val(@Model.Currency);
    });


    //$('#fromdate, #todate').datepicker({ dateFormat: 'dd-MM-yy', changeYear: true, yearRange: '-10:+30' });
    $('#Source').change(function () {
        var selSource = $(this).val();
        //var select = $("#SourceReferenceNumber");
        //select.empty();
        $("#SourceReferenceNumber,#ReferenceNumber").val('');
        $("#divRefNum, #divRefEmailDate").addClass('dis-none');
        $("#SourceTapalOrWorkflow").val('False');
        if (selSource == '1') {
            @*$.getJSON("@Url.Action("GetWorkflowRefNumber","Proposal")",
             function (locationdata) {
                 fillMasterDropDown(select,locationdata);
             });*@
        applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACWorkflowRefNumber", "Proposal")");
        $("#divRefNum").removeClass('dis-none');
        $("#SourceTapalOrWorkflow").val('True');
    } else if (selSource == '3') {
        @*$.getJSON("@Url.Action("GetTapalRefNumber","Proposal")",
            function (locationdata) {
                fillMasterDropDown(select,locationdata);
            });*@
        applyAutoComplete($('#ReferenceNumber'), $('#SourceReferenceNumber'), "@Url.Action("GetACTapalRefNumber", "Proposal")");
        $("#divRefNum").removeClass('dis-none');
        $("#SourceTapalOrWorkflow").val('True');
    }
    else if (selSource == '2') {
        $('#divRefEmailDate').removeClass('dis-none');
        $("#SourceTapalOrWorkflow").val('False');
    } else {
            $("#divRefNum").removeClass('dis-none');
    $("#SourceTapalOrWorkflow").val('True');
    }
    $("input[name='ProjectNumber']").each(function () {
        projectChange($(this), 'U');
    });

    });
    $('#btnViewDetails').on('click', function () {
        var lcopeningid = $('input[name="LCOpeningId"]').val();
        $.ajax({
            type: "GET",
            url: '@Url.Action("_ViewLCDetails", "CoreAccounts")',
            data: {
                LCOpeningid: lcopeningid
            },
            contentType: "application/x-www-form-urlencoded",
            success: function (data) {
                $("#popup").html(data);
                $('#TABCModal').modal('toggle');
            }
        });

    });
    $('[id^="btnEdit_"]').on('click', function () {
        var lcammendid = $('input[name="LCOpeningId"]').val();
        var ID = $(this).attr("id");
        lcammendid = ID.substr(ID.lastIndexOf("_") + 1);
        $.ajax({
            type: "GET",
            url: '@Url.Action("_ViewAmendDetails", "CoreAccounts")',
            data: {
                LCAmmendid: lcammendid
            },
            contentType: "application/x-www-form-urlencoded",
            success: function (data) {
                $("#popup").html(data);
                $('#TABCModal').modal('toggle');
            }
        });

    });
    function formSave(){
        var isValid = $('#formSI').valid();
        if (!isValid)
            return false;
        var doctypevalues = [];
        $('select[name$=".DocumentType"]').each(function (idx, val) { doctypevalues.push($(val).val()); });
        doctypevalues.sort();
        // duplicate check
        for (var k = 1; k < doctypevalues.length; ++k) {
            if (doctypevalues[k] == doctypevalues[k - 1]) {
                $('#alert').html("Selected attachment type already exist. Please select a different attachment type.");
                $('#Validation').modal('toggle');
                return false;
            }
            isValid = true;
        }

        if (isValid)
            $('#formSI').submit();
    }


    function parseDate(s) {
        var months = {
            january: 0, february: 1, march: 2, april: 3, may: 4, june: 5,
            july: 6, august: 7, september: 8, october: 9, november: 10, december: 11
        };
        var p = s.split('-');
        return new Date(p[2], months[p[1].toLowerCase()], p[0]);
    }

    $(document).on('change', 'input[name$=".Amount"]', function () {
        calculateamount();
    });

    $('#txtdespatchMode').change(function () {

        var dsptchmode = $(this).val();
        $.getJSON("@Url.Action("GetLCDocumentInfoDetails", "CoreAccounts")", { DespatchMode: dsptchmode },
                    function (locationdata) {
                        $.each(locationdata, function (index, itemData) {
                            $('#docinfoContent').html(locationdata.Condition);
                        });

                    });
    });
    $('#txtretireamtinforncurr').change(function () {
        var amtinforgncurr = parseFloat($(this).val()) || 0;
        var fxrate = parseFloat($('#txtExchangeRate').val()) || 0;
        var inrvalue = (amtinforgncurr * fxrate).toFixed(2);
        $('#txtINRValue').val(inrvalue);
        calculatenetamount();
        var lcdraftamt = parseFloat($('#txtlcdraftamt').val()) || 0;
        var prevamtinforgncurr = parseFloat($('#txtprevRemittanceamtinforgncurr').val()) || 0;
        var curramtinforgncurr = parseFloat($('#txtcurrRemittanceamtinforgncurr').val()) || 0;
        var diffval = lcdraftamt - (prevamtinforgncurr + amtinforgncurr - curramtinforgncurr)
        if(diffval <= 0)
        {
            $("#alert").text('LC Retirement value cannot exceed the total LC Value');
            $('#Validation').modal('show');
        }
        var num = parseFloat($('#txtretireamtinforncurr').val());
        var str = inWords(num);
        var dec = RsPaise(num * 100 / 100);
    });
    
    function inWords(amount) {
        var words = new Array();
        words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;
        amount = amount.toString();
        var atemp = amount.split(".");
        var number = atemp[0].split(",").join("");
        var n_length = number.length;
        var words_string = "";
        if (n_length <= 9) {
            var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var received_n_array = new Array();
            for (var i = 0; i < n_length; i++) {
                received_n_array[i] = number.substr(i, 1);
            }
            for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
                n_array[i] = received_n_array[j];
            }
            for (var i = 0, j = 1; i < 9; i++, j++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    if (n_array[i] == 1) {
                        n_array[j] = 10 + parseInt(n_array[j]);
                        n_array[i] = 0;
                    }
                }
            }
            value = "";
            for (var i = 0; i < 9; i++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    value = n_array[i] * 10;
                } else {
                    value = n_array[i];
                }
                if (value != 0) {
                    words_string += words[value] + " ";
                }
                if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Crores ";
                }
                if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Lakhs ";
                }
                if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Thousand ";
                }
                if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                    words_string += "Hundred and ";
                } else if (i == 6 && value != 0) {
                    words_string += "Hundred ";
                }
            }
            words_string = words_string.split(" ").join(" ");
        }
        return words_string;
    }
    function RsPaise(n) {
        //var currencycode = $('input[name="RemittanceCurrencyCode"]').val();
        nums = n.toString().split('.')
        var whole = inWords(nums[0])
        if (nums[1] == null) nums[1] = 0;
        if (nums[1].length == 1) nums[1] = nums[1] + '0';
        if (nums[1].length > 2) { nums[1] = nums[1].substring(2, length - 1) }
        if (nums.length == 2) {
            if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };
            var fraction = inWords(nums[1])
            if (whole == '' && fraction == '') { op = 'Zero only'; }
            if (whole == '' && fraction != '') { op = fraction + ' Cents' + ' only'; }
            if (whole != '' && fraction == '') { op = whole + ' only'; }
            if (whole != '' && fraction != '') { op = whole + 'And ' + fraction + 'Cents' + ' only'; }
            amt = $('#txtretireamtinforncurr').val();
            if (amt > 999999999.99) { op = 'Oops!!! The amount is too big to convert'; }
            if (isNaN(amt) == true) { op = 'Error : Amount in number appears to be incorrect. Please Check.'; }
            $("input[name='LCRetirementAmountinWords']").val(op);
        }
    }
    $('#txtExchangeRate').change(function () {
        var fxrate  = parseFloat($(this).val()) || 0;
        var amtinforgncurr = parseFloat($('#txtretireamtinforncurr').val()) || 0;
        var inrvalue = (amtinforgncurr * fxrate).toFixed(2);
        $('#txtINRValue').val(inrvalue);
        calculatenetamount();
    });
    $(document).on('change', 'input[name$=".LCRetireDeductsAmount"]', function () {
        calculatenetamount()
    });
    function calculateamount() {
        //var deductamt = $(this).val();
        var totaldeductamt = 0;
        $('#tbodyclause tr').each(function (idx, val) {
            var amount = parseFloat($(this).closest('tr').find('input[name$=".LCRetireDeductsAmount"]').val()) || 0;
            if (!isNaN(amount)) {
                totaldeductamt += amount;
            }
        });
        $('#txtRetireTotalDeduction').val(totaldeductamt);
    };
    function calculatenetamount() {
        //var deductamt = $(this).val();
        var totaldeductamt = parseFloat($('#txtRetireTotalDeduction').val()) || 0;
        var totalinramt = parseFloat($('#txtINRValue').val()) || 0;
        var totalnetamt = (totalinramt - totaldeductamt).toFixed(2);
        $('#txtRetireNetTotalAmt').val(totalnetamt);
    };
    $('#btnAddCondition').click(function () {
        var cln = $('#tbodyCondtns tr:first').clone().find("select,input,textarea").val("").end();
        // $(cln).find('.tdAdvAmt, .tdTaxAmt, .tdNetAmt, .tdTaxCode').text('');
        $(cln).find('a.dis-none').removeClass('dis-none');
        $(cln).find('.ion-trash-a').show();
        $(cln).find('a').addClass('removeCondtns');
        $(cln).find('input[name$=".LCOpeningClause"]').removeAttr('readonly');
        $(cln).find('input[name$=".LCOpeningConditions"]').removeAttr('readonly');
        var index = $('#tbodyCondtns tr:last').find("input[name='Conditions.Index']").val();
        index = parseInt(index) + 1;
        $(cln).find("input[name='Conditions.Index']").val(index);
        $(cln).find("input, select").each(function () {
            $(this).attr("name", $(this).attr("name").replace(/\d+/, index));
            // $(this).attr("id", $(this).attr("id").replace(/\d+/, index));
            // $(this).attr("code", $(this).attr("id").replace(/\d+/, index));
        });
        $(cln).find("span[data-valmsg-for]").each(function () {
            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, index));
        });
        $(cln).find('.hasDatepicker').attr("id", "").removeClass('hasDatepicker').removeData('datepicker').unbind().datepicker({
            maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true
        })
        $('#tbodyCondtns').append(cln);

    });
    $(document).on('click', 'a.removeCondtns', function () {
        $(this).closest('tr').remove();

    });

    $('#btnAdddeducts').click(function () {
        var cln = $('#tbodyclause tr:first').clone().find("select,input,textarea").val("").end();
        // $(cln).find('.tdAdvAmt, .tdTaxAmt, .tdNetAmt, .tdTaxCode').text('');
        $(cln).find('a.dis-none').removeClass('dis-none');

        var index = $('#tbodyclause tr:last').find("input[name='RetireDeducts.Index']").val();
        index = parseInt(index) + 1;
        $(cln).find("input[name='RetireDeducts.Index']").val(index);
        $(cln).find("input, select").each(function () {
            $(this).attr("name", $(this).attr("name").replace(/\d+/, index));
            // $(this).attr("id", $(this).attr("id").replace(/\d+/, index));
            // $(this).attr("code", $(this).attr("id").replace(/\d+/, index));
        });
        $(cln).find("span[data-valmsg-for]").each(function () {
            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, index));
        });
        $(cln).find('.hasDatepicker').attr("id", "").removeClass('hasDatepicker').removeData('datepicker').unbind().datepicker({
            maxDate: 0, dateFormat: 'dd-MM-yy', changeYear: true
        })
        $('#tbodyclause').append(cln);

    });
    $(document).on('click', 'a.removeDeducts', function () {
        $(this).closest('tr').remove();

    });

    function AddNewExpense(){
        //var stateCode = $('#lblStateCode').html();
        //var BillType = $('#BillType').val();
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetAddNewExpenseDetails", "CoreAccounts")",
            data: { "typeCode": "LCR","tSubCode" : "1"},
            traditional: true,
            dataType: "json",
            success: function (result) {
                $.each(result.ExpenseDetail, function (i, item) {
                    var cln = $('#tbodyExpenseList tr:first').clone().find("select,input").val("").end();
                    $(cln).find('a.dis-none').removeClass('dis-none');
                    var index = $('#tbodyExpenseList tr:last').find("input[name='ExpenseDetail.Index']").val();
                    index = parseInt(index) + 1;
                    $(cln).find("input[name='ExpenseDetail.Index']").val(index);
                    $(cln).find('input[name$=".TransactionType"]').val(item.TransactionType);
                    $(cln).find('#lblTransType').text(item.TransactionType);
                    $(cln).find('input[name$=".IsJV"]').val(item.IsJV);
                    $(cln).find("input, select").each(function () {
                        $(this).attr("name", $(this).attr("name").replace(/\d+/, index));
                        $(this).attr("id", $(this).attr("id").replace(/\d+/, index));
                    });
                    $(cln).find("span[data-valmsg-for]").each(function () {
                        $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, index));
                    });

                    var selectGroup = $(cln).find("select[name$='.AccountGroupId']");
                    selectGroup.empty();
                    $.each(item.AccountGroupList, function (index, itemData) {
                        selectGroup.append($('<option/>', {
                            value: itemData.id,
                            text: itemData.name,
                        }));
                    });

                    var selectHead = $(cln).find("select[name$='.AccountHeadId']");
                    selectHead.empty();
                    $.each(item.AccountHeadList, function (index, itemData) {
                        selectHead.append($('<option/>', {
                            value: itemData.id,
                            text: itemData.name,
                        }));
                    });
                    $('#tbodyExpenseList').append(cln);
                });
            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
    }
    function GetTransactionDetails() {
        var interstate_f = false;
        //var typecode = $('#transtypecode').val();
        EmptyExpenseDeductionDetails();
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetTransactionDetails", "CoreAccounts")",
            data: { "typeCode": "LCR", "tSubCode" : "1", },
            traditional: true,
            dataType: "json",
            success: function (result) {
                $.each(result.ExpenseDetail, function (i, item) {
                    //var amt = 0;
                    //$("#tbodyCommitmentSelList [name$='.HeadName'][value='"+item.BudgetHeadName+"']").each(function(){
                    //    var elePayment = $(this).closest('td').find("input[name$='.PaymentAmount']");
                    //    var parseVal = parseFloat($(elePayment).val());
                    //    if (!isNaN(parseVal))
                    //        amt = amt + parseVal;
                    //});
                    if (i == 0) {
                        var trEle = $('#tbodyExpenseList tr:first');
                        $(trEle).find('input[name$=".Amount"]').val('');
                        $(trEle).find('input[name$=".TransactionType"]').val(item.TransactionType);
                        $(trEle).find('#lblTransType').text(item.TransactionType);
                        $(trEle).find('input[name$=".IsJV"]').val(item.IsJV);
                        $(trEle).find("input[name='ExpenseDetail.Index']").val(i);

                        var selectGroup = $(trEle).find('select[name$=".AccountGroupId"]');
                        selectGroup.empty();
                        $.each(item.AccountGroupList, function (index, itemData) {
                            selectGroup.append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name,
                            }));
                        });

                        var selectHead = $(trEle).find('select[name$=".AccountHeadId"]');
                        selectHead.empty();
                        $.each(item.AccountHeadList, function (index, itemData) {
                            selectHead.append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name,
                            }));
                        });
                    } else {
                        var trEleNew = $('#tbodyExpenseList tr:first').clone().find('input').val('').end();
                        $(trEleNew).find('input[name$=".Amount"]').val('');
                        $(trEleNew).find("input[name='ExpenseDetail.Index']").val(i);
                        $(trEleNew).find('input[name$=".TransactionType"]').val(item.TransactionType);
                        $(trEleNew).find('#lblTransType').text(item.TransactionType);
                        $(trEleNew).find('input[name$=".IsJV"]').val(item.IsJV);
                        $(trEleNew).find("input,Select").each(function () {
                            $(this).attr("name", $(this).attr("name").replace(/\d+/, i));
                            $(this).attr("id", $(this).attr("id").replace(/\d+/, i));
                        });
                        $(trEleNew).find("span[data-valmsg-for]").each(function () {
                            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, i));
                        });

                        var selectGroup = $(trEleNew).find('select[name$=".AccountGroupId"]');
                        selectGroup.empty();
                        $.each(item.AccountGroupList, function (index, itemData) {
                            selectGroup.append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name,
                            }));
                        });

                        var selectHead = $(trEleNew).find('select[name$=".AccountHeadId"]');
                        selectHead.empty();
                        $.each(item.AccountHeadList, function (index, itemData) {
                            selectHead.append($('<option/>', {
                                value: itemData.id,
                                text: itemData.name,
                            }));
                        });
                        $('#tbodyExpenseList').append(trEleNew);
                    }
                });
                $.each(result.DeductionDetail, function (i, item) {
                    if (i == 0) {
                        var trEle = $('#tbodyDeductionList tr:first');
                        $(trEle).find('input').val('');
                        var amtEle = $(trEle).find('input[name$=".Amount"]');
                        amtEle.removeClass('required');
                        $(trEle).find('input[name$=".AccountGroupId"]').val(item.AccountGroupId);
                        $(trEle).find('input[name$=".DeductionHeadId"]').val(item.DeductionHeadId);
                        $(trEle).find('input[name$=".DeductionHead"]').val(item.DeductionHead);
                        $(trEle).find('input[name$=".AccountGroup"]').val(item.AccountGroup);
                        $(trEle).find('td:nth-child(1)').html(item.AccountGroup);
                        $(trEle).find('td:nth-child(2)').html(item.DeductionHead);
                    } else {
                        var trEleNew = $('#tbodyDeductionList tr:first').clone().find('input').val('').end();
                        $(trEleNew).find("input").each(function () {
                            $(this).attr("name", $(this).attr("name").replace(/\d+/, i));
                            $(this).attr("id", $(this).attr("id").replace(/\d+/, i));
                        });
                        $(trEleNew).find("span[data-valmsg-for]").each(function () {
                            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, i));
                        });
                        var amtEle = $(trEleNew).find('input[name$=".Amount"]');

                        amtEle.removeClass('required');
                        $(trEleNew).find('input[name$=".AccountGroupId"]').val(item.AccountGroupId);
                        $(trEleNew).find('input[name$=".DeductionHeadId"]').val(item.DeductionHeadId);
                        $(trEleNew).find('input[name$=".DeductionHead"]').val(item.DeductionHead);
                        $(trEleNew).find('input[name$=".AccountGroup"]').val(item.AccountGroup);
                        $(trEleNew).find('td:nth-child(1)').html(item.AccountGroup);
                        $(trEleNew).find('td:nth-child(2)').html(item.DeductionHead);
                        $('#tbodyDeductionList').append(trEleNew);
                    }
                });
                var Name =  $("input[name='PIName']").val();
                // $("#CreditorAmount").val(StipendAmt);
                $('#lblVendorName').html(Name);
                $('#NeedUpdateTransDetail').val('false');
                CalculateDeductionTotal();
            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
        //}
    }

    $('#CreditorAmount, #ExpenseAmount, #CreditorAmount, input[name $=".PaymentAmount"], input[name $=".Quantity"], input[name $=".TotalAmount"], input[name $=".Amount"], #ttlCr, #ttlDr').on("copy cut paste drop", function () {
        return false;
    });

    function fillMasterDropDown(ele, data, fillDafaultText, valueAsName) {
        if (fillDafaultText !== undefined) {
            ele.append($('<option/>', {
                value: '',
                text: 'Select any',
            }));
        }
        if (valueAsName !== undefined) {
            $.each(data, function (index, itemData) {
                ele.append($('<option/>', {
                    value: itemData.name,
                    text: itemData.name,
                }));
            });
        } else {
            $.each(data, function (index, itemData) {
                ele.append($('<option/>', {
                    value: itemData.id,
                    text: itemData.name,
                }));
            });
        }
    }

    /* Tab Sections Start*/
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the crurrent tab
    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        $(".custom-nav-pills li:eq(" + n + ")").addClass("active");
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        //... and run a function that will display the correct step indicator:
        //fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n > 0 && !validateForm(n)) return false;
        if (currentTab + n < x.length) {
            // Hide the current tab:
            x[currentTab].style.display = "none";
            $(".custom-nav-pills li:eq(" + currentTab + ")").removeClass("active");
        } else {
            // ... the form gets submitted:
            formSave();
            return false;
        }
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;

        // Otherwise, display the correct tab:
        showTab(currentTab);
    }
    function ValidateCommitment() {
        var msg = 'valid';
        var commitmentAmt = parseFloat($('#CommitmentAmount').val());
        var ttlAdvAmt = parseFloat($('#txtDistributionAmount').val());
        // var advPct = parseInt($("#AdvancePercentage").val());
        var offsetValue = $("input[name='GST']:checked").val();
        $("#tbodyCommitmentSelList tr").each(function () {
            var elePayment = $(this).find("input[name$='.PaymentAmount']");
            var eleAvlBal = $(this).find('input[name$=".AvailableAmount"]');
            var parseVal = parseFloat($(elePayment).val()) || 0;
            var avlBal = parseFloat($(eleAvlBal).val()) || 0;
            if (parseVal > avlBal)
                msg = "Commitment payment value should not be greater than available balance."
        });
        if (isNaN(ttlAdvAmt) || isNaN(commitmentAmt)) {
            msg = 'The requested advance value / allocated commitment value is not a valid entry.';
        } else if (ttlAdvAmt != commitmentAmt) {
            msg = 'There is a mismatch between the payable amount and commitment value.';
        }

        return msg;
    }
    function ValidateTransaction() {
        var msg = 'valid';
        var netCrAmt = parseFloat($('#CreditorAmount').val());
        var commitmentAmt = parseFloat($('#CommitmentAmount').val());
        var ttlExpAmt = parseFloat($('#ExpenseAmount').val()) || 0;
        var ttldeductAmt = parseFloat($('#DeductionAmount').val()) || 0;

        var crAmt = parseFloat($('#ttlCr').val()) || 0;
        var netDrAmt = ttlExpAmt + ttldeductAmt;

        if (isNaN(netCrAmt)) {
            return 'The Credit value is not a valid entry.';
        }
        if (netDrAmt != crAmt || netCrAmt != crAmt) {
            msg = 'Not a valid entry. Credit and Debit value are not equal.';
        }
        if (isNaN(netCrAmt) || isNaN(commitmentAmt)) {
            msg = 'The requested advance value / Transaction value is not a valid entry.';
        }


        var hdList = [];
        var hdJVList = [];
        $('#tbodyExpenseList tr').find('select[name$=".AccountHeadId"]').each(function (idx, val) {
            var jv = $(this).closest('tr').find("input[name$='.IsJV']").val();
            if (jv.toLowerCase()== "true")
                hdJVList.push($(val).val());
            else
                hdList.push($(val).val());
        });
        hdList.sort();
        hdJVList.sort();
        // duplicate check
        for (var k = 1; k < hdList.length; ++k) {
            if (hdList[k] == hdList[k - 1]) {
                msg = "Duplicate account head exist in expense details. Please select a different head.";
            }
        }
        return msg;
    }
    function validateForm(n) {
        // This function deals with validation of the form fields
        var isValid = false;
        var hadError = false;
        var tabs = $(".tab");
        var currentTabEle = tabs[currentTab];
        var inputs = $(":input, textarea, select"); // get all the form inputs and selects
        var stepElements = $(currentTabEle).find(inputs); // get inputs for current step
        var count = stepElements.length; // check that there are inputs
        if (count <= 0) {                // if there are not no reason to loop them
            return true;                 // this can be used to perform other action if there are no steps
        } if (currentTab == 0) {
            $('#txtretireamtinforncurr').change(function () {
                var amtinforgncurr = parseFloat($(this).val()) || 0;                
                var lcdraftamt = parseFloat($('#txtlcdraftamt').val()) || 0;
                var prevamtinforgncurr = parseFloat($('#txtprevRemittanceamtinforgncurr').val()) || 0;
                var curramtinforgncurr = parseFloat($('#txtcurrRemittanceamtinforgncurr').val()) || 0;
                var diffval = lcdraftamt - (prevamtinforgncurr + amtinforgncurr - curramtinforgncurr)
                if (diffval <= 0) {
                    $("#alert").text('LC Retirement value cannot exceed the total LC Value');
                    $('#Validation').modal('show');
                }
            });

        }
        else if (currentTab == 1) {
            var trans = $('#NeedUpdateTransDetail').val();
            if ($('#NeedUpdateTransDetail').val().toLowerCase() == 'true') {
                GetTransactionDetails();
            }
            var netPayAmt = parseFloat($('#CommitmentAmount').val());
            var credit = netPayAmt;
            //var name = $('input[name="Beneficiary"]').val();
            //$('#lblVendorName').html(name);
            $("#CreditorAmount").val(credit);
            CalculateDeductionTotal();

        }
        else if (currentTab == 2) {
            var validationMsg = ValidateTransaction()
            if (validationMsg != 'valid') {
                hadError = true;
                $("#alert").text(validationMsg);
                $('#Validation').modal('show');
            }
            //var validationMsg = ValidateCommitment()
            //if (validationMsg != 'valid') {
            //    hadError = true;
            //    $("#alert").text(validationMsg);
            //    $('#Validation').modal('show');
            //} else {

        }
        else if (currentTab == 3) {
            if ($('#CheckListVerified_By').val() == '') {
                hadError = true;
                $("#alert").text('Checklist is not verified.');
                $('#Validation').modal('show');
            }
        }

        $(stepElements).each(function (idx, ele) {

            if (!$(ele).is(':radio') && !$(ele).is(':checkbox') && !$(ele).is(':password')) {
                isValid = $(ele).valid();//$(document.forms[0]).validate().element($(this)); // check that the input is valid. This can also be used on a per input basis to perform another action if the field is not valid.
                if (!isValid) { hadError = true; } // set our flag if there was an error
            }

        });
        return !hadError; // return the valid status

    }

</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
