@model IOAS.Models.ImprestBillRecoupModel
@{
    ViewBag.Title = "Imprest Bills Recoupment List";
    ViewBag.Subtitle = "Imprest Bills Recoupment List";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>Imprest Bills Recoupment List</h3>
    </div>
    <div id="addnewpage" class="col-md-8 flt-nav-links">

    @*<a href="@Url.Action("ImprestBillsRecoupment")"> <i class="ion-plus"></i>Add New</a>*@
        <a href="Javascript:void(0)" id="btnFilter" class="pull-right"> <i class="ion-android-funnel"></i>Filters</a>
    </div>

</div>
<div id="popupFilter" class="filter-popup">
    <div class="">
        <div class="filter-content">
            <div class="white-bg">
                <div class="form-group custom-form-group">
                    <h3>Filter by</h3>
                </div>

                @*<div class="form-group custom-form-group">
            @Html.TextBoxFor(m => m.SearchField.ProjectNumber, new { @id = "srchprojectnumber", @placeholder = "Project Number", @class = "form-control" })
        </div>*@

                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.ImprestcardNumber, new { @id = "srchcardnumber", @placeholder = "Imprest Reference Number", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.ImprestacNumber, new { @id = "srchacnumber", @placeholder = "Imprest A/C Number", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.ImprestrefernceNumber, new { @id = "srchrefnumber", @placeholder = "Imprest Recoupment Number", @class = "form-control" })
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.PIName, new { @id = "srchPIName", @placeholder = "PI Name / ID", @class = "form-control" })
                    @*@Html.DropDownListFor(m => m.SearchField.PIName, new SelectList(ViewBag.PI, "id", "name"), "PI Name", new { @id = "srchPIName", @class = "form-control" })*@
                </div>
                <div class="form-group custom-form-group">
                    @Html.TextBoxFor(m => m.SearchField.CreditAccountHead, new { @id = "srchaccountHeadnumber", @placeholder = "Credit Account Number", @class = "form-control" })
                </div>

                <div id="DivCrtdDate" class="form-group custom-form-group">
                    <label class="full-width">Created Date</label>
                    <label class="half-form">From Date </label>
                    @Html.TextBoxFor(m => m.SearchField.EntryFromDate, new { @id = "FromDate", @class = "form-control half-form" })
                    <label class="half-form">To Date </label>
                    @Html.TextBoxFor(m => m.SearchField.EntryToDate, new { @id = "ToDate", @class = "form-control half-form" })
                </div>
                <div class="form-group custom-form-group mt30 text-center">
                    <a id="btnReset" href="javascript:void(0)">Reset</a>
                </div>
                <div class="form-group custom-form-group mt30 text-center">
                    <button id="btnSearch" type="button" class="btn btn-primary mr10">Search</button>
                    <button name="btnClose" type="button" class="btn btn-default">Close</button>
                </div>

            </div>
        </div>

    </div>

    <a href="javascript:void(0)" name="btnClose" class="close-btn"><i class="ion-android-cancel"></i></a>

</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="ImpBillRecoupList"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
    });
    $('a[name="btnClose"],button[name="btnClose"]').click(function () {
        $('#popupFilter').css("display", "none");
    });
    $("#btnFilter").click(function () {
        $('#popupFilter').css("display", "Block");
    });
                    $("#FromDate, #ToDate").datepicker
                                      ({
                                          dateFormat: 'dd-MM-yy',
                                          showStatus: true,
                                          showWeeks: true,
                                          changeYear: true,
                                          yearRange: '-100:+0',
                                          highlightWeek: true,
                                          numberOfMonths: 1,
                                          showAnim: "scale",
                                          showOptions: {
                                              origin: ["top", "left"]
                                          }
                                      });
    function ResetForm() {
        //$('#srchprojectnumber').val('');
        $('#srchcardnumber').val('');
        $('#srchacnumber').val('');
        $('#srchrefnumber').val('');
        $('#srchPIName').val('');
        $('#srchaccountHeadnumber').val('');
        $('#FromDate').val('');
        $('#ToDate').val('');
    }
    $('#btnReset').click(function () {
        ResetForm();
        getData();
    });
    $('#btnSearch').on('click', function () {
        // var token = $("input[name=__RequestVerificationToken]").val();
        getData();
    });
   
    function getData() {
       
        var input = [];
        input = {
            ExImprestNumber: $('#srchcardnumber').val() || null,
            ExImprestAccNumber: $('#srchacnumber').val() || null,
            ExReferenceNumber: $('#srchrefnumber').val() || null,
            ExImprestNamePI: $('#srchPIName').val() || null,
            //ExAccountHead: $('#srchaccountHeadnumber').val() || null,
            ExCreditAccountHead: $('#srchaccountHeadnumber').val() || null,
            ExFromDate: $('#FromDate').val() || null,
            ExToDate: $('#ToDate').val() || null
        },
        $("#ImpBillRecoupList").jsGrid("search", input, pageIndex = 1, pageSize = 5);
    }
    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };

    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            return new Date(value).toDateString();
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });
    jsGrid.fields.date = DateField;
    var db;
    $("#ImpBillRecoupList").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 5,
        editing: false,
        filtering: true,
        pageLoading: true,
        autoload: true,
        controller: {

            loadData: function (filter) {
                //return $.grep(db, function (ow) {
                //    return (!filter.ImprestBillRecoupNumber || ow.ImprestBillRecoupNumber.toLowerCase().indexOf(filter.ImprestBillRecoupNumber.toLowerCase()) > -1)
                //   && (!filter.PostedDate.from || new Date(ow.PostedDate) >= filter.PostedDate.from)
                //   && (!filter.PostedDate.to || new Date(ow.PostedDate) <= filter.PostedDate.to)
                //   && (!filter.Status || ow.Status.toLowerCase().indexOf(filter.Status.toLowerCase()) > -1);
                //});
                var searchData = [];
                searchData = {                    
                    InImprestAccNumber: filter.ImprestBankACNumber,
                    InReferenceNumber: filter.ImprestBillRecoupNumber,
                    InImprestNamePI: filter.NameofPI,
                    InImprestStatus: filter.Status,
                    InBillValue: filter.CreditAmount,
                    InFromDate: filter.from,
                    InToDate: filter.to,
                    ExImprestNumber: $('#srchcardnumber').val() || null,
                    ExImprestAccNumber: $('#srchacnumber').val() || null,
                    ExReferenceNumber: $('#srchrefnumber').val() || null,
                    ExImprestNamePI: $('#srchPIName').val() || null,
                    ExFromDate: $('#FromDate').val() || null,
                    ExToDate: $('#ToDate').val() || null,
                    AccountHead: filter.AccountHead
                },
                //filter.PostedDate.from = $('#FromDate').val() || null,
                //filter.PostedDate.to = $('#ToDate').val()||null
                filter.model = searchData;
                var deferred = $.Deferred();
                $.ajax({
                    type: "post",
                    url: 'LoadImprestBillRecoupmentList',
                    data: JSON.stringify(filter),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        //db = result;
                        //$("#AdvanceBillPaymentList").jsGrid({ data: db });
                        var da = {
                            data: result.BillRecoup,
                            itemsCount: result.TotalRecords
                        }
                        deferred.resolve(da);
                    },
                    error: function (err) {
                        console.log("error : " + err);
                    }

                });
                return deferred.promise();
            }

        },

        fields: [
            { name: "SlNo", title: "S.No", editing: false, width: 50 },
            { type: "number", name: "ImprestBillRecoupId", title: "Id", visible: false },
            { type: "text", name: "ImprestBillRecoupNumber", title: "Imprest Bills Recoupment Number", editing: false },
            { type: "date", name: "PostedDate", title: "Posted Date", width: 100, align: "center" },
            { type: "text", name: "NameofPI", title: "PI Name", editing: false },
            { type: "text", name: "ImprestBankACNumber", title: "PI Account Number", editing: false },
            { type: "text", name: "AccountHead", title: "Credit Account Details", editing: false },

            { type: "text", name: "CreditAmount", title: "Amount", editing: false },
            { type: "text", name: "Status", title: "Status", editing: false },
             {
                 type: "control", editButton: false, deleteButton: false, width: 120, title: "Action",

                 itemTemplate: function (value, item) {
                     var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                     //if (item.Status == "Open") {
                     //    statusList = [{ id: "", name: "Select Action" }, { id: "Edit", name: "Edit" }, { id: "Approve", name: "Approve" }, { id: "View", name: "View" }, { id: "Print Bill", name: "Print Bill" }]
                     //}
                     if (item.Status == "Open") {
                         statusList = [{ id: "", name: "Select Action" }, { id: "Edit", name: "Edit" }, { id: "Submit for Approval", name: "Submit for Approval" }, { id: "View", name: "View" }, { id: "Print Bill", name: "Print Bill" }]
                     }                     
                     else
                     {
                         statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }, { id: "Bank Advice", name: "Bank Advice" }, { id: "Print Bill", name: "Print Bill" }]
                     }
                     var $customSelect = $("<select>")
                         .attr("class", "form-control").prop("selectedIndex", "")
                     $.each(statusList, function (index, itemData) {
                         $customSelect.append($('<option/>', {

                             value: itemData.id,
                             text: itemData.name
                         }));
                     });
                     $customSelect.change(function (e) {
                         var selVal = $(this).val();
                         if (selVal == "Edit") {
                             var url = '@Url.Action("ImprestBillsRecoupment", "CoreAccounts")?id=0&BillRecoupid=' + item.ImprestBillRecoupId;
                             window.location.href = url;
                         }
                         else if (selVal == "View") {
                             var url = '@Url.Action("ImprestBillsRecoupmentView", "CoreAccounts")?id=' + item.ImprestBillRecoupId;
                             window.location.href = url;
                         }
                         else if (selVal == "Bank Advice") {
                             var url = '@Url.Action("ImprestRecoupment", "Reports")?Id=' + item.ImprestBillRecoupNumber;
                             window.location.href = url;
                         }
                         else if (selVal == "Print Bill") {
                             var url = '@Url.Action("ImprestBillsRecoupmentBill", "ReportMaster")?Id=' + item.ImprestBillRecoupNumber;
                             window.open(url, '_blank');
                         }
                         @*else if (selVal == "Approve") {
                             var choice = confirm("Are you sure, Do you want to approve this Imprest Bills Recoupment entry?");
                             if (choice === true) {
                                 $.ajax({
                                     type: "GET",
                                     url: '@Url.Action("ApproveImprestBillsRecoup", "CoreAccounts")',
                                     data: { id: item.ImprestBillRecoupId },
                                     success: function (result) {
                                         if (result == true) {
                                             $('#alertSuccess').html("Imprest Bills Recoupment has been approved successfully.");
                                             $('#Success').modal('toggle');
                                             loadDetails();
                                         } else if (result == false) {
                                             $('#FailedAlert').html("Something went wrong please contact administrator.");
                                             $('#Failed').modal('toggle');
                                         }
                                     },
                                     error: function (err) {
                                         console.log("error1 : " + err);
                                     }
                                 });
                             }
                         }*@
                         else if (selVal == "Submit for Approval") {
                             var choice = confirm("Are you sure, Do you want to submit this bill for approval process?");
                             if (choice === true) {
                                 $.ajax({
                                     type: "POST",
                                     url: '@Url.Action("ImprestBillRecoupWFInit", "CoreAccounts")',
                                     data: {
                                         billId: item.ImprestBillRecoupId
                                     },
                                     success: function (result) {
                                         if (result.status == true) {
                                             $('#alertSuccess').html("Imprest Recoupment has been Submitted for approval process successfully.");
                                             $('#Success').modal('toggle');
                                             loadDetails();
                                         } else if (result.status == false) {
                                             $('#FailedAlert').html(result.msg);
                                             $('#Failed').modal('toggle');
                                         }
                                     },
                                     error: function (err) {
                                         console.log("error1 : " + err);
                                     }
                                 });
                             }
                         }
                         $(this).val("");
                         return false;
                         e.stopPropagation();
                     });
                     return $result.add($customSelect);
                 },
                 _createFilterSwitchButton: function () {
                     return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                 }
             }


        ],

    });
    $("#ImpBillRecoupList").jsGrid("option", "filtering", false);
   // loadDetails();
    function loadDetails() {
        @*$.ajax({
            type: "GET",
            url: '@Url.Action("GetImprestBillsRecoupList", "CoreAccounts")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                    db = result;
                    $("#ImpBillRecoupList").jsGrid({ data: db });
            },
            error: function (err) {
                console.log("error : " + err);
            }

        });*@
        var input = [];
        input = {
            ExImprestNumber: $('#srchcardnumber').val() || null,
            ExImprestAccNumber: $('#srchacnumber').val() || null,
            ExReferenceNumber: $('#srchrefnumber').val() || null,
            ExImprestNamePI: $('#srchPIName').val() || null,
            ExFromDate: $('#FromDate').val() || null,
            ExToDate: $('#ToDate').val() || null,
            ExAccountHead: $('#srchaccountHeadnumber').val() || null
        },
        $("#ImpBillRecoupList").jsGrid("search", input, pageIndex = 1, pageSize = 5);
    }
  
</script>
