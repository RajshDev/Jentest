@model IOAS.Models.CreateROModel
@{
    ViewBag.Title = "Create RO";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
@Styles.Render("~/bundles/JSGridCss")
@Scripts.Render("~/bundles/JSGrid")
<script src="@Url.Content("~/Scripts/ProjectFundingCategory/ProjectFundingCategory.js")"></script>
<style>
    .auto-com-z-index {
        z-index: 10000;
    }
</style>


@using (Html.BeginForm("CreateRO", "ProjectFundingCategory", FormMethod.Post, new { @class = "", role = "form", @id = "formRO", enctype = "multipart/form-data" }))
{
    <div class="row hd-tt-bg">

        <div class="col-md-12">
            <h4><b>Create Release Order</b> </h4>
        </div>
    </div>

    <div class="row">

        <div class="vw-dts-bg">
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-bordered mb-null">
                        <thead>
                            <tr><th colspan="5">Project Details</th></tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <label>Project Title</label>
                                    <h4>@Html.DisplayFor(m => m.ProjTitle)</h4>
                                    @Html.HiddenFor(m => m.ProjId)
                                </td>
                                <td colspan="4">
                                    <label>Project Number</label>
                                    <h4>@Html.DisplayFor(m => m.ProjectNumber)</h4>
                                </td>
                                <td colspan="4">
                                    <label>Agency Name</label>
                                    <h4>@Html.DisplayFor(m => m.AgencyName)</h4>
                                </td>
                            </tr>

                            <tr>
                                <td>
                                    <label>Actual Start Date</label>
                                    <h4>@Html.DisplayFor(m => m.ActualStartDate)</h4>
                                </td>
                                @*<td class="reg-no">*@
                                <td>
                                    <label>Actual Closing Date</label>
                                    <h4>@Html.DisplayFor(m => m.ActualCloseDate)</h4>
                                </td>
                                <td colspan="4">
                                    <label>SanctionValue</label>
                                    <h4>@Html.DisplayFor(m => m.SanctionValue)</h4>
                                    @Html.HiddenFor(m => m.SanctionValue)
                                    @Html.HiddenFor(m => m.ROAprvId)
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <h3 class="spl-title">
            Release Order Type &nbsp;&nbsp;
            @Html.RadioButtonFor(m => m.isRO, "Yes", new { @id = "is_RO", @Checked ="Checked" })<span></span> &nbsp; RO  &nbsp;&nbsp;
            @Html.RadioButtonFor(m => m.isTemp, "No", new { @id = "is_Temp" }) <span></span> &nbsp; Temp RO
        </h3>
    </div>
    <div id="RO">
        @*<div class="row">
            <div class="page-wrapper ">
                <div class="col-md-12 white-bg">

                    <div class="col-md-6">
                        <lable class="fn-s-bold">Add New RO</lable>
                    </div>
                    <div class="col-md-6 text-right">
                        <button type="button" id="btnAddRODetails" class="btn-primary btn">Add RO</button>
                    </div>
                </div>
            </div>
        </div>*@
        <div class="scrl-table scrl-table-po-bl">
            <table class="table white-bg" style="width:1000px;">
                <tbody>
                    <tr>
                        <td style="width:750px;">
                            <lable class="fn-s-bold">Add New RO</lable>
                        </td>
                        <td style="width:200px;">
                            <button type="button" id="btnAddRODetails" class="btn-primary btn">Add RO</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

            <div class="row">
                <div class="page-wrapper">
                    <div class="scrl-table scrl-table-po-bl">
                        <table class="table table-bordered mb-null">
                            <thead></thead>
                            <tbody id="tbodyRO">
                                <tr>
                                    <td>RO Number</td>
                                    <td>Existing Value</td>
                                    <td>Edited Value</td>
                                    <td>New Value</td>
                                    <th></th>
                                </tr>
                                @if ((Model != null) && (Model.RODetails != null && Model.RODetails.Count > 0))
                                {
                                    foreach (var item in Model.RODetails)
                                    {
                                        var count = 0;
                                        var RO_Id = "RODetails[" + count + "].RO_Id";
                                        var RONumber = "RODetails[" + count + "].RONumber";
                                        var existingValue = "RODetails[" + count + "].ExistingValue";
                                        var editedValue = "RODetails[" + count + "].EditedValue";
                                        var newValue = "RODetails[" + count + "].NewValue";
                                        count++;
                                        <tr class="p-b-sm">
                                            <td>
                                                @Html.TextBox(@RONumber, item.RONumber, new { @class = "form-control" })
                                                @Html.ValidationMessage(@RONumber)
                                                @Html.Hidden("RODetails.Index", @count)
                                                @Html.Hidden(@RO_Id, item.RO_Id)

                                            </td>
                                            <td>
                                                @Html.TextBox(@existingValue, item.ExistingValue, new { @class = "form-control exist", @id = "oldROvalue", @readonly = true, @onkeyup = "calculateROSum() ;" })
                                                @Html.ValidationMessage(@existingValue)
                                            </td>
                                            <td>
                                                @Html.TextBox(@editedValue, item.EditedValue, new { @class = "form-control edited", @id = "ROeditedvalue", @onkeypress = "return isNumberKey(event);", @onkeyup = "calculateROSum();", @autocomplete = "off" })
                                                @Html.ValidationMessage(@editedValue)
                                            </td>
                                            <td>
                                                @*@Html.TextBox(@newValue, item.NewValue, new { @class = "form-control required", @onkeypress = "return ValidateDecimalOnly(event)", @onchange = "calculateamount()" })*@
                                                @Html.TextBox(@newValue, item.NewValue, new { @class = "form-control ", @id = "ROnewvalue", @onkeypress = "return isNumberKey(event);", @readonly = "true", @onkeyup = "calculateROSum();" })

                                                @Html.ValidationMessage(@newValue)
                                            </td>
                                            <td>
                                                <a href="javascript:void(0)" class="btn-circle dis-none removeDetail"><i class="ion-trash-a"></i></a>
                                            </td>
                                        </tr>
                                    }

                                }
                                else
                                {
                                    <tr>
                                        <td>
                                            @Html.TextBox("RODetails[0].RONumber", "", new { @class = "form-control" })
                                            @Html.ValidationMessage("RODetails[0].RONumber")
                                            @Html.Hidden("RODetails.Index", 0)

                                        </td>
                                        <td>
                                            @Html.TextBox("RODetails[0].ExistingValue", "", new { @class = "form-control exist", @id = "oldROvalue", @onchange = "totalSum();", @readonly = true, @onkeyup = "calculateROSum() ;" })
                                            @Html.ValidationMessage("RODetails[0].ExistingValue")
                                        </td>
                                        <td>
                                            @Html.TextBox("RODetails[0].EditedValue", "", new { @class = "form-control edited ", @id = "ROeditedvalue", @onkeypress = "return isNumberKey(event);", @onkeyup = "calculateROSum();", @onchange = "totalSum();", @autocomplete = "off" })
                                            @Html.ValidationMessage("RODetails[0].EditedValue")
                                        </td>
                                        <td>
                                            @Html.TextBox("RODetails[0].NewValue", "", new { @class = "form-control ", @id = "ROnewvalue", @onkeypress = "return isNumberKey(event);", @readonly = "true", @onkeyup = "calculateROSum();" })
                                            @Html.ValidationMessage("RODetails[0].NewValue", new { @id = "RoErrorMessage" })

                                        </td>
                                        <td>
                                            <a href="javascript:void(0)" class="btn-circle dis-none removeDetail"><i class="ion-trash-a"></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    <div id="TempRO">
        <div class="row">
            <div class="page-wrapper">
                <div class="scrl-table scrl-table-po-bl">
                    <table class="table table-bordered mb-null white-bg">
                        <thead></thead>
                        <tbody id="tbodyTempRO">
                            <tr>
                                <th colspan="4"><b>Add New TempRO </b></th>
                            </tr>
                            <tr>
                                <td> Temp RO Number</td>
                                <td> Existing Value</td>
                                <td> Edited Value</td>
                                <td> New Value</td>

                            </tr>
                            <tr>
                                <td>
                                    @Html.TextBoxFor(m => m.TempRODetails.TempRONumber, new { @class = "form-control", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.TempRODetails.TempRONumber)
                                    @Html.HiddenFor(m => m.TempRODetails.RO_Id)
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m.TempRODetails.ExistingValue, new { @class = "form-control", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.TempRODetails.ExistingValue)
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m.TempRODetails.EditedValue, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.TempRODetails.EditedValue)
                                </td>
                                <td>
                                    @Html.TextBoxFor(m => m.TempRODetails.NewValue, new { @class = "form-control ", @readonly = true })
                                    @Html.ValidationMessageFor(m => m.TempRODetails.NewValue)
                                </td>

                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="page-wrapper">
            <div class="scrl-table scrl-table-po-bl">
                <table class="table table-bordered mb-null white-bg">
                    <thead></thead>
                    <tbody>
                        <tr>
                            <td><b> <label class="required"> Total RO Details: </label></b></td>
                            <td>Total Edited Value</td>
                            <td> Total New Value</td>
                        </tr>
                        <tr>

                            <td></td>
                            <td>
                                @Html.TextBoxFor(m => m.TotalEditedValue, new { @class = "form-control", @id = "TotalEditedValue", @readonly = true })
                                @Html.ValidationMessageFor(m => m.TotalEditedValue)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.TotalNewValue, new { @class = "form-control", @id = "TotalNewValue", @readonly = true })
                                @Html.ValidationMessageFor(m => m.TotalNewValue)
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>


    <div class="modal-footer">
        <div class="text-center">
            <input type="submit" class="btn btn-primary " value="submit" id="btnCreateRO" />
            <input type="reset" onclick="window.location.href='@Url.Action("ProjectOpening", "Project")';" value="close" class="btn btn-default" />
        </div>
    </div>
}
<div id="popup"></div>
<link href="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>

<script>

        var errMsg = '@TempData["errMsg"]';
            var succMsg = '@TempData["succMsg"]';

        $(document).ready(function () {
                if (succMsg != '') {
                $('#alertSuccess').html(succMsg);
                $('#Success').modal('toggle');
                }
                else if (errMsg != '') {
                $('#FailedAlert').html(errMsg);
                $('#Failed').modal('toggle');
            }

            $('#RO').show();
            $('#TempRO').hide();

            var RODetails = @Html.Raw(Json.Encode(Model.RODetails));
            $.each(RODetails, function (i, result) {
                if (i == 0) {

                    var trEle = $('#tbodyRO tr:nth-child(2)');
                $('#tbodyRO tr').not(':first,:nth-child(2)').remove();
                    $(trEle).find("input[name='RODetails.Index']").val(i);
                    $(trEle).find("input[name='RODetails.Index']").val(i);

                    trEle.find('input[name$=".RONumber"]').val(result.RONumber);
                    trEle.find('input[name$=".ExistingValue"]').val(result.ExistingValue);
                    trEle.find('input[name$=".EditedValue"]').val(result.EditedValue);
                    trEle.find('input[name$=".NewValue"]').val(result.NewValue);
                }
                else {
                    var trEleNew = $('#tbodyRO tr:nth-child(2)').clone();
                $(trEleNew).find('a.dis-none').removeClass('dis-none');
                $(trEleNew).find("input[name='RODetails.Index']").val(i);
                $(trEleNew).find("input").each(function () {
                    $(this).attr("name", $(this).attr("name").replace(/\d+/, i));
                    });

                    trEleNew.find('input[name$=".RONumber"]').val(result.RONumber);
                    trEleNew.find('input[name$=".ExistingValue"]').val(result.ExistingValue);
                    trEleNew.find('input[name$=".EditedValue"]').val(result.EditedValue);
                    trEleNew.find('input[name$=".NewValue"]').val(result.NewValue);

                $('#tbodyRO').append(trEleNew);
            }

        });
    });

/*Add the new row for RO details*/
    $('#btnAddRODetails').click(function () {

        var cln = $('#tbodyRO tr:nth-child(2)').clone().find("input").val("").end();
        $(cln).find('a.dis-none').removeClass('dis-none');
        var index = $('#tbodyRO tr:last').find("input[name='RODetails.Index']").val();
        index = parseInt(index) + 1;

        $(cln).find("input[name='RODetails.Index']").val(index);
        $(cln).find("input").each(function () {
            $(this).attr("name", $(this).attr("name").replace(/\d+/, index));
        });
        $('#tbodyRO').append(cln);
    });
    $(document).on('click', 'a.removeDetail', function () {
        $(this).closest('tr').remove();
            });

    //$('[id^="is"]').change(function () {
    //    var ID = $(this).attr("id");
    //    alert(ID);
    //    if (ID === "is_RO") {
    //        $('#RO').css("display", "block");
    //        $('#TempRO').css("display", "none");
    //        $('#TempRO').removeAttr("checked");
    //        $('#RO').attr("checked", true);
    //    }
    //    if (ID === "is_Temp") {
    //        $('#TempRO').css("display", "block");
    //        $('#RO').css("display", "none");
    //        $('#RO').removeAttr("checked");
    //    }

    //});

    $('#is_RO').bind("click", function () {
        $('#RO').show();
        $('#TempRO').hide();
    });

    $('#is_Temp').bind("click", function () {
        $('#TempRO').show();
        $('#RO').hide();
    });

    /*Allows +ve / -ve Number*/
    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        //if (charCode != 46 && charCode > 31
        //    && (charCode < 48 || charCode > 57))
        //    return false;

        if (charcode != 109 && charcode > 31 && (charcode < 48 || charcode > 57) && charcode != 46) {
            return false;
        }
        return true;

    }
    /*Sum of Existing and edited value = new value*/
    function calculateROSum() {

        var resExistingVal = 0;
        var resEditedVal = 0;
        $('#tbodyRO tr').each(function (idx, val) {
            var ExistingVal = parseFloat($(this).closest('tr').find('input[name$=".ExistingValue"]').val());
            var EditedVal = parseFloat($(this).closest('tr').find('input[name$=".EditedValue"]').val());
            var NewVal = parseFloat($(this).closest('tr').find('input[name$=".NewValue"]').val());

            if (!isNaN(ExistingVal))
                resExistingVal = ExistingVal;
            if (!isNaN(EditedVal))
                resEditedVal = EditedVal;
            if (!isNaN(resExistingVal) || !isNaN(resEditedVal)) {
                NewVal = resExistingVal + resEditedVal;
                $(this).find('input[name$=".NewValue"]').val(NewVal);
            }
        });
        totalSum();
    }


    /*Function to calculate total Edited value and New Value*/
    function totalSum() {
        var result = 0;
        var allocateresult = 0;
        $('#tbodyRO tr').each(function (idx, val) {
            var txtROEditedValue = parseFloat($(this).closest('tr').find('input[name$=".EditedValue"]').val());
            var totalRONewValue = parseFloat($(this).closest('tr').find('input[name$=".NewValue"]').val());
            if (!isNaN(txtROEditedValue))
                result += txtROEditedValue;
            if (!isNaN(totalRONewValue))
                allocateresult += totalRONewValue;
            if (!isNaN(result)) {
                $("#TotalEditedValue").val(result.toFixed(0));
            }
            if (!isNaN(allocateresult)) {
                $("#TotalNewValue").val(allocateresult.toFixed(0));
            }
        });
    }


</script>
