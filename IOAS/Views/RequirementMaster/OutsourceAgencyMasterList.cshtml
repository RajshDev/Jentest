
@{
    ViewBag.Title = "OutsourceAgencyMasterList";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<div class="row hd-tt-bg">
    <div class="col-md-12">
        <h4 class="pull-left"><b>OutSource Agency Master</b></h4>
        <div class="flt-nav-links pull-right  mt-sm">
            <a href="@Url.Action("Outsourceagencymaster")"> <i class="ion-plus"></i>Add New</a>
        </div>

    </div>
</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="gridOSGAgyMaster"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var alertMsg = '@TempData["alertMsg"]';
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertTitle').html("Success");
            $('#alertSuccessContent').html(succMsg);
            $('#SuccessAll').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        else if (alertMsg != '') {
            $('#alert').html(alertMsg);
            $('#Validation').modal('toggle');
        }
    });


    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };
    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            if (value != "") {
                return new Date(value).toDateString();
            }
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });
    jsGrid.fields.date = DateField;

    $("#gridOSGAgyMaster").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 10,
        editing: false,
        filtering: true,
        pageLoading: true,
        autoload: true,
        controller: {

            loadData: function (filter) {
                var searchData = [];
                searchData = {
                    SearchAgencyname: filter.AgencyName || null,
                    SearchContactperson: filter.ContactPerson || null,
                    SearchGSTINnumber: filter.GSTIN || null,
                    SearchAgencyCode: filter.AgencyCode || null,
                    SearchStatus: filter.Status||null
                },
                filter.model = searchData;


                var deferred = $.Deferred();
                $.ajax({
                    type: "post",
                    url: "GetOutsourceAgencyList",
                    data: JSON.stringify(filter),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        //db = result;
                        //$("#AdvanceBillPaymentList").jsGrid({ data: db });
                        var da = {
                            data: result.List,
                            itemsCount: result.TotalRecords
                        }
                        deferred.resolve(da);
                    },
                    error: function (err) {
                        console.log("error : " + err);
                    }

                });
                return deferred.promise();
            }

        },

        fields: [
    { name: "SNo", title: "S.No", editing: false, width: 50 },
    { type: "text", name: "SalaryAgencyId", title: "Id", visible: false },
    { type: "text", name: "AgencyCode", title: "Out Source Agency Code", editing: false },
    { type: "text", name: "AgencyName", title: "Agency Name", editing: false },
    { type: "text", name: "ContactPerson", title: "Contact Person", editing: false },
    { type: "text", name: "GSTIN", title: "GSTIN", editing: false },
    { type: "text", name: "Status", title: "Status", editing: false },
    //{ type: "text", name: "RoleId", title: "RoleId", visible: false },
    //{ type: "text", name: "UserId", title: "UserId", visible: false },
    { type: "date", name: "ModifyDate", title: "Modify Date", editing: false },
    {
        type: "control", editButton: false, deleteButton: false, width: 120, title: "Action",

        itemTemplate: function (value, item) {
            var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
            statusList = [{ id: "", name: "Select Action" }, { id: "Edit", name: "Edit" }]
           
            var $customSelect = $("<select>")
                .attr("class", "form-control").prop("selectedIndex", "")
            $.each(statusList, function (index, itemData) {
                $customSelect.append($('<option/>', {

                    value: itemData.id,
                    text: itemData.name
                }));
            });
            $customSelect.change(function (e) {
                var selVal = $(this).val();
                
                 if (selVal == "Edit") {
                     var url = '@Url.Action("Outsourceagencymaster", "RequirementMaster")?SalaryId=' + item.SalaryAgencyId;
                     window.location.href = url;
                    
                    
                }



                $(this).val("");
                return false;
                e.stopPropagation();
            });
            return $result.add($customSelect);
        },
        _createFilterSwitchButton: function () {
            return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
        }
    }


        ],
    });
    $("#gridOSGAgyMaster").jsGrid("option", "filtering", false);

</script>
