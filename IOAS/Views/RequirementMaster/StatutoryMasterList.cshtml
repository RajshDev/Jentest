@{
    ViewBag.Title = "StatutoryMasterList";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

<div class="row hd-tt-bg">
    <div class="col-md-12">
        <h4 class="pull-left"><b>Statutory Master </b></h4>
        <div class="flt-nav-links pull-right  mt-sm">
            <a href="@Url.Action("StatutoryMaster")"> <i class="ion-plus"></i>Add New</a>
        </div>

    </div>
</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="gridStatutoryList"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var alertMsg = '@TempData["alertMsg"]';
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
            $(".loading-bg").addClass('dis-none');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
            $(".loading-bg").addClass('dis-none');
        }
        else if (alertMsg != '') {
            $('#alert').html(alertMsg);
            $('#Validation').modal('toggle');
            $(".loading-bg").addClass('dis-none');
        }
    });
    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };
    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            if (value != "") {
                return new Date(value).toDateString();
            }
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });
    jsGrid.fields.date = DateField;
    $("#gridStatutoryList").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 10,
        editing: false,
        filtering: true,
        pageLoading: true,
        autoload: true,
        controller: {

            loadData: function (filter) {
                //var searchData = [];
                //searchData = {
                //    TypeofAccountName: filter.TypeofAccountName || null,
                //    DesignationCode: filter.DesignationCode || null,
                //    Designation: filter.Designation || null,
                //    PayStructureMinMum: filter.PayStructureMinMum || null,
                //    PayStructureMaximum: filter.PayStructureMaximum || null,
                //    Status: filter.Status || null
                //},
                //filter.model = searchData;


                var deferred = $.Deferred();
                $.ajax({
                    type: "post",
                    url: "GetStatutoryList",
                    data: JSON.stringify(filter),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        //db = result;
                        //$("#AdvanceBillPaymentList").jsGrid({ data: db });
                        var da = {
                            data: result.StatutoryList,
                            itemsCount: result.TotalRecords
                        }
                        deferred.resolve(da);
                    },
                    error: function (err) {
                        console.log("error : " + err);
                    }

                });
                return deferred.promise();
            }

        },

        fields: [
    { name: "SNo", title: "S.No", editing: false, width: 50 },
    { type: "text", name: "StatutoryId", title: "Id", visible: false },
    { type: "date", name: "ValueDateType", title: "From Date", editing: false },
    { type: "date", name: "EndDateType", title: "End Date", editing: false },
    { name: "Status", title: "Status", editing: false, visible: false },
    { name: "CurrDate", title: "CurrDate", editing: false, visible: false },
    { name: "IsActive", title: "IsActive", editing: false, visible: false },

    {
         type: "control", editButton: false, deleteButton: false, width: 120, title: "Action",

         itemTemplate: function (value, item) {
             var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

             if (item.FromDate <= item.CurrentDate && item.IsActive == true) {
                 statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }, { id: "Update OSG Salary Components", name: "Update OSG Salary Components" }]
             }
             else if (item.Status == "Active") {
                 statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }]
             }
             else {
                 statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }]
             }
             var $customSelect = $("<select>")
                 .attr("class", "form-control").prop("selectedIndex", "")
             $.each(statusList, function (index, itemData) {
                 $customSelect.append($('<option/>', {

                     value: itemData.id,
                     text: itemData.name
                 }));
             });
             $customSelect.change(function (e) {
                 var selVal = $(this).val();
                 if (selVal == "View") {
                     var url = '@Url.Action("StatutoryMasterView", "RequirementMaster")?statutoryId=' + item.StatutoryId;
                     window.location.href = url;
                 }
                 else if (selVal == "Update OSG Salary Components")
                 {
                     var choice = confirm("Do you want to update salary components for Active Outsourcing Employees.");
                     if (choice == true) {
                         $(".loading-bg").removeClass('dis-none');
                         var url = '@Url.Action("UpdateOSGSalaryComp", "RequirementMaster")?statutoryId=' + item.StatutoryId;
                         window.location.href = url;
                     }
                 }



                 $(this).val("");
                 return false;
                 e.stopPropagation();
             });
             return $result.add($customSelect);
         },
         _createFilterSwitchButton: function () {
             return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
         }
     }


        ],
    });
    $("#gridStatutoryList").jsGrid("option", "filtering", false);
</script>