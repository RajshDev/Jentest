@model IOAS.Models.STEVerificationModel
@{
    ViewBag.Title = "OrderVerification";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<div class="row hd-tt-bg">
    <div class="col-md-12">
        <h4><b>Order Verification </b></h4>
    </div>
</div>
@using (Html.BeginForm("OrderVerification", "Requirement", FormMethod.Post, new { @class = "", role = "form", @id = "formVerification", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(m => m.Button)
    <div class="row cts-mn-dts" id="tab-01">
        <div class="page-wrapper mt30">
            <div>
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="bl-lg-panel-box pb-null">
                                <div class="cmn-panel-box">
                                    <div class="row ">
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Employee No: </label>
                                                @Html.HiddenFor(m => m.ProjectId)
                                                @Html.HiddenFor(m => m.Status)
                                                @Html.HiddenFor(m => m.STEId)
                                                @Html.HiddenFor(m => m.OrderId)
                                                <h4>@Html.DisplayFor(m => m.ApplicationNo)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Candidate Name: </label>
                                                <h4>@Html.DisplayFor(m => m.Name)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Appointment Type</label>  <br>
                                                <h4>@Html.DisplayFor(m => m.Typeofappointment)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Coordinator Code:</label> <br>
                                                <h4 id="PICode"></h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>PI Name:</label> <br>
                                                <h4 id="PINametxt"></h4>
                                            </div>
                                        </div>

                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Department: </label> <br>
                                                <h4 id="DepartmentNametxt"></h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Designation: </label>
                                                <h4>@Html.DisplayFor(m => m.Designation)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Qualification: </label>
                                                <h4>@Html.DisplayFor(m => m.Qualification)</h4>
                                            </div>
                                        </div>


                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Experience: </label>
                                                <h4>@Html.DisplayFor(m => m.Expericence)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>IITM Experience: </label>
                                                <h4>@Html.DisplayFor(m => m.IITMExpericence)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Pay Type: </label>
                                                <h4>@Html.DisplayFor(m => m.PayType)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Pay: </label>
                                                <h4>@Html.DisplayFor(m => m.Salary)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>HRA:</label> <br>
                                                <h4>@Html.DisplayFor(m => m.HRA)</h4>
                                            </div>
                                        </div>                                        
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label class="">Employee Workplace</label>
                                                @Html.TextBoxFor(m => m.EmployeeWorkplace, new { @class = "form-control", @placeholder = "Employee Workplace" })
                                                <div>@Html.ValidationMessageFor(m => m.EmployeeWorkplace)</div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Requested By</label>
                                                <h4>@Html.DisplayFor(m => m.RequestedfromPI)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Salary Level Range <i class="ion-information-circled" data-toggle="tooltip" data-original-title="@Model.SalaryLevelDescription"></i></label>
                                                <h4>@Html.DisplayFor(m => m.SalaryLevel)</h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row ">
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label class="">Commitment number</label>
                                                <h4>@Html.DisplayFor(m => m.CommitmentNo)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                @if (Model.isWithdraw == true)
                                                {
                                                    <label class="">Withdraw amount</label>
                                                    <h4>@Html.DisplayFor(m => m.CommitmentAmount)</h4>
                                                }
                                                else
                                                {
                                                    <label class="">Commitment amount</label>
                                                    <h4>@Html.DisplayFor(m => m.CommitmentAmount)</h4>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Medical:</label> <br>
                                                <h4>@Html.DisplayFor(m => m.MedicalAmmount)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Staff Category:</label>
                                                <h4>@Html.DisplayFor(m => m.StaffCategory)</h4>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="col-md-6">
                                                <div class="form-group custom-form-group">
                                                    <label>M.S/Ph.D</label>
                                                    <h4>
                                                        @Html.CheckBoxFor(m => m.MsPhd, new { @Disabled = "Disabled" })
                                                    </h4>
                                                </div>
                                            </div>
                                            @if (Model.MsPhd)
                                            {
                                                <div class="col-md-6">
                                                    <div class="form-group custom-form-group  ">
                                                        <label>Details</label>
                                                        <h4>@Html.DisplayFor(m => m.PhdDetail)</h4>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group ">
                                                <label> Project Number:</label>
                                                <h4>@Html.DisplayFor(m => m.ProjectNumber)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Appointment start date:</label> <br>
                                                <h4 id="txtAppointmentStartDate">@Html.DisplayFor(m => m.Appointmentstartdate)</h4>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Appointment End date:</label> <br>
                                                <h4 id="txtAppointmentEndDate">@Html.DisplayFor(m => m.AppointmentEndDate)</h4>
                                            </div>
                                        </div>

                                    </div>

                                    <div class="row mt-lg">
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group  ">
                                                <label>Offer Letter Date </label>
                                                <h4>@Html.DisplayFor(m => m.OfferDate)</h4>
                                            </div>

                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group  ">
                                                <label>Offer Letter</label>
                                                <br />
                                                @if (Model.Attachments != null)
                                                {
                                                    <a href="@Url.Action("ShowDocument", "Project", new { file = Model.Attachments.DocumentName, filepath = Model.Attachments.DocumentPath })" target="_blank">@Html.DisplayFor(m => m.Attachments.DocumentActualName)</a>
                                                }
                                            </div>
                                        </div>
                                        @*<div class="col-md-3">
                                                <div class="form-group custom-form-group  ">
                                                    <label>Actual Date </label>
                                                    @Html.EditorFor(m => m.ActualDate, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.ActualDate)
                                                </div>
                                            </div>*@
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group  ">
                                                <label class="required">Joining Report  </label> <br>
                                                @if (Model.STEId > 0 && !string.IsNullOrEmpty(Model.JoiningReportPath))
                                                {
                                                    <input type="file" name="JoiningReport" class="">
                                                    @Html.ActionLink(Model.JoiningReportFileName, "ShowDocument", new { Controller = "Account", filepath = "Requirement", file = Model.JoiningReportPath }, new { @name = "DocDownload", @target = "_blank" })
                                                }
                                                else
                                                {
                                                    <input type="file" name="JoiningReport" class="required">
                                                    @Html.ValidationMessageFor(m => m.JoiningReport)
                                                }
                                            </div>
                                        </div>

                                    </div>
                                    <div class="row mt-lg">
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <label>Remarks</label>  <br>
                                                @Html.TextAreaFor(m => m.VerificationRemarks, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="bl-lg-panel-box pb-null">
                <div class="cmn-panel-box">
                    <div class="grey-bg-adj mb-lg">
                        <div class="row">
                            <div class="col-md-4" id="devCMAdmin">
                                <div class="form-group custom-form-group">
                                    @Html.RadioButtonFor(m => m.FlowApprover, "CMAdmin", new { @id = "IsNotetoCMAdmin" }) <label class="ml-sm ">Note to CM Admin</label>
                                </div>
                            </div>
                            <div class="col-md-4" id="devNoteDean">
                                <div class="form-group custom-form-group">
                                    @Html.RadioButtonFor(m => m.FlowApprover, "NDean", new { @id = "IsNotetoDean" }) <label class="ml-sm " id="lblNoteDean">Note to Dean</label>
                                </div>
                            </div>
                            @if (string.IsNullOrEmpty(Model.Status) || Model.Status == "Awaiting Verification-Draft" || Model.Status == "Awaiting Verification" || Model.Status == "Awaiting Verification-Open")
                            {
                                <div class="col-md-4" id="">
                                    <div class="form-group custom-form-group">
                                        <a id="clearFlow">Clear</a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 mb-lg text-center">
            <input type="submit" class="cancel btn btn-danger" value="Save as drafts" name="Button" id="btnDraft" />
            <input type="submit" class="btn btn-success" value="Send for approval" name="Button" id="btnSave" />           
            @if (Model.ApplicationType == "STE")
            {
                <a href='@Url.Action("STEVerficationList", "Requirement")' class="btn btn-default">Close</a>
            }
            else
            {
                <a href='@Url.Action("OSGVerificationList", "Requirement")' class="btn btn-default">Close</a>
            }
        </div>
    </div>
}
<div class="" id="act-now">
    @Html.Partial("_ProcessStatus")
</div>

<div class="loading-bg dis-none">
</div>
<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var Status = @Html.Raw(Json.Encode(Model.Status)) || '';
    var FlowApp = @Html.Raw(Json.Encode(Model.FlowApprover)) || '';
    $(document).ready(function () {
        $('[data-toggle="tooltip"]').tooltip();
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        $('.selectpicker').selectpicker({
            liveSearch: true
        });
        $('.selectpicker').selectpicker('refresh');

        var CurrDate = moment(new Date()).toDate();

        if (!$('.loading-bg').hasClass('dis-none')) {
            $('.loading-bg').addClass('dis-none');
        }
    });
    $('#clearFlow').click(function () {
        $("input[name=FlowApprover]").prop('checked', false);
    });

    if (FlowApp == "CMAdmin") {
        $("input[name=FlowApprover][value=CMAdmin]").prop('checked', true);
        //if (Status != "Awaiting Verification-Draft")
        //    $("#devNoteDean").hide();
    }
    if (FlowApp == "NDean") {
        $("input[name=FlowApprover][value=NDean]").prop('checked', true);
        //if (Status != "Awaiting Verification-Draft")
        //    $("#devCMAdmin").hide();
    }
    var AppointmentStartDate = $('#txtAppointmentStartDate').text();
    var AppointmentEndDate = $('#txtAppointmentEndDate').text();

    var setStartDate = moment(new Date(AppointmentStartDate.split('-').join('/'))).toDate();
    var setEndDate = moment(new Date()).toDate();

    //$('input[name="ActualDate"]').datepicker({
    //    dateFormat: 'dd-MM-yy',
    //    showStatus: true,
    //    showWeeks: true,
    //    changeYear: true,
    //    yearRange: '1950:+30',
    //    highlightWeek: true,
    //    numberOfMonths: 1,
    //    showAnim: "scale",
    //    showOptions: {
    //        origin: ["top", "left"]
    //    },
    //    beforeShowDay: function (date) {
    //        var day = date.getDay();
    //        return [day != 0, ''];
    //    }
    //}).datepicker("option", "minDate", setStartDate).datepicker("option", "maxDate", setEndDate);
    FillPIDetails();
    function FillPIDetails() {
        var projectId = $("#ProjectId").val();
        if (projectId != "" || projectId != 0) {
            $.getJSON("@Url.Action("LoadProjectDetails", "Requirement")", { ProjectId: projectId },
                 function (result) {
                     if (result.projectData.ProjectNumber != null) {
                         $('#PICode').text(result.projectData.PICode);
                         $('#PINametxt').text(result.projectData.PIName);
                         $('#DepartmentNametxt').text(result.projectData.PIDepartmentName);
                     }
                 });
        }
    }



    var addyear = 0;

    function formSave() {
        var isValid = $('#formVerification').valid();
        if (!isValid)
            return false;
        if (isValid)
            $('#formVerification').submit();
    }

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function isAlphaKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if ((charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    $('#EmployeeWorkplace').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#displayImg')
                    .attr('src', e.target.result)
                    .width(30)
                    .height(30);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    function readSignURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#displaySignature')
                    .attr('src', e.target.result)
                    .width(30)
                    .height(30);
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    $('a[name="DocDownload"]').click(function (p) {
        p.preventDefault();
        var ref = $(this).attr('href');
        var win = window.open('', '_blank');
        win.location.href = ref;
    });


    $(document).on('click', '#btnSave', function (e) {
        e.preventDefault();
        var isValid = $('#formVerification').valid();
        if (isValid)
            $('#formVerification').submit();

        return !isValid;
    });
</script>
<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>


