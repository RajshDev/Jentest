@{
    ViewBag.Title = "HRA";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>HRA</h3>
    </div>
</div>

<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="grid">

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="popup">

</div>
<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var alertMsg = '@TempData["alertMsg"]';
    $(document).ready(function () {
        applyAutoComplete($('#ProjectNo'), $('#ProjectID'), '@Url.Action("LoadProjectList","CoreAccounts")');
    });

    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        else if (alertMsg != '') {
            $('#alert').html(alertMsg);
            $('#Validation').modal('toggle');
        }
        getData(1);
    });



    function getData(page) {
        var input = [];
        input = {
            SearchInName: null,
            SearchInCategory: null,
            SearchInDesignation: null,
            SearchInProjectNumber: null,
            SearchInEmployeeId: null,
            TypeCategory: null,
        },
         $("#grid").jsGrid("search", input, pageIndex = 1, pageSize = 5);
    }


    $("#grid").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 5,
        editing: false,
        filtering: true,
        pageLoading: true,
        autoload: true,
        controller: {
            loadData: function (filter) {
                var searchData = [];
                searchData = {
                    SearchInName: filter.Name || null,
                    SearchInCategory: filter.CategoryName || null,
                    SearchInDesignation: filter.Designation || null,
                    SearchInProjectNumber: filter.ProjectNumber || null,
                    SearchInEmployeeId: filter.EmployeeId || null,
                    SearchInStatus: filter.Status || null,
                    SearchBasicAmount: filter.Salary||null
                },
                filter.model = searchData;
                var deferred = $.Deferred();
                $.ajax({
                    type: "post",
                    url: "getHRAList",
                    data: JSON.stringify(filter),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        var da = {
                            data: result.List,
                            itemsCount: result.TotalRecords
                        }
                        deferred.resolve(da);
                    },
                    error: function (err) {
                        console.log("error : " + err);
                    }

                });
                return deferred.promise();
            }

        },

        fields: [
            { name: "SNo", title: "S.No", editing: false, width: 50 },
            { type: "number", name: "ID", title: "Id", visible: false },
            { type: "text", name: "EmployeeId", title: "Employee ID", editing: false },
            { type: "text", name: "Name", title: "Employee Name", editing: false },
            { type: "text", name: "CategoryName", title: "Category", editing: false },
            { type: "text", name: "Designation", title: "Designation", editing: false },
            { type: "text", name: "ProjectNumber", title: "Project Details", editing: false },
            { type: "text", name: "Status", title: "Status", editing: false },
            { type: "text", name: "Salary", title: "Salary", editing: false, filter: false },

             {
                 type: "control", editButton: false, deleteButton: false, width: 120, title: "Action",

                 itemTemplate: function (value, item) {
                     var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                     if ((item.Status == "Note to PI" || item.Status == "Note to Dean" || item.Status == "Note to Commitee" || item.Status == "Open") && !item.Is_CommitmentReject && !item.Is_GovAgency) {
                         statusList = [{ id: "", name: "Select Action" }, { id: "Modify", name: "Modify" }]
                     }
                     else {
                         statusList = [{ id: "", name: "Select Action" }, { id: "View", name: "View" }]
                     }
                     var $customSelect;
                     $customSelect = $("<select>")
                          .attr("class", "form-control").prop("selectedIndex", "")
                     $.each(statusList, function (index, itemData) {
                         $customSelect.append($('<option/>', {

                             value: itemData.id,
                             text: itemData.name
                         }));
                     });
                     $customSelect.change(function (e) {
                         var selVal = $(this).val();
                         if (selVal == "Modify") {
                             if (item.TypeCategory == "HRA Booking") {
                                 var url = '@Url.Action("HRABooking", "Requirement")?Steid=' + item.ID + '&Orderid=' + item.OrderID + '&listf=HRA';
                                 window.location.href = url;
                             }
                             else if (item.TypeCategory == "HRA Cancellation") {
                                 var url = '@Url.Action("HRACancellation", "Requirement")?Steid=' + item.ID + '&Orderid=' + item.OrderID + '&listf=HRA';
                                 window.location.href = url;
                             }
                         }
                         else if (selVal == "View") {
                             if (item.Status == "Committee Clarify" || (item.Status != "Cancellation Initiated" && (item.Is_GovAgency || item.Is_CommitmentReject == true))) {
                                 var url = '@Url.Action("RCTOverAllView", "Requirement")?orderid=' + item.OrderID + '&listf=HRA';
                                 window.location.href = url;
                             }
                             else {
                                 var url = '@Url.Action("HRAView", "Requirement")?OrderId=' + item.OrderID + '&listf=HRA';
                                 window.location.href = url;
                             }
                         }
                         $(this).val("");
                         return false;
                         e.stopPropagation();
                     });
                     return $result.add($customSelect);

                 },
                 _createFilterSwitchButton: function () {
                     return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                 }
             }


        ],

    });
    $("#grid").jsGrid("option", "filtering", false);
</script>
