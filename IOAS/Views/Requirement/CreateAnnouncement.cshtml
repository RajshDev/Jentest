@model IOAS.Models.AnnouncementMasterModel
@{
    ViewBag.Title = "Create Announcement";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
    <link href="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />

    bool isRepost = Convert.ToBoolean(Request.Params["isRepost"]);
    int count = 1;
    string DisNoneCls = "";
}

<style>
    .pdt-null {
        padding-top: 0px;
    }

    .modal-dialog {
        width: 700px;
    }

    .alter-frm-ctrl .form-control {
        width: 80%;
        float: left;
    }

    .alter-frm-ctrl span {
        float: left !important;
        margin-left: 5px;
        margin-top: 5px;
    }

    .pdt-null {
        padding-top: 0px !important;
    }

    .frm-drp {
        height: 30px !important;
    }

    .rev-frm-scrl {
        height: 350px;
        background: #f6f6f6;
        overflow: auto;
    }

    .rc-tb-scrl {
        width: 100%;
        overflow: auto;
    }

        .rc-tb-scrl .scrl-table {
            max-width: 2100px !important;
            width: 2000px;
        }
</style>
@using (Html.BeginForm("CreateAnnouncement", "Requirement", FormMethod.Post, new { role = "form", @id = "formAnnouncement", @enctype = "multipart/form-data" }))
{
    <div class="row hd-tt-bg">
        <div class="col-md-12">
            <h4><b>Announcement</b> </h4>
            <ul class="nav nav-pills custom-nav-pills custom-spl-nav">
                <li class="active"><a href="javascript:void(0)">Announcement Entry</a></li>
                @if (Model.AnnouncementID > 0 && Model.StatusID > 5)
                {
                    <li><a href="javascript:void(0)">Shortlisted Candidate</a></li>
                }
                @if (Model.AnnouncementID > 0 && Model.StatusID > 9)
                {
                    <li><a href="javascript:void(0)">Selected Candidate</a></li>
                }

            </ul>
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.isDeannote, new { @id = "isDeannote" })
    @Html.HiddenFor(m => m.isShortlist, new { @id = "isShortlist" })
    @Html.HiddenFor(m => m.isSelectionlist, new { @id = "isSelectionlist" })
    @Html.HiddenFor(m => m.isRepost, new { @id = "isRepost" })
    @Html.HiddenFor(m => m.AnnouncementID)
    @Html.HiddenFor(m => m.StatusID)
    @Html.HiddenFor(m => m.IsAnnouncementCreate)
    @Html.HiddenFor(m => m.ValidAnnouncementPlatform_f)
    @Html.HiddenFor(m => m.Platform_f)
    @Html.HiddenFor(m => m.Button)
    @*@Html.HiddenFor(M => M.validDetails.StatusID)
        @Html.HiddenFor(M =>M.validDetails.IsValidDetail)*@

    <div class="cust-tab row">
        <div class="page-wrapper mt30">
            <div>
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-12" id="divCommonWise">
                            <div class="bl-lg-panel-box pb-null">
                                <div class="cmn-panel-box">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Announcement Title</label><br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    @Html.DisplayFor(M => M.AnnouncementTitle)
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(M => M.AnnouncementTitle, new { @class = "form-control" })
                                                    <div class="txt-error txt-red"> @Html.ValidationMessageFor(M => M.AnnouncementTitle)</div>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Announcement Category</label><br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    @Html.DisplayFor(M => M.AnnouncementCategory)
                                                    @Html.HiddenFor(M => M.AnnouncementCategory)
                                                }
                                                else
                                                {
                                                    if (Model != null && !String.IsNullOrWhiteSpace(Model.AnnouncementCategory) && Model.AnnouncementCategory == "Project wise")
                                                    {
                                                        @Html.RadioButtonFor(m => m.AnnouncementCategory, "Project wise", new { @checked = "checked" })@:&nbsp;<label>Project wise</label> <br>
                                                        @Html.RadioButtonFor(m => m.AnnouncementCategory, "Designation wise")@:&nbsp;<label>Designation wise</label> <br>
                                                    }
                                                    else
                                                    {
                                                        @Html.RadioButtonFor(m => m.AnnouncementCategory, "Project wise")@:&nbsp;<label>Project wise</label> <br>
                                                        @Html.RadioButtonFor(m => m.AnnouncementCategory, "Designation wise", new { @checked = "checked" })@:&nbsp;<label>Designation wise</label> <br>
                                                    }
                                                    <div class="txt-error txt-red"> @Html.ValidationMessageFor(m => m.AnnouncementCategory)</div>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">PI</label>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    @Html.DisplayFor(m => m.PIName)
                                                }
                                                else
                                                {
                                                    @Html.TextBoxFor(m => m.PIName, new { @class = "form-control" })
                                                    <div class="txt-error txt-red"> @Html.ValidationMessageFor(m => m.PIName)</div>
                                                    @Html.HiddenFor(m => m.PIId)
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div class="form-group custom-form-group">
                                                <label class="required">DA Comments </label><br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    @Html.DisplayFor(m => m.DAComments)
                                                }
                                                else
                                                {
                                                    @Html.TextAreaFor(m => m.DAComments, new { @class = "form-control", @rows = "3" })
                                                    <div class="txt-error txt-red"> @Html.ValidationMessageFor(m => m.DAComments)</div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row ">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label>Mode of request</label><br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    @Html.DisplayFor(m => Model.ModeOfRequest)
                                                }
                                                else
                                                {
                                                    if (Model != null && !String.IsNullOrWhiteSpace(Model.ModeOfRequest) && Model.ModeOfRequest == "Email")
                                                    {
                                                        @Html.RadioButtonFor(M => M.ModeOfRequest, "Tapal")@:&nbsp;<label>Tapal</label> <br>
                                                        @Html.RadioButtonFor(M => M.ModeOfRequest, "Email", new { @checked = "checked" })@:&nbsp;<label>Email</label> <br>
                                                    }
                                                    else
                                                    {
                                                        @Html.RadioButtonFor(M => M.ModeOfRequest, "Tapal", new { @checked = "checked" })@:&nbsp;<label>Tapal</label> <br>
                                                        @Html.RadioButtonFor(M => M.ModeOfRequest, "Email")@:&nbsp;<label>Email</label> <br>
                                                    }
                                                    <div class="txt-error txt-red"> @Html.ValidationMessageFor(M => M.ModeOfRequest)</div>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-md-8">
                                            <div class="form-group custom-form-group">
                                                <label>Requested By</label><br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    @Html.DisplayFor(m => Model.AnnouncementRequestBy)
                                                }
                                                else
                                                {
                                                    if (Model != null && !String.IsNullOrWhiteSpace(Model.AnnouncementRequestBy) && Model.AnnouncementRequestBy == "ICSR Internal")
                                                    {
                                                        @Html.RadioButtonFor(M => M.AnnouncementRequestBy, "Department")@:&nbsp;<label>Department</label> <br>
                                                        @Html.RadioButtonFor(M => M.AnnouncementRequestBy, "ICSR Internal", new { @checked = "checked" })@:&nbsp;<label>ICSR Internal</label> <br>
                                                    }
                                                    else
                                                    {
                                                        @Html.RadioButtonFor(M => M.AnnouncementRequestBy, "Department", new { @checked = "checked" })@:&nbsp;<label>Department</label> <br>
                                                        @Html.RadioButtonFor(M => M.AnnouncementRequestBy, "ICSR Internal")@:&nbsp;<label>ICSR Internal</label> <br>
                                                    }
                                                    <div class="txt-error txt-red"> @Html.ValidationMessageFor(M => M.AnnouncementRequestBy)</div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Request Receive Date  </label><br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    <h4>@Html.DisplayFor(M => M.strRequestReceiveDate)</h4>
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(m => m.RequestReceiveDate, new { @class = "form-control cm-dt-fd", @id = "RequestReceiveDate", @autocomplete = "off", @readonly = true })
                                                    <div class="txt-error txt-red"> @Html.ValidationMessageFor(M => M.RequestReceiveDate)</div>
                                                }
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group  ">
                                                <label class="required">Announcement Closure Date</label><br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2 && !Model.isRepost)
                                                {
                                                    <h4>@Html.DisplayFor(m => m.strAnnouncementClosureDate)</h4>
                                                }
                                                else
                                                {
                                                    @Html.EditorFor(m => m.AnnouncementClosureDate, new { @class = "form-control cm-dt-fd", @id = "ClosureDate", @autocomplete = "off", @readonly = true })
                                                }
                                                <div class="txt-error txt-red"> @Html.ValidationMessageFor(M => M.AnnouncementClosureDate)</div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group  ">
                                                <label class="required">Announcement Publish</label> <br>
                                                @if (Model.AnnouncementID > 0 && Model.StatusID > 2)
                                                {
                                                    @Html.CheckBoxFor(m => m.Naukri, new { @id = "AnnouncementPlatForm", @Disabled = "Disabled" })@:&nbsp; Naukri <br>
                                                    @Html.CheckBoxFor(m => m.indeed, new { @id = "AnnouncementPlatForm", @Disabled = "Disabled" })@:&nbsp; indeed <br>
                                                    @Html.CheckBoxFor(m => m.linkedin, new { @id = "AnnouncementPlatForm", @Disabled = "Disabled" })@:&nbsp; linkedin <br>
                                                    @Html.CheckBoxFor(m => m.Recruitmentportal, new { @id = "AnnouncementPlatForm", @Disabled = "Disabled" })@:&nbsp; Recruitment portal <br>
                                                    @Html.CheckBoxFor(m => m.Others, new { @id = "AnnouncementPlatForm", @Disabled = "Disabled" })@:&nbsp; Others<br>
                                                }
                                                else
                                                {
                                                    @Html.CheckBoxFor(m => m.Naukri, new { @id = "AnnouncementPlatForm" })@:&nbsp; Naukri <br>
                                                    @Html.CheckBoxFor(m => m.indeed, new { @id = "AnnouncementPlatForm" })@:&nbsp; indeed <br>
                                                    @Html.CheckBoxFor(m => m.linkedin, new { @id = "AnnouncementPlatForm" })@:&nbsp; linkedin <br>
                                                    @Html.CheckBoxFor(m => m.Recruitmentportal, new { @id = "AnnouncementPlatForm" })@:&nbsp; Recruitment portal <br>
                                                    @Html.CheckBoxFor(m => m.Others, new { @id = "AnnouncementPlatForm" })@:&nbsp; Others<br>
                                                }
                                                <div class="txt-error txt-red"> @Html.ValidationMessageFor(m => m.ValidAnnouncementPlatform_f)</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6" id="divProjectWise" style="display:none">
                            <div class="bl-lg-panel-box  pb-null">
                                <div class="bl-lg-panel-box-hd mb-m-5 pd-null">
                                    <div class="cmn-panel-box">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Project Number</label><br>
                                                    @if (Model.AnnouncementID > 0 && Model.AnnouncementCategory == "Project wise" && (Model.StatusID == 1 || Model.StatusID == 2))
                                                    {
                                                        @Html.TextBoxFor(m => m.ProjectNumber, new { @class = "form-control" })
                                                    }
                                                    else if (Model.AnnouncementID > 0 && Model.AnnouncementCategory == "Project wise" && Model.StatusID > 2)
                                                    {
                                                        @Html.DisplayFor(m => m.ProjectNumber)
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(m => m.ProjectNumber, new { @class = "form-control" })
                                                    }
                                                    @Html.HiddenFor(m => m.ProjectId)
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Project Title</label>
                                                    <h4 id="lblProjectTitle"></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Name of the Client / Sponsoring Agency</label>
                                                    <h4 id="lblClietAgency"></h4>
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Project Type</label>
                                                    <h4 id="lblProjectType"></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>PI Name</label>
                                                    <h4 id="lblPIName"></h4>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Project Start Date</label>
                                                    <h4 id="lblProjectStartDate"></h4>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Project Closure Date</label>
                                                    <h4 id="lblProjectClosureDate"></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>PI Code</label>
                                                    <h4 id="lbPICode"></h4>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>PI Email ID</label>
                                                    <h4 id="lblPIEmailID"></h4>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>PI Phone No</label>
                                                    <h4 id="lblPIPhone"></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Department code </label>
                                                    <h4 id="lblDepartmentCode"></h4>
                                                </div>
                                            </div>
                                            <div class="col-md-4">
                                                <div class="form-group custom-form-group mb-sm">
                                                    <label>Department Name</label>
                                                    <h4 id="lblDepartmentName"></h4>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="form-group custom-form-group">
                                                    <input type="button" class="btn btn-success" value="View Staff Allocation" data-toggle="modal" data-target="#myModal1">
                                                    <input type="button" class="btn btn-success" value="Project Fund Availability" id="btnViewSummary">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="bl-lg-panel-box pb-null" id="divDesignation">
                                <div class="cmn-panel-box">
                                    <div class="grey-bg-adj mb-lg">
                                        <div class="row rc-tb-scrl">
                                            <div class="col-md-12">
                                                <table class="table alter-table mb-null scrl-table">
                                                    <thead>
                                                        <tr>
                                                            <th style="width:150px;">Designation Code</th>
                                                            <th style="width:250px;">Designation</th>
                                                            <th style="width:250px;">Project Number</th>
                                                            <th style="width:150px;">Vacancies </th>
                                                            <th style="width:400px;">Qualification / Experience</th>
                                                            <th style="width:250px;">Pay Range</th>
                                                            <th style="width:50px;"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @if (Model != null && Model.DesignationDetails != null)
                                                        {
                                                            if (Model.DesignationDetails.Count > 0)
                                                            {
                                                                count = 0;
                                                                foreach (var item in Model.DesignationDetails)
                                                                {
                                                                    var descode = "DesignationDetails[" + count + "].DesignationCode";
                                                                    var desId = "DesignationDetails[" + count + "].DesignationID";
                                                                    var des = "DesignationDetails[" + count + "].Designation";
                                                                    var projectNo = "DesignationDetails[" + count + "].ProjectNumber";
                                                                    var projectId = "DesignationDetails[" + count + "].ProjectID";
                                                                    var vacancies = "DesignationDetails[" + count + "].Vacancies";
                                                                    var qualification = "DesignationDetails[" + count + "].Qualification";
                                                                    var minSalary = "DesignationDetails[" + count + "].MinSalary";
                                                                    var maxSalary = "DesignationDetails[" + count + "].MaxSalary";
                                                                    <tr>
                                                                        <td>
                                                                            @Html.TextBox(@descode, item.DesignationCode, new { @class = "form-control", @id = "DesignationCode_" + count, @autocomplete = "off" })
                                                                            @Html.Hidden(@desId, item.DesignationID, new { @id = "HdnDesignationID_" + count })
                                                                            <div class="txt-error txt-red"> @Html.ValidationMessage(@descode) </div>
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBox(@des, item.Designation, new { @class = "form-control", @id = "Designation_" + count, @autocomplete = "off" })
                                                                            <div class="txt-error txt-red"> @Html.ValidationMessage(@des)</div>
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBox(@projectNo, item.ProjectNumber, new { @class = "form-control", @id = "ProjectNumber_" + count, @autocomplete = "off" })
                                                                            @Html.Hidden(@projectId, item.ProjectID, new { @id = "ProjectID_" + count })
                                                                            <div class="txt-error txt-red"> @Html.ValidationMessage(@projectNo)</div>
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextBox(@vacancies, item.Vacancies, new { @class = "form-control", @id = "Vacancies_" + count, @autocomplete = "off", @onkeypress = "return isNumberKey(event)" })
                                                                            <div class="txt-error txt-red"> @Html.ValidationMessage(@vacancies)</div>
                                                                        </td>
                                                                        <td>
                                                                            @Html.TextArea(@qualification, item.Qualification, new { @class = "form-control", @id = "Qualification_" + count, @autocomplete = "off" })
                                                                            <div class="txt-error txt-red"> @Html.ValidationMessage(@qualification)</div>
                                                                        </td>
                                                                        <td>
                                                                            <table>
                                                                                <tbody>
                                                                                    <tr>
                                                                                        <td class="mr-sm">
                                                                                            Minimum @Html.TextBox(@minSalary, item.MinSalary, new { @class = "form-control", @id = "MinSalary_" + count, @autocomplete = "off", @onkeypress = "return isNumberKey(event)" })
                                                                                            <div class="txt-error txt-red"> @Html.ValidationMessage(@minSalary)</div>
                                                                                        </td>
                                                                                        <td>
                                                                                            Maximum @Html.TextBox(@maxSalary, item.MaxSalary, new { @class = "form-control", @id = "MaxSalary_" + count, @autocomplete = "off", @onkeypress = "return isNumberKey(event)" })
                                                                                            <div class="txt-error txt-red"> @Html.ValidationMessage(@maxSalary)</div>
                                                                                        </td>
                                                                                    </tr>
                                                                                </tbody>
                                                                            </table>
                                                                        </td>
                                                                        <td>
                                                                            @if (count == 0)
                                                                            {
                                                                                <a id="btnRemove" class="dis-none btn-circle"><i class="ion-android-close"></i></a>
                                                                            }
                                                                            else
                                                                            {
                                                                                <a id="btnRemove" class="btn-circle"><i class="ion-android-close"></i></a>
                                                                            }
                                                                        </td>
                                                                    </tr>
                                                                    count++;
                                                                }
                                                            }
                                                            else
                                                            {
                                                                var descode = "DesignationDetails[0].DesignationCode";
                                                                var desId = "DesignationDetails[0].DesignationID";
                                                                var des = "DesignationDetails[0].Designation";
                                                                var projectNo = "DesignationDetails[0].ProjectNumber";
                                                                var projectId = "DesignationDetails[0].ProjectID";
                                                                var vacancies = "DesignationDetails[0].Vacancies";
                                                                var qualification = "DesignationDetails[0].Qualification";
                                                                var minSalary = "DesignationDetails[0].MinSalary";
                                                                var maxSalary = "DesignationDetails[0].MaxSalary";
                                                                <tr>
                                                                    <td>
                                                                        @Html.TextBox(@descode, null, new { @class = "form-control", @id = "DesignationCode_0", @autocomplete = "off" })
                                                                        @Html.Hidden(@desId, null, new { @id = "HdnDesignationID_0" })
                                                                        <div class="txt-error txt-red"> @Html.ValidationMessage(@descode)</div>
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBox(@des, null, new { @class = "form-control", @id = "Designation_0", @autocomplete = "off" })
                                                                        <div class="txt-error txt-red"> @Html.ValidationMessage(@des)</div>

                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBox(@projectNo, null, new { @class = "form-control", @id = "ProjectNumber_0", @autocomplete = "off" })
                                                                        @Html.Hidden(@projectId, null, new { @id = "ProjectID_0" })
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextBox(@vacancies, null, new { @class = "form-control", @id = "Vacancies_0", @autocomplete = "off", @onkeypress = "return isNumberKey(event)" })
                                                                        <div class="txt-error txt-red"> @Html.ValidationMessage(@vacancies)</div>
                                                                    </td>
                                                                    <td>
                                                                        @Html.TextArea(@qualification, null, new { @class = "form-control", @id = "Qualification_0", @autocomplete = "off" })
                                                                        <div class="txt-error txt-red"> @Html.ValidationMessage(@qualification)</div>
                                                                    </td>
                                                                    <td>
                                                                        <table>
                                                                            <tbody>
                                                                                <tr>
                                                                                    <td class="mr-sm">
                                                                                        Minimum @Html.TextBox(@minSalary, null, new { @class = "form-control", @id = "MinSalary_0", @autocomplete = "off", @onkeypress = "return isNumberKey(event)" })
                                                                                        <div class="txt-error txt-red"> @Html.ValidationMessage(@minSalary)</div>
                                                                                    </td>
                                                                                    <td>
                                                                                        Maximum @Html.TextBox(@maxSalary, null, new { @class = "form-control", @id = "MaxSalary_0", @autocomplete = "off", @onkeypress = "return isNumberKey(event)" })
                                                                                        <div class="txt-error txt-red"> @Html.ValidationMessage(@maxSalary)</div>
                                                                                    </td>

                                                                                </tr>
                                                                            </tbody>
                                                                        </table>
                                                                    </td>
                                                                    <td>
                                                                        <a id="btnRemove" class="dis-none btn-circle"><i class="ion-android-close"></i></a>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                        @if (Model.StatusID == null || Model.StatusID == 1)
                                                        {
                                                            <tr class="lst-btnAdd @DisNoneCls">
                                                                <td></td>
                                                                <td></td>
                                                                <td></td>
                                                                <td></td>
                                                                <td></td>
                                                                <td></td>
                                                                <td><a id="btnAdd" class="btn-circle"><i class="ion-plus-round"></i></a></td>
                                                            </tr>
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="bl-lg-panel-box pb-null">
                                <div class="cmn-panel-box">
                                    <div class="grey-bg-adj mb-lg">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <label>Supporting Document</label>
                                                @if (!string.IsNullOrEmpty(Model.DeanNoteDocPath))
                                                {
                                                    <br />
                                                    <h4>@Html.ActionLink(Model.DeanNoteDocPath.Split('_').LastOrDefault(), "ShowDocument", new { Controller = "Account", filepath = "RCTAnnouncementDocuments", file = Model.DeanNoteDocPath }, new {  @target = "_blank" })</h4>
                                                }
                                                @if (Model.StatusID == null || Model.StatusID == 1 || Model.StatusID == 2)
                                                {
                                                    <input type="file" name="DeanNote" />
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="bl-lg-panel-box pb-null">
                                <div class="cmn-panel-box">
                                    <div class="grey-bg-adj mb-lg">
                                        <div class="row">
                                            <div class="col-md-4" id="devCMAdmin">
                                                <div class="form-group custom-form-group">
                                                    @Html.RadioButtonFor(m => m.FlowApprover, "CMAdmin", new { @id = "IsNotetoCMAdmin" }) <label class="ml-sm ">Note to CM Admin</label>
                                                </div>
                                            </div>
                                            <div class="col-md-4" id="devNoteDean">
                                                <div class="form-group custom-form-group">
                                                    @Html.RadioButtonFor(m => m.FlowApprover, "DeanFlow", new { @id = "IsNotetoDean" }) <label class="ml-sm " id="lblNoteDean">Note to Dean</label>
                                                </div>
                                            </div>
                                            @if (Model.StatusID == null || Model.StatusID == 1)
                                            {
                                                <div class="col-md-4" id="">
                                                    <div class="form-group custom-form-group">
                                                        <a id="clearFlow">Clear</a>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 mb-lg text-center">
                            <input type="submit" class="cancel btn btn-danger" value="Save as drafts" name="Button" id="btnDraft" />
                            <input type="submit" class="btn btn-success" value="Send for approval" name="Button" id="btnSave" />
                            <input type="submit" class="btn btn-primary" value="Post Announcement" name="Button" id="btnAnnouncementPost" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    if (Model.AnnouncementID > 0 && Model.StatusID > 5)
    {
        @Html.Partial("_AnnouncementShortlist")
    }

    if (Model.AnnouncementID > 0 && Model.StatusID > 9)
    {
        @Html.Partial("_AnnouncementSelectionlist")
    }
    <div class="row text-center mb-lg">
        
        @if (Model.StatusID > 5)
        {
			<button type="button" class="btn btn-default" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
            <button type="button" class="btn btn-primary" id="nextBtn" onclick="nextPrev(1)">Next</button>
        }
        <button type="button" class="btn btn-default" onclick="window.location.href='@Url.Action("AnnoncementMaster", "Requirement")';">Close</button>
    </div>

    <div id="dialog" class="modal fade" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header brd-bottom">
                    <button type="button" class="close" data-dismiss="modal">×</button>
                    <h4 class="modal-title">Mail Preview</h4>
                </div>
                <div class="modal-body">
                    <div style="padding:10px;" id="note">
                    </div>
                </div>
                <div class="modal-footer brd-top">
                    <button type="submit" class="btn btn-danger" id="btnConfirm">Confirm</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
}
<input type="hidden" id="currentRefId" value="@Model.AnnouncementID" />
<input type="hidden" id="processGuideLineId" value="@ViewBag.processGuideLineId" />
@Html.Partial("_ProcessStatus")

<div id="popup">

</div>

<div id="getReason" class="modal fade modal-success" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h3 class="modal-title">Project number not entered</h3>
            </div>
            <div class="modal-body">

                <p id="alertSuccess">Do you really want to continue</p>

            </div>
            <div class="modal-footer">
                <button id="btnContinue" type="button" class="btn btn-danger">Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">No</button>
            </div>
        </div>

    </div>
</div>

<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var StatusID = @Html.Raw(Json.Encode(Model.StatusID)) || 0;
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccessMsg').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        $('.selectpicker').selectpicker({
            liveSearch: true
        });
        $('.selectpicker').selectpicker('refresh');

        applyAutoComplete($('#ProjectNumber'), $('#ProjectId'), '@Url.Action("LoadProjectList","CoreAccounts")', 'ProjectSummary',true);


        $('#RequestReceiveDate').datepicker({
            dateFormat: 'dd-MM-yy',
            changeYear: true
        }).datepicker("option", "maxDate", +0).datepicker("option", "minDate", -30);
       
    });

    $('#AnnouncementClosureDate').datepicker({
        dateFormat: 'dd-MM-yy',
        changeYear: true
    }).datepicker("option", "maxDate", +180).datepicker("option", "minDate", +0);

    $('#clearFlow').click(function() {
        $("input[name=FlowApprover]").prop('checked', false);
    });
    var flowApp = @Html.Raw(Json.Encode(Model.FlowApprover)) || '';
    if(flowApp == "CMAdmin")
    {
        $("input[name=FlowApprover][value=CMAdmin]").prop('checked', true);
        if(StatusID != 0 && StatusID != 1)
            $("#devNoteDean").hide();
    }
    if(flowApp == "DeanFlow")
    {
        $("input[name=FlowApprover][value=DeanFlow]").prop('checked', true);
        if(StatusID != 0 && StatusID != 1)
            $("#devCMAdmin").hide();
    }

    $('input[name="DeanNote"],input[name="ShortlistDeanNote"],input[name="SelectionlistDeanNote"]').change(function (e) {
        var _size = this.files[0].size;
        var iSize = (_size / 1024);
        iSize = (Math.round(iSize * 100) / 100)
        var fileName = e.target.files[0].name;
        var extension = '.' + fileName.substr((fileName.lastIndexOf('.') + 1)).toLowerCase();
        if(extension == ".pdf")
        {
            if(iSize > 5120){
                $('#alert').html('Note size should be allow below 5MB');
                $('#Validation').modal('toggle');
                $(this).val('');
                return;
            }
        }
        else {
            $('#alert').html('Note should be allowd document type .pdf');
            $('#Validation').modal('toggle');
            $(this).val('');
            return;
        }
    });

    $('#btnSave').click(function (e) {
        e.preventDefault();
        var isValid = $('#formAnnouncement').valid();
        var isvalidPlatform = false;
        $('input[id="AnnouncementPlatForm"]').each(function (idx, val) {
            if($(this).is(':checked'))
                isvalidPlatform = true;
        });
        //if(!isvalidPlatform) {
        //    messageBox('Please select any one of announcement publish', "warning");
        //    return;
        //}
        $($("#divDesignation table tbody tr")).find('input[name $=".ProjectNumber"]').each(function () {
            var value = $(this).val();
            if (value == "") {
                $('#getReason').modal('show');
                isValid = false;
                return;
            }
        });
        if (isValid)
            $('#formAnnouncement').submit();
    });


    $('#isbtnShortlistDeanNote').click(function(e){
        e.preventDefault();
        var isValid = $('#formAnnouncement').valid();

        if(!isValid){
            messageBox('Please fill all required fields', "warning");
            return;
        }
        if (isValid) {
            $('#isShortlist').val(true);
            $('#Button').val($(this).attr('id'));
            $('#formAnnouncement').submit();
        }
    });


    $('#btnContinue').click(function(){
        $('#getReason').modal('toggle');
        var isValid = $('#formAnnouncement').valid();
        if(!isValid){
            messageBox('Please fill all required fields', "warning");
            return;
        }
        $('#formAnnouncement').submit();
    });


    $('#isbtnSelectedlistDeanNote').click(function (e) {
        e.preventDefault();
        $('#isSelectionlist').val(true);
        $('#Button').val($(this).attr('id'));
        var isValid = $('#formAnnouncement').valid();
        $('#tblSelectedCanditate').find('input[name $=".SelectedApplicant"]').each(function () {
            var value = parseInt($(this).val());
            if (value == 0||isNaN(value)) {
                //isValid = false;
            }
        });
        $('#tblSelectedCanditate').find('input[name $=".SelectedApplicantFile"]').each(function () {
            var value =$(this).val();
            var file=$(this)[0].files[0];
            if (value =="") {
                //isValid = false;
            }
        });
        if(!isValid){
            messageBox('Please upload valid excel', "warning");
            return;
        }
        if (isValid)
            $('#formAnnouncement').submit();

    });

    var value = $("input[name='AnnouncementCategory']:checked").val() || @Html.Raw(Json.Encode(Model.AnnouncementCategory));
    if (value != "" && value != null) {
        if (value == "Project wise") {
            $('#divCommonWise').removeClass('col-md-12');
            $('#divCommonWise').addClass('col-md-6');
            $('#divProjectWise,#divProjectWiseShortlist,#divProjectWiseSelectlist').removeAttr('style');
            $(document).find('input[name$=".ProjectNumber"]').each(function () {
                $(this).attr('readonly', 'readonly');
            });
        }
        else {
            $("#ProjectId").val(0);
            $('#divCommonWise').removeClass('col-md-6');
            $('#divCommonWise').addClass('col-md-12');
            $('#divProjectWise,#divProjectWiseShortlist,#divProjectWiseSelectlist').attr('style', 'display:none');
        }
    }

    if ($("#ProjectId").val() != 0) {
        ProjectSummary();
    }

    function ProjectSummary() {
        var projectId = $("#ProjectId").val();
        if (projectId != "" || projectId != 0) {
            $.getJSON("@Url.Action("LoadProjectDetails", "Requirement")", { ProjectId: projectId },
                function (result) {
                    if (result.projectData.ProjectNumber != null) {
                        $("#lblProjectTitle").text(result.projectData.ProjectTitle);
                        $("#lblClietAgency").text(result.projectData.SponsoringAgency);
                        $("#lblProjectType").text(result.projectData.ProjectType);
                        $("#lblPIName").text(result.projectData.PIName);
                        $("#PIName").val(result.projectData.PIName);
                        $("#PIId").val(result.projectData.PIId);
                        $("#lblProjectStartDate").text(result.projectData.ProjectStartDate);
                        $("#lblProjectClosureDate").text(result.projectData.ProjectClosureDate);
                        $("#lblPICode").text(result.projectData.PICode);
                        $("#lblPIEmailID").text(result.projectData.Email);
                        $("#lblPIPhone").text(result.projectData.Phone);
                        $("#lblDepartmentCode").text(result.projectData.PIDepartmentCode);
                        $("#lblDepartmentName").text(result.projectData.PIDepartmentName);
                    }
                    var AnnouncementCategory = $("input[name='AnnouncementCategory']:checked").val() || $('#AnnouncementCategory').val();
                    if (AnnouncementCategory == "Project wise") {
                        $(document).find('input[name$=".ProjectNumber"]').each(function () {
                            $(this).val(result.projectData.ProjectNumber );
                        });
                        $(document).find('input[name$=".ProjectID"]').each(function () {
                            $(this).val(projectId);
                        });
                        if(StatusID > 5)
                        {
                            $('#divCommonWiseShortlist').removeClass('col-md-12');
                            $('#divCommonWiseShortlist').addClass('col-md-6');
                            $('#divProjectWiseShortlist').removeAttr('style');
                            $('#divCommonWiseSelectlist').removeClass('col-md-12');
                            $('#divCommonWiseSelectlist').addClass('col-md-6');
                            $('#divProjectWiseSelectlist').removeAttr('style');
                            $('#divProjectWiseShortlist').append($('#divProjectWise .bl-lg-panel-box').clone().prop({'id':'divProjectWiseShortlist','class':'bl-lg-panel-box pb-null'} ));
                            $('#divProjectWiseSelectlist').append($('#divProjectWiseShortlist').clone().prop({'id':'divProjectWiseSelectedist','class':'bl-lg-panel-box pb-null'} ));
                        }
                    }
                });
        }
    }

    $(document).on('click', '#btnViewSummary', function () {
        var projNo = $('#ProjectId').val() || 0;
        if (projNo > 0) {
            var searchData = { "ProjectId": projNo };
            $.ajax({
                url: "@Url.Action("_ProjectSummary", "CoreAccounts")",
                type: "POST",
                data: searchData,
                contentType: "application/x-www-form-urlencoded",
                success: function (data) {
                    $("#popup").html(data);
                    $("#projectSummaryModal").modal('toggle');
                },
                error: function (err) {
                    console.log("error : " + err);
                }
            });
        }
    });

    var Incr = @count;
    $('#btnAdd').click(function () {
        var ProjectNumber = "";
        var ProjectID = 0;
        if ($('input[name="AnnouncementCategory"]:checked').val() == "Project wise") {
            if ($('#ProjectNumber').val() == "") {
                alert("Please enter project number");
                return;
            }
            else {
                ProjectNumber = $('#ProjectNumber').val();
                ProjectID = parseInt($('#ProjectId').val());
            }
        }
        var cln = $("#divDesignation table tbody tr").eq(0).clone().find("input,textarea").val("").end();
        $(cln).find('.dis-none').removeClass('dis-none');
        $(cln).find("input,textarea").each(function () {
            if ($(this).attr("name") != undefined) {
                $(this).attr("name", $(this).attr("name").replace(/\d+/, Incr));
                if($(this).attr("name").split(".")[1] == "ProjectNumber")
                    $(this).val(ProjectNumber)
                if($(this).attr("name").split(".")[1] == "ProjectID")
                    $(this).val(ProjectID)
            }
            if ($(this).attr("id") != undefined)
                $(this).attr("id", $(this).attr("id").replace(/\d+/, Incr));
        });
        $(cln).find("span[data-valmsg-for]").each(function () {
            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, Incr));
        });
        $(cln).insertBefore($('#divDesignation table').find('.lst-btnAdd'));
        Incr++;
    });

    $(document).on('click', '#divDesignation #btnRemove', function () {
        $(this).parent().parent("tr").remove();
        Incr--;
    });

    applyAutoComplete($('#PIName'), $('#PIId'), '@Url.Action("LoadPIList", "Requirement")');

    $(document).on('keypress', 'input[name$=".ProjectNumber"]', function () {
        var ID = $(this).attr('id');
        var SplitID = ID.split('_');
        applyAutoComplete($('#' + ID), $('#ProjectID_' + SplitID[1]), '@Url.Action("LoadProjectList","CoreAccounts")');
    });

    $(document).on('keypress', 'input[id^="PIName_"]', function () {
        var ID = $(this).attr('id');
        var SplitID = ID.split('_');
        applyAutoComplete($('#' + ID), $('#HdnPIUserID_' + SplitID[1]), '@Url.Action("LoadPIList", "Requirement")','FillCommitee',true);
    });

    $(document).on('keypress', 'input[name$=".DesignationCode"]', function () {
        var ID = $(this).attr('id');
        var SplitID = ID.split('_');
        applyAutoCompleteDesignation($('#' + ID), $('#HdnDesignationID_' + SplitID[1]), '@Url.Action("LoadAnnouncementdesList", "Requirement")','FillDesignation',true);
    });

    function FillDesignation(ID) {
        var ids = ID.id;
        var SplitID = ids.split('_');
        var DesignationID = $('#HdnDesignationID_' + SplitID[1]).val();
        if (DesignationID > 0) {
            $.getJSON("@Url.Action("LoadDesignationDetails", "Requirement")", { DesignationID: DesignationID },
        function (result) {
            if (result.DesignationData.DestinationID > 0) {
                $("#Designation_"+SplitID[1]).val(result.DesignationData.Designation);
                $("#MinSalary_"+SplitID[1]).val(result.DesignationData.MinSalary);
                $("#MaxSalary_"+SplitID[1]).val(result.DesignationData.MaxSalary);
                $("#Qualification_"+SplitID[1]).val(result.DesignationData.Qualification);
            }
        });
        }
    }

    function FillCommitee(ID) {
        var ids = ID.id;
        var SplitID = ids.split('_');
        var userID = $('#HdnPIUserID_' + SplitID[1]).val();
        if (userID >0) {
            $.getJSON("@Url.Action("LoadPIDetails", "Requirement")", { UserID: userID },
            function (result) {
                if (result.projectData.PIDesignation != null) {
                    $("#PIDesignation_"+SplitID[1]).val(result.projectData.PIDesignation);
                    $("#PIDepartment_"+SplitID[1]).val(result.projectData.PIDepartmentName);
                }
            });
        }
    }

    var CommiteeIncr = 1;
    $('#btnAddCommitee').click(function () {
        var cln = $("#CommitteeDetailsDiv table tbody tr").eq(0).clone().find("input").val("").end();
        $(cln).find('.dis-none').removeClass('dis-none');
        $(cln).find("input, select").each(function () {
            $(this).attr("name", $(this).attr("name").replace(/\d+/, CommiteeIncr));
            if ($(this).attr("id"))
                $(this).attr("id", $(this).attr("id").replace(/\d+/, CommiteeIncr));
        });
        $(cln).find("span[data-valmsg-for]").each(function () {
            $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, CommiteeIncr));
        });

        $(cln).insertBefore($('#CommitteeDetailsDiv table').find('.Commitee-btnAdd'));
        CommiteeIncr++;
    });

    $(document).on('click', '#CommitteeDetailsDiv #btnRemove01', function () {
        //$(this).parent().parent("tr").remove();
        //CommiteeIncr--;
        if ($('#CommitteeDetailsDiv tbody tr:not(".Commitee-btnAdd")').length == 1) {
            $('#CommitteeDetailsDiv tbody tr').find("input").val("").end();
        }
        else
        {
            $(this).parent().parent("tr").remove();

            $(document).find('#CommitteeDetailsDiv tbody tr:not(".Commitee-btnAdd")').each(function(idx,ele){
                $(this).find("input, select").each(function () {
                    if ($(this).attr("name"))
                        $(this).attr("name", $(this).attr("name").replace(/\d+/, idx));
                    if ($(this).attr("id"))
                        $(this).attr("id", $(this).attr("id").replace(/\d+/, idx));
                });
                $(this).find("span[data-valmsg-for]").each(function () {
                    $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, idx));
                });
            });

        }
        CommiteeIncr--;
    });

    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $('input[name="AnnouncementCategory"]').on('change', function () {
        var value = $("input[name='AnnouncementCategory']:checked").val();
        if (value == "Project wise") {
            $('#divCommonWise').removeClass('col-md-12');
            $('#divCommonWise').addClass('col-md-6');
            $('#divProjectWise').removeAttr('style');
            $(document).find('input[name$=".ProjectNumber"]').each(function () {
                $(this).attr('readonly', 'readonly');
            });
        }
        else {
            $('#divCommonWise').removeClass('col-md-6').addClass('col-md-12');
            $('#divProjectWise').attr('style', 'display:none');
            $(document).find('input[name$=".ProjectNumber"]').each(function () {
                $(this).removeAttr('readonly');
            });
        }
    });


    /* Tab Sections Start*/
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the crurrent tab
    function showTab(n) {

        if (StatusID <= 5)
            return true;

        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("cust-tab");
        x[n].style.display = "block";

        $(".custom-nav-pills li:eq(" + n + ")").addClass("active");
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").style.display = "none";
        } else {
            document.getElementById("nextBtn").style.display = "inline";
        }
        //... and run a function that will display the correct step indicator:
        //fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("cust-tab");
        // Exit the function if any field in the current tab is invalid:
        //if (n > 0 && !validateForm(n)) return false;
        if (currentTab + n < x.length) {
            // Hide the current tab:
            x[currentTab].style.display = "none";
            $(".custom-nav-pills li:eq(" + currentTab + ")").removeClass("active");
        }
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;

        // Otherwise, display the correct tab:
        showTab(currentTab);
    }


    $('input[type="file"]').on('change', function (e) {
        debugger;
        var files = e.target.files;
        var ID = $(this).attr('id');
        var TypeValue = "";
        if(ID.includes('Total')){
            TypeValue = "TotalApplicats";
        }
        else if(ID.includes('Shortlisted')){
            TypeValue = "Shortlist";
        }
        else if(ID.includes('Selected')){
            TypeValue = "Selectionlist";
        }
        else
            return;
        var SplitID = ID.split('_');
        if (files.length > 0) {
            var fileName = files[0].name;
			var extension = fileName.substr((fileName.lastIndexOf('.') + 1)).toLowerCase();
            if(extension != "xls" && extension != "xlsx")
                return;
			
            var Name = fileName.substring(0, 26);
            if (window.FormData !== undefined) {
                var data = new FormData();
                for (var x = 0; x < files.length; x++) {
                    data.append("file", files[x]);
                }
                data.append("AnnouncementID", $("#AnnouncementID").val());
                data.append("Category", TypeValue);
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadXL", "Requirement")',
                    contentType: false,
                    processData: false,
                    dataType: 'json',
                    data: data,
                    cache: false,
                    success: function (result) {
                        if (result.Error != "") {
                            $('#FailedAlert').html(result.Error);
                            $('#Failed').modal('toggle');
                            return;
                        }
                        else{
                            if(TypeValue == "TotalApplicats"){
                                $('#TotalApplicant_' + SplitID[1]).val(result.Count);
                            }
                            else if(TypeValue == "Shortlist"){
                                $('#ShortlistedApplicant_' + SplitID[1]).val(result.Count);
                            }
                            else if(TypeValue == "Selectionlist"){
                                $('#SelectedApplicant_' + SplitID[1]).val(result.Count);
                            }
                        }
                    },
                    error: function (xhr, status, p3, p4) {
                        var err = "Error " + " " + status + " " + p3 + " " + p4;
                        if (xhr.responseText && xhr.responseText[0] == "{")
                            err = JSON.parse(xhr.responseText).Message;
                        console.log(err);
                    }
                });
            } else {
                alert("This browser doesn't support HTML5 file uploads!");
            }
        }
    });

    var annonceId = @Html.Raw(Json.Encode(Model.AnnouncementID)) || 0;
    var isRepost = @Html.Raw(Json.Encode(isRepost)) || false;

    if(annonceId > 0 && (StatusID == 1 || StatusID == 0)){
        $('#btnAnnouncementPost').addClass('dis-none');
        $('#btnSave').removeClass('dis-none');
        $('#btnDraft').removeClass('dis-none');
    }
    else if(annonceId > 0 && StatusID == 2){
        $('#btnAnnouncementPost').addClass('dis-none');
        $('#btnSave').removeClass('dis-none');
        $('#btnDraft').addClass('dis-none');
    }
    else if(annonceId > 0 && StatusID == 3) {
        $('#btnAnnouncementPost').addClass('dis-none');
        $('#btnSave').addClass('dis-none');
        $('#btnDraft').addClass('dis-none');
    }
    else if(annonceId > 0 && StatusID == 4){
        $('#btnAnnouncementPost').removeClass('dis-none');
        $('#btnSave').addClass('dis-none');
        $('#btnDraft').addClass('dis-none');
    }
    else if(annonceId > 0 && StatusID > 4 && isRepost == true){
        $('#btnAnnouncementPost').removeClass('dis-none');
        $('#btnSave').addClass('dis-none');
        $('#btnDraft').addClass('dis-none');
    }
    else if(annonceId > 0 && StatusID > 4){
        $('#btnAnnouncementPost').addClass('dis-none');
        $('#btnSave').addClass('dis-none');
        $('#btnDraft').addClass('dis-none');
    }
    else if(annonceId > 0 && StatusID > 4){
        $('#btnAnnouncementPost').addClass('dis-none');
        $('#btnSave').removeClass('dis-none');
        $('#btnDraft').addClass('dis-none');
    }
    else
    {
        $('#btnAnnouncementPost').addClass('dis-none');
        $('#btnDraft').removeClass('dis-none');
        $('#btnSave').removeClass('dis-none');
    }

    if(annonceId > 0 && StatusID > 2){
        $('#divDesignation').find('tr').each(function(){
            $(this).find('input[id^=DesignationCode_]').removeClass('required').attr('disabled','disabled');
            $(this).find('input[id^=Designation_]').removeClass('required').attr('disabled','disabled');
            $(this).find('input[id^=Vacancies_]').removeClass('required').attr('disabled','disabled');
            $(this).find('input[id^=Vacancies_]').removeClass('required').attr('disabled','disabled');
            $(this).find('textarea[id^=Qualification_]').removeClass('required').attr('disabled','disabled');
            $(this).find('input[id^=MinSalary_]').removeClass('required').attr('disabled','disabled');
            $(this).find('input[id^=MaxSalary_]').removeClass('required').attr('disabled','disabled');
        });
    }
    else
    {
        $('#divDesignation').find('tr').each(function(){
            $(this).find('input[id^=DesignationCode_]').addClass('required');
            $(this).find('input[id^=Designation_]').addClass('required');
            $(this).find('input[id^=Vacancies_]').addClass('required');
            $(this).find('input[id^=Vacancies_]').addClass('required');
            $(this).find('textarea[id^=Qualification_]').addClass('required');
            $(this).find('input[id^=MinSalary_]').addClass('required');
            $(this).find('input[id^=MaxSalary_]').addClass('required');
        });
    }

    function NoteDisplay(note){
        var InputData = [];
        InputData = {
            AnnouncementId: annonceId,
            Note: note,
        }
        modelData = InputData;
        $.ajax({
            type: "POST",
            url: "@Url.Action("AnnouncementNoteDisplayProcess", "Requirement")",
            data: modelData,
            contentType: "application/x-www-form-urlencoded",
            beforeSend: function () {
                $(".loading-bg").removeClass('dis-none');
            },
            success: function (result) {
                $(".loading-bg").addClass('dis-none');
                $("#note").html(result.output);
                $("#dialog").modal('toggle');
            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
    }

    function AnnouncementWFInit()
    {
        var InputData = [];
        InputData = {
            AnnouncementID: annonceId,
        }
        modelData = InputData;
        $.ajax({
            type: "POST",
            url: "@Url.Action("AnnouncementWFInitiate", "Requirement")",
            data: modelData,
            contentType: "application/x-www-form-urlencoded",
            beforeSend: function () {
                $(".loading-bg").removeClass('dis-none');
            },
            success: function (result) {
                $(".loading-bg").addClass('dis-none');
                if(result)
                {
                    $.confirm({
                        title: 'Success message!',
                        content: 'Announcement sent to dean aproval',
                        type: 'green',
                        buttons: {
                            Ok: function () {
                                var url = '@Url.Action("AnnoncementMaster", "Requirement")';
                                window.location.href = url;
                            },
                        },
                    });
                }
                else
                {
                    $.confirm({
                        title: 'Error message!',
                        content: 'Intiate user has no approval flow or somthing went wrong',
                        type: 'red',
                        buttons: {
                            Ok: function () {
                                var url = '@Url.Action("AnnoncementMaster", "Requirement")';
                                window.location.href = url;
                            },
                        },
                    });
                }
            },
            error: function (err) {
                $(".loading-bg").addClass('dis-none');
                console.log("error : " + err);
            }
        });
    }
</script>

<script src="@Url.Content("~/Content/IOASContent/assets/bootstrap-select/js/bootstrap-select.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>
