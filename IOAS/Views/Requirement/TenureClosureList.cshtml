
@{
    ViewBag.Title = "Tenure closure list";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<div class="row hd-tt-bg">
    <div class="col-md-4">
        <h3>Tenure closure list</h3>
    </div>
</div>
<div class="row mt30">
    <div class="page-wrapper">
        <div class="row">
            <div class="col-md-12">
                <div class="custom-jsgrid-normal">
                    <div id="gridConApp"></div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var alertMsg = '@TempData["alertMsg"]';
    $(document).ready(function () {
        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        else if (alertMsg != '') {
            $('#alert').html(alertMsg);
            $('#Validation').modal('toggle');
        }
    });

    var DateField = function (config) {
        jsGrid.Field.call(this, config);
    };

    DateField.prototype = new jsGrid.Field({
        sorter: function (date1, date2) {
            return new Date(date1) - new Date(date2);
        },

        itemTemplate: function (value) {
            return new Date(value).toDateString();
        },

        filterTemplate: function () {
            var now = new Date();
            this._fromPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() - 1), changeYear: true });
            this._toPicker = $("<input>").datepicker({ defaultDate: now.setFullYear(now.getFullYear() + 1), changeYear: true });
            return $("<div>").append(this._fromPicker).append(this._toPicker);
        },

        insertTemplate: function (value) {
            return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
        },

        editTemplate: function (value) {
            return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
        },

        insertValue: function () {
            return this._insertPicker.datepicker("getDate").toISOString();
        },

        editValue: function () {
            return this._editPicker.datepicker("getDate").toISOString();
        },

        filterValue: function () {
            return {
                from: this._fromPicker.datepicker("getDate"),
                to: this._toPicker.datepicker("getDate")
            };
        }
    });

    jsGrid.fields.date = DateField;
    $("#gridConApp").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 10,
        editing: false,
        filtering: true,
        pageLoading: true,
        autoload: true,
        controller: {

            loadData: function (filter) {
                var searchData = [];
                searchData = {
                    SearchInName: filter.Designation || null,
                    SearchInEmployeeId: filter.EmployeeId || null,
                    SearchPIname: filter.PIName || null,
                    SearchTypeofAppointment: filter.TypeofAppointmentName || null,
                    DepartmentName: filter.DepartmentName || null
                },
                filter.model = searchData;
                var deferred = $.Deferred();
                $.ajax({
                    type: "post",
                    url: "GetTenureClosureList",
                    data: JSON.stringify(filter),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        //db = result;
                        //$("#AdvanceBillPaymentList").jsGrid({ data: db });
                        var da = {
                            data: result.List,
                            itemsCount: result.TotalRecords
                        }
                        deferred.resolve(da);
                    },
                    error: function (err) {
                        console.log("error : " + err);
                    }

                });
                return deferred.promise();
            }

        },

        fields: [
            { name: "SNo", title: "S.No", editing: false, width: 50 },
            { type: "number", name: "ID", title: "ID", visible: false },
            {
                type: "text", name: "EmployeeId", title: "Employee ID", editing: false,
                itemTemplate: function (item, name) {
                    return $("<td>").append(name.EmployeeId + "<span class='gd-msg-hgt'>" + name.CategoryName + "</span>");
                }
            },
            { type: "text", name: "CategoryName", title: "Category", editing: false, visible: false },
            {
                type: "text", name: "Designation", title: "Employee Name & Designation", editing: false, width: 130,
                itemTemplate: function (item, name) {
                    return $("<td>").append("<b>" + name.Name + "</b>" + "<br/>" + "<span>" + name.Designation + "</span>");
                }
            },
            {
                type: "text", name: "PIName", title: "PI Name & Project Number", editing: false, width: 130,
                itemTemplate: function (item, name) {
                    return $("<td>").append("<b>" + name.PIName + "</b>" + "<br/>" + "<span>" + name.ProjectNumber + "</span>");
                }
            },
            //{ type: "date", name: "FromDate", title: "Appointment Date", editing: false },
            { type: "text", name: "DepartmentName", title: "Department Name", editing: false },
            { type: "date", name: "ToDate", title: "Tenure End Date", editing: false },
            {
                type: "text", name: "DueforTenureEnd", title: "Due for Tenure End", editing: false, width: 80,
                cellRenderer: function (item, name) {
                    if (name.stopmailId > 0) {
                        return $("<td>").addClass("bg-red").append("<b>" + name.DueforTenureEnd + "</b>");
                    }
                    else {
                        return $("<td>").append("<b>" + name.DueforTenureEnd + "</b>");
                    }
                }
            },
            { name: "RoleId", title: "Role Id", editing: false, visible: false },
            { name: "EmailRemaindarCount", title: "Email Remaindar Count", visible: false },
             {
                 type: "control", editButton: false, deleteButton: false, width: 80, title: "Action",

                 itemTemplate: function (value, item) {
                     var $result = jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);

                     if (item.EmailRemaindarCount == 0) {
                         if (item.stopmailId > 0) {
                             //statusList = [{ id: "", name: "Action" }, { id: "StartNf", name: "Start Notification" }, { id: "Enhancement", name: "Enhancement" }, { id: "Extension", name: "Extension" }, { id: "Relieving", name: "Relieving" }]
                             statusList = [{ id: "", name: "Action" }, { id: "Enhancement", name: "Enhancement" }, { id: "Extension", name: "Extension" }, { id: "Relieving", name: "Relieving" }]
                         }
                         else {
                             statusList = [{ id: "", name: "Action" }, { id: "StopNf", name: "Stop Notification" }, { id: "EmailNf", name: "Email Notification" }, { id: "Enhancement", name: "Enhancement" }, { id: "Extension", name: "Extension" }, { id: "Relieving", name: "Relieving" }]
                         }
                     }
                     else {
                         if (item.EmailRemaindarCount == 3) {
                             statusList = [{ id: "", name: "Action" }, { id: "Enhancement", name: "Enhancement" }, { id: "Extension", name: "Extension" }, { id: "Relieving", name: "Relieving" }]
                         }
                         else if (item.stopmailId > 0) {
                             //statusList = [{ id: "", name: "Action" }, { id: "StartNf", name: "Start Notification" }, { id: "Enhancement", name: "Enhancement" }, { id: "Extension", name: "Extension" }, { id: "Relieving", name: "Relieving" }]
                             statusList = [{ id: "", name: "Action" }, { id: "Enhancement", name: "Enhancement" }, { id: "Extension", name: "Extension" }, { id: "Relieving", name: "Relieving" }]
                         }
                         else {
                             statusList = [{ id: "", name: "Action" }, { id: "StopNf", name: "Stop Notification" }, { id: "EmailNf", name: "Email Reminder " + item.EmailRemaindarCount }, { id: "Enhancement", name: "Enhancement" }, { id: "Extension", name: "Extension" }, { id: "Relieving", name: "Relieving" }]
                         }
                     }

                     var $customSelect = $("<select>")
                         .attr("class", "form-control").prop("selectedIndex", "")
                     $.each(statusList, function (index, itemData) {
                         $customSelect.append($('<option/>', {

                             value: itemData.id,
                             text: itemData.name
                         }));
                     });
                     $customSelect.change(function (e) {
                         var selVal = $(this).val();
                         if (selVal == "EmailNf") {
                             if (item.EmailRemaindarCount == 3) {
                                 $('#alert').html("Alert - Reminder E-mails already Sent");
                                 $('#Validation').modal('toggle');
                                 return false;
                             }
                             var choice = confirm("Do you want to send a reminder email");
                             if (choice == true) {
                                 $.ajax({
                                     type: "Post",
                                     url: '@Url.Action("SendTermEndMail", "Requirement")',
                                     data: {
                                         Appid: item.ID,
                                         Apptype: item.CategoryName
                                     },
                                     beforeSend: function () {
                                         $(".loading-bg").removeClass('dis-none');
                                     },
                                     success: function (result) {
                                         $(".loading-bg").addClass('dis-none');
                                         if (result == 1) {
                                             $.alert("Reminder mail sent to PI");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                         else if (result == 2) {
                                             $.alert("Reminder 2 sent to PI");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                         else if (result == 3) {
                                             $.alert("Final reminder sent to PI");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                         else if (result == 0) {
                                             $.alert("Something Went to Wrong Please Conatact Administrator");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                     },
                                     error: function (err) {
                                         $(".loading-bg").addClass('dis-none');
                                         console.log("error1 : " + err);
                                     }
                                 });
                             }
                         }
                         else if (selVal == "StopNf" || selVal == "StartNf") {
                             var content = "Do you want to stop the reminder E-mails ?";
                             if (selVal == "StartNf")
                                 content = "Do you want to enable E-mail notification ?";
                             var choice = confirm(content);
                             if (choice == true) {
                                 var senddata = { employeeId: item.EmployeeId };
                                 if (item.stopmailId > 0) {
                                     senddata = { employeeId: item.EmployeeId, stopmailId: item.stopmailId };
                                 }
                                 $.ajax({
                                     type: "POST",
                                     url: '@Url.Action("StopTermEndNotification", "Requirement")',
                                     data: senddata,
                                     beforeSend: function () {
                                         $(".loading-bg").removeClass('dis-none');
                                     },
                                     success: function (result) {
                                         $(".loading-bg").addClass('dis-none');
                                         if (result == 1) {
                                             $.alert("E-mail reminders stopped.");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                         else if (result == 2) {
                                             $.alert("E-mail reminders enabled.");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                         else if (result == 0) {
                                             $.alert("Record not found");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                         else {
                                             $.alert("Something Went to Wrong Please Conatact Administrator");
                                             $("#gridConApp").jsGrid("loadData");
                                         }
                                     },
                                     error: function (err) {
                                         $(".loading-bg").addClass('dis-none');
                                         console.log("error1 : " + err);
                                     }
                                 });
                             }
                         }
                         else if (selVal == "Enhancement") {
                             var url = '@Url.Action("RecruitEnhancement", "Requirement")?appid=' + item.ID + '&apptype=' + item.CategoryName + '&list_f=TC';	
                             window.location.href = url;
                         }
                         else if (selVal == "Extension") {

                             var url = '@Url.Action("RecruitExtension", "Requirement")?appid=' + item.ID + '&apptype=' + item.CategoryName + '&list_f=TC';	
                             window.location.href = url;
                         }
                         else if (selVal == "Relieving") {
                             var url = '@Url.Action("Relieving", "Requirement")?appid=' + item.ID + '&apptype=' + item.CategoryName + '&list_f=TC';	
                             window.location.href = url;
                         }

                         $(this).val("");
                         return false;
                         e.stopPropagation();
                     });
                     return $result.add($customSelect);
                 },
                 _createFilterSwitchButton: function () {
                     return this._createOnOffSwitchButton("filtering", this.searchModeButtonClass, false);
                 }
             }


        ],

    });
    $("#gridConApp").jsGrid("option", "filtering", false);
</script>
