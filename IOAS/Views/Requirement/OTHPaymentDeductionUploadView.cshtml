@model IOAS.Models.OtherPaymentDeductionUploadModel
@{
    ViewBag.Title = "OTHPaymentDeductionUploadView";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<style>
    .br-rd {
        border-color: red;
    }
</style>
<div class="row cts-mn-dts">
    <div class="page-wrapper mt30">

        <div class="col-md-12">
            <div class="row">
                <div class="col-md-12">
                    <div class="bl-lg-panel-box pb-null">
                        <div class="cmn-panel-box">

                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label>Month and year</label>
                                        @Html.DisplayFor(m=>m.MonthandYear)
                                        @Html.HiddenFor(m=>m.UploadId)
                                        @Html.HiddenFor(m => m.OTHUploadMasterId)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label>From Date</label>
                                        @Html.DisplayFor(m=>m.FormStrDate)
                                        @Html.HiddenFor(m=>m.FromDate)
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                        <label>To Date</label>
                                        @Html.DisplayFor(m => m.ToStrDate)
                                        @Html.HiddenFor(m => m.ToDate)
                                    </div>
                                </div>
                            </div>

                            <div class="row" id="">
                                <div class="col-md-12 pd-null">
                                    <div class="gray-bg br-rd">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <div class="row m-b-sm">
                                                    <div class="col-md-6">
                                                        <h3 class="mt-xs">Validation Details</h3>
                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    @*<div class="col-md-6">
                                                            <label>Upload </label>
                                                            <input id="ValidateOthFile" name="template" type="file">
                                                        </div>*@
                                                    <div class="col-md-6">
                                                        <a href="javascript:void(0)" id="btnExport">Export to excel</a>
                                                    </div>
                                                </div>

                                                <div class="col-md-12 mt-lg" id="gridValidOTHUploadData">

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            @if (!Model.IsViewMode && Model.Status != "Sent for approval")
                            {
                                <div class="row">
                                    <div class="col-md-12 alert alert-danger br-rd">
                                        <h4><b>Note :</b></h4>
                                        <p>
                                            This action will hit the project balance. This process can't be reversed, Do you wish to continue ?
                                        </p>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12 mb-lg text-center">
        <input type="button" onclick="window.location.href='@Url.Action("OTHPaymentDeductionUploadList", "Requirement" )';" class="btn btn-default" value="Close" id="btnclose" />
    </div>
</div>
<input type="hidden" id="currentRefId" value="@Model.OTHUploadMasterId" />
<input type="hidden" id="processGuideLineId" value="@ViewBag.processGuideLineId" />
@Html.Partial("_ProcessStatus")
<script>
    $(document).ready(function () {
        var upid= $('#UploadId').val();
        if (upid != "")
        {
            $("#gridValidOTHUploadData").jsGrid("search");
            $("#gridCompleteOTHUploadData").jsGrid("search");
        }
    });
    var roleid = @Model.RoleId;
    var requestRunning = false;

    $("#gridValidOTHUploadData").jsGrid({
        paging: true,
        pageIndex: 1,
        pageSize: 5,
        editing: false,
        pageLoading: true,

        controller: {
            loadData: function (filter) {
                var deferred = $.Deferred();
                var uploadId = $('#UploadId').val();
                filter.uploadId = uploadId;
                $.ajax({
                    type: "get",
                    url: 'GetValidateOTHList',
                    data: filter,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (datas) {
                        var da = {
                            data: datas.Data,
                            itemsCount: datas.TotalRecords
                        }
                        deferred.resolve(da);
                    }
                });
                return deferred.promise();

            }

        },
        fields: [
            { name: "OTHPaymentDeductionUploadDetail", title: "S.No", editing: false, width: 60 },
            { name: "EmployeeNumber", title: "Employee Number", editing: false },
            { name: "OtherType", title: "Payment / Deduction", editing: false },
            { name: "HeadName", title: "Head Name", editing: false },
            { name: "ProjectNumber", title: "Project Number", editing: false },
            { name: "Amount", title: "Amount", editing: false },
            { name: "ValidationMessage", title: "Validation", editing: false },


        ],
    });


    //$("#gridCompleteOTHUploadData").jsGrid({
    //    paging: true,
    //    pageIndex: 1,
    //    pageSize: 5,
    //    editing: false,
    //    filtering: true,
    //    pageLoading: true,

    //    controller: {
    //        loadData: function (filter) {
    //            var deferred = $.Deferred();
    //            var uploadId = $('#UploadId').val();
    //            filter.uploadId = uploadId;
    //            $.ajax({
    //                type: "get",
    //                url: 'GetValidateCompleteOTHList',
    //                data: filter,
    //                contentType: "application/json; charset=utf-8",
    //                dataType: "json",
    //                success: function (datas) {
    //                    var da = {
    //                        data: datas.Data,
    //                        itemsCount: datas.TotalRecords
    //                    }
    //                    if (datas.TotalRecords == 0) {
    //                        //$('#btnOthPayment').addClass('dis-none');
    //                        //$('#btnOTHVerifyAll').addClass('dis-none');
    //                        $("#isnotValideList").removeClass('dis-none');
    //                    }
    //                    else
    //                    {
    //                        $("#isValideList").removeClass('dis-none');
    //                        //if(roleid == 102 || roleid == 107)
    //                        //{
    //                        //    //$('#btnOthPayment').removeClass('dis-none');
    //                        //    //$('#btnOTHVerifyAll').addClass('dis-none');
    //                        //}
    //                        //else if(roleid == 111)
    //                        //{
    //                        //    //$('#btnOthPayment').addClass('dis-none');
    //                        //    //$('#btnOTHVerifyAll').removeClass('dis-none');
    //                        //}
    //                        $("#isnotValideList").addClass('dis-none');
    //                    }
    //                    deferred.resolve(da);
    //                }
    //            });
    //            return deferred.promise();

    //        }

    //    },
    //    fields: [
    //        { name: "OTHPaymentDeductionUploadDetail", title: "S.No", editing: false, width: 60 },
    //        { name: "EmployeeNumber", title: "Employee Number", editing: false },
    //        { name: "OtherType", title: "Payment / Deduction", editing: false },
    //        { name: "HeadName", title: "Head Name", editing: false },
    //        { name: "ProjectNumber", title: "Project Number", editing: false },
    //        { name: "Amount", title: "Amount", editing: false },
    //        { name: "ValidationMessage", title: "Validation", editing: false },


    //    ],
    //});
    //$("#gridCompleteOTHUploadData").jsGrid("option", "filtering", false);

    @*$('#btnOTHVerifyAll').click(function () {
        if (requestRunning) {
            return;
        }
        var PaymentMonthYear = $('#MonthandYear').val();
        var uploadId = $('#UploadId').val();
        var fromdate = $('#FromDate').val() || null;
        var Todate = $('#ToDate').val() || null;
        if (PaymentMonthYear == '') {
            $.alert('Month Year field is required.')
            return false;
        }
        if (uploadId == '') {
            $.alert('Please validate upload file first.')
            return false;
        }
        if (fromdate == null) {
            alertBox('Validation', 'From Date field is required.')
            return false;
        }
        if (Todate == null) {
            alertBox('Validation', 'To Date field is required.')
            return false;
        }

        $.confirm({
            title: 'Confirmation',
            content: "This action will hit the project balance. This process can't be reversed, Do you wish to continue?",
            icon: 'fa fa-question-circle',
            animation: 'scale',
            closeAnimation: 'scale',
            opacity: 0.5,
            buttons: {
                confirm: {
                    text: 'Yes',
                    btnClass: 'btn-blue',
                    action: function () {
                        $('.loading-bg').removeClass('dis-none');
                        requestRunning = true;
                        var model = {"uploadId": uploadId };
                        $.ajax({
                            type: "GET",
                            url: '@Url.Action("AddOtherPaymentValidatedEmployees", "Requirement")',
                            data: model,
                            contentType: "application/x-www-form-urlencoded",
                            dataType: "json",
                            success: function (result) {
                                if (result.status == "Success") {
                                    $.alert("Process has been initiated successfully.");
                                    $('#btnOTHVerifyAll').addClass('dis-none');
                                } else {
                                    messageBox(result.status, "error");
                                }
                                $('.loading-bg').addClass('dis-none');
                                requestRunning = false;
                            },
                            error: function (err) {
                                requestRunning = false;
                                $('.loading-bg').addClass('dis-none');
                                console.log("error : " + err);
                            }
                        });
                    }
                },
                cancel: {
                    text: 'No',
                    action: function () {
                    }
                }
            }
        });
    });*@



    $('#btnExport').click(function(){
        var uploadid=$("#UploadId").val();
        if(uploadid!="")
        {
            var url = '@Url.Action("ExportOTHUploadData", "Requirement")?uploadId=' + uploadid;
            window.open(url, "_blank");
        }
    });

    @*$('#btnnotvalidExport').click(function(){
        var uploadid=$("#UploadId").val();
        if(uploadid!="")
        {
            var url = '@Url.Action("ExportothnotValidData", "Requirement")?uploadId=' + uploadid;
            window.open(url, "_blank");
        }
    });
    $('#btnvalidExport').click(function(){
        var uploadid=$("#UploadId").val();
        if(uploadid!="")
        {
            var url = '@Url.Action("ExportothValidData", "Requirement")?uploadId=' + uploadid;
            window.open(url, "_blank");
        }
    });*@
</script>
