@model IOAS.Models.ConsultantMaster
@{
    ViewBag.Title = "ConsultantMaster";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";


}
@Styles.Render("~/bundles/JSGridCss")
@Scripts.Render("~/bundles/JSGrid")
<script src="@Url.Content("~/Scripts/Master/ConsultantMaster.js")"></script>



<div class="row hd-tt-bg" id="addnewpage">
    <div class="col-md-4">
        <h3>Consultant Master</h3>
    </div>
    <div class="col-md-8 flt-nav-links">
        <a href="#" id="btnaddnew"> <i class="ion-plus"></i>Add New</a>
        <a href="Javascript:void(0)" id="btnFilterUser" class="pull-right"> <i class="ion-android-funnel"></i>Filters</a>
    </div>

</div>
<div id="popFilterUser" class="filter-popup">
    <div class="">
        <div class="filter-content">
            <div class="white-bg">
                <div class="form-group custom-form-group">
                    <h3>Filter by</h3>
                </div>
                <div class="form-group custom-form-group">
                    <label>Consultant Name</label><br>
                    @Html.TextBoxFor(M => M.Consultant_Name, new { @class = "form-control", @id = "txtsrcnsltname" })@*txtsrchname*@
                </div>
                <div class="form-group custom-form-group">
                    <label>Category</label><br>
                    @Html.DropDownListFor(M => M.Consultant_Category, new SelectList(ViewBag.consultantCategory, "id", "name"), "Select Category", new { @id = "ddlSearchcnsltCode", @class = "form-control selectpicker" })
                </div>
                <div class="form-group custom-form-group">
                    <label>Country</label><br>
                    @Html.DropDownListFor(M => M.Consultant_Nationality, new SelectList(ViewBag.consultantNationality, "id", "name"), "Select Nationality", new { @id = "ddlSeaCountry", @class = "form-control selectpicker" })
                </div>
                <div class="form-group custom-form-group mt30 text-center">
                    <button id="btnSrchUser" type="button" class="btn btn-primary mr10">Search</button>
                    <button id="btnResetSrchUser" type="button" class="btn btn-default">Reset</button>
                </div>
            </div>
        </div>

    </div>

    <a href="javascript:void(0)" name="btnCloseUser" class="close-btn"><i class="ion-android-cancel"></i></a>

</div>
@using (Html.BeginForm("ConsultantMaster", "Requirement", FormMethod.Post, new { @class = "", role = "form", @id = "formCP", enctype = "multipart/form-data" }))
{
    <div class="col-md-12">
        <div id="vendorMaster" style="display:none">
            <div class="page-wrapper" id="vendorhead1" style="display:none">

                <div class="white-bg">
                    <div class="row">
                        <div class="col-md-12">
                            <h3 class="spl-title">Consultant Master</h3>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group custom-form-group">
                                <label class="required">Nationality</label>
                                @Html.DropDownListFor(M => M.Consultant_Nationality, new SelectList(ViewBag.consultantNationality, "id", "name"), "Select Nationality", new { @id = "ddlcnsltctry", @class = "form-control", @onchange = "Dayanamiccountryvalidation()", @required = "required" })
                                <div class="txt-error txt-red"> @Html.ValidationMessageFor(M => M.Consultant_Nationality)</div>
                                @Html.HiddenFor(M => M.Consultant_Nationality, new { @id = "txtNationality" })
                                @Html.HiddenFor(M => M.Consultant_MasterId, new { @id = "txtVendorId" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group custom-form-group">
                                <label class="required">Category</label>
                                @Html.DropDownListFor(M => M.Consultant_Category, new SelectList(ViewBag.consultantCategory, "id", "name"), "Select Category", new { @id = "ddlcnsltCategory", @class = "form-control", @onchange = "Dayanamiccountryvalidation()", @required = "required" })
                                <div class="txt-error txt-red"> @Html.ValidationMessageFor(M => M.Consultant_Category)</div>
                                @Html.HiddenFor(M => M.Consultant_Category, new { @id = "txtCategory" })
                            </div>
                        </div>
                        <div class="col-md-2" id="divempId" style="display:none">

                            <div class="form-group custom-form-group">
                                <label>Consultant EmpId: </label>
                                @*<h4 id="consultantempid">@Html.DisplayFor(m => m.Consultant_EmpId)</h4>*@
                                @Html.TextBoxFor(m => m.Consultant_EmpId, new { @id = "consultantempid", @class = "form-control", @readonly = "readonly" })
                            </div>

                        </div>


                    </div>
                </div>
            </div>

            <div class="row cust-tab">
                <div class="page-wrapper" id="vendorhead2" style="display:none">
                    <div class="white-bg">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="spl-title">Personal Details</h3>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Name</label>
                                            @Html.DropDownListFor(m => m.Consultant_Salutation, new SelectList(ViewBag.Professional, "id", "name"), "Select", new { @id = "ddlIcnsltSalutation", @required = "required" })
                                            <div>@Html.ValidationMessageFor(m => m.Consultant_Salutation)</div>
                                            @Html.TextBoxFor(M => M.Consultant_Name, new { @class = "form-control", @id = "txtIConsultantName", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_Name)</div>
                                            @Html.HiddenFor(M => M.Consultant_Name, new { @id = "hiddVendorName" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            @Html.HiddenFor(m => m.Consultant_MasterId)
                                            <label>Gender</label><br>
                                            @*@Html.DropDownListFor(m => m.Consultant_Gender, new SelectList(ViewBag.Gender, "id", "name"), "Select", new { @id = "ddlIcnsltGender", @class = "form-control", @required = "required" })*@
                                            @Html.DropDownListFor(m => m.Consultant_Gender, new SelectList(ViewBag.Gender, "id", "name"), "Select", new { @class = "form-control" })
                                            <label id="lblSex"></label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Date of Birth</label>
                                            @Html.EditorFor(m => m.Consultant_DOB, new { @id = "txIcnslttDOB", @class = "form-control", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Consultant_DOB)</div>
                                            @*@Html.Hidden("txIcnslttDOB")*@
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Contact Number</label>
                                            @Html.TextBoxFor(m => m.Consultant_ContactNumber, new { @class = "form-control", @id = "txtIPhoneNumber", @required = "required", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Consultant_ContactNumber)</div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Email</label>
                                            @Html.TextBoxFor(M => M.Consultant_Email, new { @class = "form-control", @id = "txtIEmail", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_Email)</div>
                                            @Html.HiddenFor(M => M.Consultant_Email, new { @id = "hiddEmailAddress" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Aadhaar Number</label>
                                            @Html.TextBoxFor(m => m.Consultant_AadhaarNo, new { @class = "form-control", @id = "txtIAadhaarno", @onblur = "CheckEmployeeadhar()", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            <div>@Html.ValidationMessageFor(m => m.Consultant_AadhaarNo)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">PAN No </label>
                                            @Html.TextBoxFor(m => m.Consultant_PanNo, new { @class = "form-control", @id = "txtIPANNumber", @required = "required", @onblur = "CheckIUpdateEmployeepanno()", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_PanNo)</div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Address</label>
                                            @Html.TextBoxFor(M => M.Consultant_Address, new { @class = "form-control", @id = "txtIAddress", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_Address)</div>
                                            @Html.HiddenFor(M => M.Consultant_Address, new { @id = "hiddAddress" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>@Html.CheckBoxFor(m => m.isSameAsAddress) same as above <br>Service Address</label> <br>
                                            @*@Html.HiddenFor(M => M.isSameAsAddress, new { @id = "hiddSameAddress" })*@
                                            @Html.TextAreaFor(m => m.Consultant_ServiceAddress, new { @class = "form-control", @id = "txtIServiceAddress" })
                                        </div>
                                    </div>

                                </div>

                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">State</label>
                                            @Html.DropDownListFor(M => M.Consultant_StateId, new SelectList(ViewBag.state, "id", "name"), "Select state", new { @class = "form-control", @id = "ddlIstate", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_StateId)</div>
                                        </div>
                                    </div>

                                    <div class="col-md-4">

                                        <div class="form-group custom-form-group">
                                            <label>State Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_StateCode, new { @class = "form-control", @id = "txtIStateCode", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">City</label>
                                            @Html.TextBoxFor(M => M.Consultant_City, new { @class = "form-control", @id = "txtICity", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_City)</div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Pin Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_Pincode, new { @class = "form-control", @id = "txtIPinCode", @required = "required", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_Pincode)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Consultant Qualification</label>
                                            @Html.TextBoxFor(M => M.Consultant_Qualification, new { @class = "form-control", @id = "txtIconsltquali" })
                                            @*<div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_Qualification)</div>*@

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Consultant Experience</label>
                                            @Html.TextBoxFor(M => M.Consultant_Experience, new { @class = "form-control", @id = "txtIconsltexp" })
                                            @*<div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_Experience)</div>*@

                                        </div>
                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>IsGST</label>
                                            @*@Html.CheckBoxFor(m => m.IsGST)*@
                                            @Html.CheckBoxFor(m => m.IsGST, new { @disabled = "disabled" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>GST No </label>
                                            @Html.TextBoxFor(m => m.GSTIN, new { @class = "form-control", @id = "txtIGSTNumber", @readonly = "readonly", @onblur = "CheckIGSTno()", @autoComplete = "off" })
                                            <div style="color:red" id="igGSTNumber">@Html.ValidationMessageFor(M => M.GSTIN)</div>
                                            <label style="color:red" id="lblGSTNumber"></label>
                                            @Html.HiddenFor(M => M.GSTIN, new { @id = "hiddGSTIN" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Photo</label> <br>

                                            @if (Model != null)
                                            {
                                                if (Model.Consultant_MasterId != null && !string.IsNullOrEmpty(Model.PersonImagePath))
                                                {
                                                    <img id="displayImg" src="@Url.Action("ShowDocument", "Account", new { file = Model.PersonImagePath, filepath = "RCTEmployeeImages" })" width="30px" height="30px"><br>
                                                    <input class="form-control" type="file" name="PersonImage" onchange="readURL(this);">
                                                }

                                            }
                                            else
                                            {
                                                <img id="displayImg" src="~/Content/IOASContent/img/Image_placeholder.png" width="30px" height="30px"><br>
                                                <input class="form-control" type="file" name="PersonImage" onchange="readURL(this);">
                                            }

                                            @*<img id="displayImg" src="~/Content/IOASContent/img/Image_placeholder.png" width="30px" height="30px"><br>
                                                <input class="form-control" type="file" name="PersonImage" onchange="readURL(this);">*@
                                            @Html.HiddenFor(m => m.PersonImagePath)
                                            <em style="color:red;font-size:12px;">upload [.jpeg,.png,.jpg] and file size below 1MB</em>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="page-wrapper" id="indfirmdiv" style="display:none">
                    <div class="white-bg">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="spl-title">Personal Details</h3>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Name</label>
                                            @Html.DropDownListFor(m => m.Consultant_IFSalutation, new SelectList(ViewBag.ProfessionalFirm, "id", "name"), "Select", new { @id = "ddlIFcnsltSalutation", @required = "required" })
                                            <div>@Html.ValidationMessageFor(m => m.Consultant_IFSalutation)</div>
                                            @Html.TextBoxFor(M => M.Consultant_IFName, new { @class = "form-control", @id = "txtIFConsultantName", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFName)</div>
                                            @Html.HiddenFor(M => M.Consultant_IFName, new { @id = "hiddVendorName" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Contact Number</label>
                                            @Html.TextBoxFor(M => M.Consultant_IFContactNumber, new { @class = "form-control", @id = "txtIFPhoneNumber", @required = "required", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFContactNumber)</div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Email</label>
                                            @Html.TextBoxFor(M => M.Consultant_IFEmail, new { @class = "form-control", @id = "txtIFEmail", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFEmail)</div>
                                            @*@Html.HiddenFor(M => M.Email, new { @id = "hiddEmailAddress" })*@

                                        </div>
                                    </div>

                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">PAN No</label>
                                            @Html.TextBoxFor(m => m.Consultant_IFPanNo, new { @class = "form-control", @id = "txtIFPANNumber", @onblur = "CheckIFUpdateEmployeepanno()", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFPanNo)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Address</label>
                                            @Html.TextBoxFor(M => M.Consultant_IFAddress, new { @class = "form-control", @id = "txtIFAddress", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFAddress)</div>
                                            @Html.HiddenFor(M => M.Consultant_IFAddress, new { @id = "hiddIFAddress" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>@Html.CheckBoxFor(m => m.isSameAsIFAddress) same as above <br>Service Address</label> <br>@*, new { @id = "chkisSameAsIFAddress" }*@
                                            @Html.TextAreaFor(m => m.Consultant_IFServiceAddress, new { @class = "form-control", @id = "txtIFServiceAddress" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">



                                    <div class="col-md-4">

                                        <div class="form-group custom-form-group">
                                            <label class="required">State</label>
                                            @Html.DropDownListFor(M => M.Consultant_IFStateId, new SelectList(ViewBag.state, "id", "name"), "Select state", new { @class = "form-control", @id = "ddlIFstate", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFStateId)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>State Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_IFStateCode, new { @class = "form-control", @id = "txtIFStateCode", @readonly = "readonly" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">City</label>
                                            @Html.TextBoxFor(M => M.Consultant_IFCity, new { @class = "form-control", @id = "txtIFCity", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFCity)</div>
                                        </div>
                                    </div>

                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            @*<label>IsGST</label>*@
                                            <label>@Html.CheckBoxFor(m => m.IsGSTIF, new { @disabled = "disabled" }) IsGST	</label> <br>@*, new { @id = "chkIFIsGST" }*@
                                            @*@Html.CheckBoxFor(m => m.IsGSTIF, new { @id = "chkIFGST" })*@
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>GST No </label>
                                            @Html.TextBoxFor(m => m.GSTINIF, new { @class = "form-control", @id = "txtIFGSTNumber", @readonly = "readonly", @onblur = "CheckIFGSTno()", @autoComplete = "off" })
                                            <div style="color:red" id="ifgGSTNumber">@Html.ValidationMessageFor(M => M.GSTINIF)</div>
                                            <label style="color:red" id="lblIFGSTNumber"></label>
                                            @Html.HiddenFor(M => M.GSTINIF, new { @id = "hiddGSTINIF" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Pin Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_IFPincode, new { @class = "form-control", @id = "txtIFPinCode", @required = "required", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFPincode)</div>
                                        </div>
                                    </div>

                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="page-wrapper" id="frginddiv" style="display:none">
                    <div class="white-bg">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="spl-title">Personal Details</h3>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Name</label>
                                            @Html.DropDownListFor(m => m.Consultant_FISalutation, new SelectList(ViewBag.Professional, "id", "name"), "Select", new { @id = "ddlFIcnsltSalutation", @required = "required" })
                                            <div>@Html.ValidationMessageFor(m => m.Consultant_FISalutation)</div>
                                            @Html.TextBoxFor(M => M.Consultant_FIName, new { @class = "form-control", @id = "txtFIConsultantName", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FIName)</div>
                                            @Html.HiddenFor(M => M.Consultant_FIName, new { @id = "hiddVendorName" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Gender</label><br>
                                            @Html.DropDownListFor(m => m.Consultant_FIGender, new SelectList(ViewBag.Gender, "id", "name"), "Select", new { @class = "form-control" })
                                            @*@Html.DropDownListFor(m => m.Consultant_FIGender, new SelectList(ViewBag.Gender, "id", "name"), "Select", new { @id = "ddlFIcnsltGender", @class = "form-control", @required = "required" })*@
                                            <label id="lblFISex"></label>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Date of Birth</label>
                                            @Html.EditorFor(m => m.Consultant_fi_DOB, new { @id = "txFIcnslttDOB", @class = "form-control", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(m => m.Consultant_fi_DOB)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>TIN Number</label>
                                            @Html.TextBoxFor(M => M.Consultant_FITIN, new { @class = "form-control", @id = "txtFITin", @onblur = "CheckEmployeeFITINNo()" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Contact Number</label>
                                            @Html.TextBoxFor(M => M.Consultant_FIContactNumber, new { @class = "form-control", @id = "txtFIPhoneNumber", @required = "required", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FIContactNumber)</div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Email</label>
                                            @Html.TextBoxFor(M => M.Consultant_FIEmail, new { @class = "form-control", @id = "txtFIEmail", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FIEmail)</div>
                                            @*@Html.HiddenFor(M => M.Email, new { @id = "hiddEmailAddress" })*@

                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Address</label>
                                            @Html.TextBoxFor(M => M.Consultant_FIAddress, new { @class = "form-control", @id = "txtFIAddress", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FIAddress)</div>
                                            @Html.HiddenFor(M => M.Consultant_FIAddress, new { @id = "hiddFIAddress" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Consultant Qualification</label>
                                            @Html.TextBoxFor(M => M.Consultant_FIQualification, new { @class = "form-control", @id = "txtFIconsltquali" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Consultant Experience</label>
                                            @Html.TextBoxFor(M => M.Consultant_FIExperience, new { @class = "form-control", @id = "txtFIconsltexp" })

                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Country</label>
                                            @Html.DropDownListFor(M => M.Consultant_FICountry, new SelectList(ViewBag.country, "CountryID", "CountryName"), "Select country", new { @id = "ddlFIcountry", @class = "form-control", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FICountry)</div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>City</label>
                                            @Html.TextBoxFor(M => M.Consultant_FICity, new { @class = "form-control", @id = "txtFICity" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FICity)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Pin Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_FIPincode, new { @class = "form-control", @id = "txtFIPinCode", @maxlength = "24", @autoComplete = "off" })
                                            @*<div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FIPincode)</div>*@
                                        </div>
                                    </div>

                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>@Html.CheckBoxFor(m => m.isSameAsFIAddress) same as above	   <br>Service Address</label> <br>@*, new { @id = "chkisSameAsFIAddress" }*@
                                            @Html.TextAreaFor(m => m.Consultant_FIServiceAddress, new { @class = "form-control", @id = "txtFIServiceAddress" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Photo</label> <br>
                                            @if (Model != null)
                                            {
                                                if (Model.Consultant_MasterId != null && !string.IsNullOrEmpty(Model.PersonImageFIPath))
                                                {
                                                    <img id="displayFIImg" src="@Url.Action("ShowDocument", "Account", new { file = Model.PersonImageFIPath, filepath = "RCTEmployeeImages" })" width="30px" height="30px"><br>
                                                    <input class="form-control" type="file" name="PersonFIImage" onchange="readFIURL(this);">
                                                }
                                            }
                                            else
                                            {
                                                <img id="displayFIImg" src="~/Content/IOASContent/img/Image_placeholder.png" width="30px" height="30px"><br>
                                                <input class="form-control" type="file" name="PersonFIImage" onchange="readFIURL(this);">
                                            }
                                            @*<img id="displayFIImg" src="~/Content/IOASContent/img/Image_placeholder.png" width="30px" height="30px"><br>
                                                <input class="form-control" type="file" name="PersonFIImage" onchange="readFIURL(this);">*@
                                            @Html.HiddenFor(m => m.PersonImageFIPath)
                                            <em style="color:red;font-size:12px;">upload [.jpeg,.png,.jpg] and file size below 1MB</em>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="page-wrapper" id="frgfirmdiv" style="display:none">
                    <div class="white-bg">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="spl-title">Personal Details</h3>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Name</label>
                                            @Html.DropDownListFor(m => m.Consultant_FFSalutation, new SelectList(ViewBag.ProfessionalFirm, "id", "name"), "Select", new { @id = "ddlFFcnsltSalutation", @required = "required" })
                                            <div>@Html.ValidationMessageFor(m => m.Consultant_FFSalutation)</div>
                                            @Html.TextBoxFor(M => M.Consultant_FFName, new { @class = "form-control", @id = "txtFFConsultantName", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FFName)</div>
                                            @Html.HiddenFor(M => M.Consultant_FFName, new { @id = "hiddVendorName" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Contact Number</label>
                                            @Html.TextBoxFor(M => M.Consultant_FFContactNumber, new { @class = "form-control", @id = "txtFFPhoneNumber", @required = "required", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FFContactNumber)</div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>TIN Number</label>
                                            @Html.TextBoxFor(M => M.Consultant_FFTIN, new { @class = "form-control", @id = "txtFFTin", @onblur = "CheckEmployeeFFTINNo()" })


                                        </div>
                                    </div>

                                </div>
                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Email</label>
                                            @Html.TextBoxFor(M => M.Consultant_FFEmail, new { @class = "form-control", @id = "txtFFEmail", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FFEmail)</div>
                                            @*@Html.HiddenFor(M => M.Email, new { @id = "hiddEmailAddress" })*@

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Address</label>
                                            @Html.TextBoxFor(M => M.Consultant_FFAddress, new { @class = "form-control", @id = "txtFFAddress", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FFAddress)</div>
                                            @Html.HiddenFor(M => M.Consultant_FFAddress, new { @id = "hiddFFAddress" })
                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">Country</label>
                                            @Html.DropDownListFor(M => M.Consultant_FFCountry, new SelectList(ViewBag.country, "CountryID", "CountryName"), "Select country", new { @id = "ddlFFcountry", @class = "form-control", @required = "required" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FFCountry)</div>

                                        </div>

                                    </div>

                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label class="required">City</label>
                                            @Html.TextBoxFor(M => M.Consultant_FFCity, new { @class = "form-control", @id = "txtFFCity", @required = "required", @autoComplete = "off" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FFCity)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Pin Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_FFPincode, new { @class = "form-control", @id = "txtFFPinCode", @maxlength = "24", @onkeypress = "return isNumberKey(event)", @autoComplete = "off" })
                                            @*<div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_FFPincode)</div>*@
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>@Html.CheckBoxFor(m => m.isSameAsFFAddress) same as above	   <br>Service Address</label> <br>
                                            @Html.TextAreaFor(m => m.Consultant_FFServiceAddress, new { @class = "form-control", @id = "txtFFServiceAddress" })

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="page-wrapper" id="vendorhead4" style="display:none">
                    <div class="white-bg">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="spl-title">Bank Details</h3>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Account Holder's Name</label>
                                            @Html.TextBoxFor(M => M.Consultant_AccountHolderName, new { @class = "form-control", @id = "txtAcctHolderName" })
                                            <p class="m-b-sm hint">Name as per the bank account</p>
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_AccountHolderName)</div>
                                        </div>
                                    </div>
                                    <div id="hiddenInBankname" style="display:none">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Bank Name</label>
                                                @Html.TextBoxFor(M => M.Consultant_BankName, new { @class = "form-control", @required = "required", @onpaste = "return false", @onblur = "changeBankName()" })
                                                @Html.Hidden("BankId")
                                                <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_BankName)</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="hiddenFrBankname" style="display:none">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label>Bank Name</label>
                                                @Html.TextBoxFor(M => M.Consultant_FBankName, new { @class = "form-control", @onpaste = "return false", @onblur = "changeFrBankName()" })
                                                @Html.Hidden("BankId")

                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Branch</label>
                                            @Html.TextBoxFor(M => M.Consultant_Branch, new { @class = "form-control", @id = "txtBranch" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_Branch)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div id="hiddenInAccno" style="display:none">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Account Number</label>
                                                @Html.TextBoxFor(M => M.Consultant_AccountNumber, new { @class = "form-control", @id = "txtAcctNum", @required = "required", @onkeypress = "return isOnlyNumericKey(event)" })
                                                <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_AccountNumber)</div>
                                            </div>
                                        </div>
                                    </div>
                                    <div id="hiddenFrAccno" style="display:none">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label>Account Number</label>
                                                @Html.TextBoxFor(M => M.Consultant_FrAccountNumber, new { @class = "form-control", @id = "txtFrAcctNum" })

                                            </div>
                                        </div>
                                    </div>
                                    <div id="ifsccode" style="display:none">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">IFSC</label>
                                                @Html.TextBoxFor(M => M.Consultant_IFSC, new { @class = "form-control", @id = "txtIfscCode", @required = "required" })
                                                <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_IFSC)</div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Bank Address</label>
                                            @Html.TextBoxFor(M => M.Consultant_BankAddress, new { @class = "form-control", @id = "txtBankAddress" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_BankAddress)</div>
                                        </div>
                                    </div>
                                    <div id="hiddenBankcountry" style="display:none">
                                        <div class="col-md-4">
                                            <div class="form-group custom-form-group">
                                                <label class="required">Bank Country</label>
                                                @Html.DropDownListFor(M => M.Consultant_BankCountry, new SelectList(ViewBag.bankcountry, "CountryID", "CountryName"), "Select Bank country", new { @id = "ddlBankcountry", @class = "form-control", @required = "required" })
                                                <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_BankCountry)</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row" id="abaDiv" style="display:none">
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>ABA Number</label>
                                            @Html.TextBoxFor(M => M.Consultant_ABANumber, new { @class = "form-control", @id = "txtABANumber" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_ABANumber)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Sort Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_SortCode, new { @class = "form-control", @id = "txtSortCode" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>IBAN</label>
                                            @Html.TextBoxFor(M => M.Consultant_IBAN, new { @class = "form-control", @id = "txtIBAN" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4" id="swiftCode" style="display:none">
                                        <div class="form-group custom-form-group">
                                            <label>SWIFT / BIC code</label>
                                            @Html.TextBoxFor(M => M.Consultant_SWIFTorBICCode, new { @class = "form-control", @id = "txtSwiftBICCode" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Bank Nature</label>
                                            @Html.TextBoxFor(M => M.Consultant_BankNature, new { @class = "form-control", @id = "txtBankNature" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>Bank Email</label>
                                            @Html.TextBoxFor(M => M.Consultant_BankEmailId, new { @class = "form-control", @id = "txtBankEmail" })
                                            <div class="txt-error txt-red">@Html.ValidationMessageFor(M => M.Consultant_BankEmailId)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label>MICR Code</label>
                                            @Html.TextBoxFor(M => M.Consultant_MICRCode, new { @class = "form-control", @id = "txtMICRCode" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="page-wrapper" id="vendorhead5" style="display:none">
                    <div class="white-bg">
                        <h3 class="spl-title">Other Documents Details</h3>
                        <div class="row">
                            <div id="DocdivVendorContent">
                                <div class="col-md-11 mt10">

                                    <div class="col-md-3">
                                        <div class="form-group custom-form-group">
                                            <label> Attachment Name </label>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group custom-form-group">
                                            <label> Attachment (.pdf, .doc, .docx)</label>
                                        </div>
                                    </div>
                                    <div class="col-md-1">

                                    </div>
                                </div>
                                <div id="DocprimaryVendorDiv">
                                    <div class="col-md-11">
                                        @*<div class="col-md-4">
                                                                                    <div class="form-group custom-form-group">
                                                                                        @Html.DropDownList("VendorDocumentType", new SelectList(ViewBag.Vensupdoc, "id", "name"), "Select Document Type",
                                            new { @class = "form-control", @id = "vendordoctype" })
                                                                                        @Html.Hidden("VendorDocumentId")
                                                                                    </div>
                                                                                </div>*@
                                        <div class="col-md-3">
                                            <div class="form-group custom-form-group">
                                                <input class="form-control" name="AttachmentName" id="vendordocname" value="" type="text">
                                                @Html.Hidden("ConsultantDocumentID")
                                            </div>
                                        </div>
                                        <div class="col-md-3" id="browsebtn">
                                            <div class="form-group custom-form-group mt5">
                                                <input type="file" name="ConsultantFile" id="vendordocfile" />&nbsp;&nbsp;&nbsp;
                                                @Html.ValidationMessageFor(m => m.AttachmentPath)
                                            </div>
                                        </div>
                                        <div class="col-md-2 doclink mt6" id="vendordoclink">

                                            <a href="#" class="link2" target="_blank"></a>
                                            @Html.Hidden("vendordocfile", "", new { @class = "HiddenDocPath" })
                                        </div>
                                        <div class="col-md-1">
                                            <input class="btn btn-default dis-none" type="button" value="remove" id="firstremoveButton" />
                                        </div>

                                        <div class="col-md-1 ml40 mt5">
                                            <button class="dis-none btn-sm btn btn-danger" type="button" name="removeButton"><i class="ion-android-close"></i></button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <button type="button" id="btnAddvendorDoc" class="btn-sm"><i class="ion-android-add"></i> </button>
                            </div>

                        </div>
                    </div>
                </div>

            </div>

            <div class="row" id="Divbutton" style="display:none">
                <div class="col-md-12 text-center pd-tb-30">
                    <input type="submit" class="btn btn-primary mr10" value="Save" name="Button" id="btnSave" />
                    <input type="submit" class="btn btn-primary mr10" value="Update" name="Button" id="btnUpdate" style="display:none" />
                    <input type="button" onclick="window.location.href='@Url.Action("ConsultantMaster", "Requirement")';" class="btn btn-default" value="Close" name="Button" id="btnReset" />
                </div>
            </div>
        </div>
        <div class="row mt30" id="gridlist">

            <div class="col-md-12">
                <div class="page-wrapper">
                    <div class="custom-jsgrid-normal">
                        <div id="consultantList"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>


}

<script type="text/javascript">
    var errMsg = '@TempData["errMsg"]';
    var succMsg = '@TempData["succMsg"]';
    var alertMsg = '@TempData["alertMsg"]';
    @*var Consultant_MasterId = @Html.Raw(Json.Encode(Model.Consultant_MasterId)) || 0;*@

    $('#btnaddnew').on('click', function () {
//, #vendorhead4, #Divbutton'
        $('#vendorMaster,#vendorhead1,#vendorhead2').show();
        $('#ddlVondorctry,#txtConsultantName,#txtAddress,#txtEmail,#txtContactPerson,#txtPhoneNumber,#txtMobileNum,#ddlcountry,#ddlstate').prop('disabled', false);
        $('#txtStateCode,#txtRegisteredName,#txtPANNumber,#txtTANNumber,#txtVendorCode').prop('disabled', false);
        $('#gridlist').hide();
        $('#addnewpage').hide();
        $('#ddlcnsltctry,#ddlcnsltCategory').prop('selectedIndex', 0);
        Reset();


    });

    $('select[name="Consultant_Salutation"]').on('change', function () {
        Professional(parseInt($(this).val()))
    });
    $('select[name="Consultant_FISalutation"]').on('change', function () {
        ProfessionalFI(parseInt($(this).val()))
    });

    $(document).on('click', '#firstremoveButton', function () {

        document.getElementsByName('AttachmentName')[0].value = "";
        document.getElementsByName('ConsultantDocumentID')[0].value = "";
        document.getElementsByClassName('link2')[0].text = "";
        document.getElementsByClassName('link2')[0].href = "";
        document.getElementsByName('ConsultantFile')[0].value = "";
        document.getElementsByName('vendordocfile')[0].value = "";

    });

    function Professional(value) {
        $('#Consultant_Gender').removeClass('dis-none');
        $('#lblSex').removeClass('dis-none');
        if (value == 1) {
            $('#Consultant_Gender').val(1)
            $('#lblSex').text('Male');
            $('#Consultant_Gender').addClass('dis-none');
        }
        else if (value == 2) {
            $('#Consultant_Gender').val(2)
            $('#lblSex').text('Female');
            $('#Consultant_Gender').addClass('dis-none');
        }
        else if (value == 3) {
            $('#Consultant_Gender').val(2)
            $('#lblSex').text('Female');
            $('#Consultant_Gender').addClass('dis-none');
        }
        else if (value == 4) {
            $('#Consultant_Gender').val('')
            $('#lblSex').addClass('dis-none');
            $('#Consultant_Gender').removeClass('dis-none');
        }
        else if (value == 5) {
            $('#Consultant_Gender').val(3)
            $('#lblSex').text('Others');
            $('#Consultant_Gender').addClass('dis-none');
        }
        else {
            $('#lblSex').text('');
            $('#Consultant_Gender').val('');
            $('#lblSex').addClass('dis-none');
            $('#Consultant_Gender').removeClass('dis-none');
        }
    }


    if ($('select[name="Consultant_Salutation"]').val() != "") {
        if ($('select[name="Consultant_Salutation"]').val() != 4)
            Professional($('select[name="Consultant_Salutation"]').val())
    }



    function ProfessionalFI(value) {
        $('#Consultant_FIGender').removeClass('dis-none');
        $('#lblFISex').removeClass('dis-none');
        if (value == 1) {
            $('#Consultant_FIGender').val(1)
            $('#lblFISex').text('Male');
            $('#Consultant_FIGender').addClass('dis-none');
        }
        else if (value == 2) {
            $('#Consultant_FIGender').val(2)
            $('#lblFISex').text('Female');
            $('#Consultant_FIGender').addClass('dis-none');
        }
        else if (value == 3) {
            $('#Consultant_FIGender').val(2)
            $('#lblFISex').text('Female');
            $('#Consultant_FIGender').addClass('dis-none');
        }
        else if (value == 4) {
            $('#Consultant_FIGender').val('')
            $('#lblFISex').addClass('dis-none');
            $('#Consultant_FIGender').removeClass('dis-none');
        }
        else if (value == 5) {
            $('#Consultant_FIGender').val(3)
            $('#lblFISex').text('Others');
            $('#Consultant_FIGender').addClass('dis-none');
        }
        else {
            $('#lblFISex').text('');
            $('#Consultant_FIGender').val('');
            $('#lblFISex').addClass('dis-none');
            $('#Consultant_FIGender').removeClass('dis-none');
        }
    }


    if ($('select[name="Consultant_FISalutation"]').val() != "") {
        if ($('select[name="Consultant_FISalutation"]').val() != 4)
            ProfessionalFI($('select[name="Consultant_FISalutation"]').val())
    }

    function isOnlyNumericKey(e) {
        //if the letter is not digit then display error and don't type anything
        if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
            return false;
        }
    }

    $('input[name^="isSameAsAddress"]').on('click', function () {
        if ($(this).is(":checked")) {
            $('#txtIServiceAddress').val($('#txtIAddress').val());
            //$('#hiddSameAddress').val($('#isSameAsAddress').val());
            //$('#isSameAsAddress')
        } else {
            $('#txtIServiceAddress').val('');
        }
    });

    $('textarea[name="#txtIServiceAddress"]').on('keyup', function () {
        var value = $(this).val();
        if ($('#isSameAsAddress').is(":checked")) {
            $('#txtIServiceAddress').val(value);
        }
    });

    $('input[name^="isSameAsIFAddress"]').on('click', function () {
        if ($(this).is(":checked")) {
            $('#txtIFServiceAddress').val($('#txtIFAddress').val());
        } else {
            $('#txtIFServiceAddress').val('');
        }
    });

    $('textarea[name="#txtIFServiceAddress"]').on('keyup', function () {
        var value = $(this).val();
        if ($('#isSameAsIFAddress').is(":checked")) {
            $('#txtIFServiceAddress').val(value);
        }
    });

    $('input[name^="isSameAsFIAddress"]').on('click', function () {
        if ($(this).is(":checked")) {
            $('#txtFIServiceAddress').val($('#txtFIAddress').val());
        } else {
            $('#txtFIServiceAddress').val('');
        }
    });

    $('textarea[name="#txtFIServiceAddress"]').on('keyup', function () {
        var value = $(this).val();
        if ($('#isSameAsFIAddress').is(":checked")) {
            $('#txtFIServiceAddress').val(value);
        }
    });

    $('input[name^="isSameAsFFAddress"]').on('click', function () {
        if ($(this).is(":checked")) {
            $('#txtFFServiceAddress').val($('#txtFFAddress').val());

        } else {
            $('#txtFFServiceAddress').val('');
        }
    });

    $('textarea[name="#txtFFServiceAddress"]').on('keyup', function () {
        var value = $(this).val();
        if ($('#isSameAsFFAddress').is(":checked")) {
            $('#txtFFServiceAddress').val(value);
        }
    });


    $('#txtIConsultantName,#txtICity').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });
    //$('#txtIConsultantName,#txtIAddress,#txtICity,#txtIServiceAddress').keypress(function (e) {
    //    var regex = new RegExp("^[a-zA-Z ]+$");
    //    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
    //    if (regex.test(str)) {
    //        return true;
    //    }
    //    else {
    //        e.preventDefault();
    //        return false;
    //    }
    //});
    $('#txtIFConsultantName,#txtIFCity').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });
    $('#txtFIConsultantName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });
    $('#txtFFConsultantName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });

    function changeBankName() {
        var bankname = $("#Consultant_BankName").val();
        if (bankname == null || bankname == "")
            $('#BankId').val('');
    }
    function changeFrBankName() {
        var bankname = $("#Consultant_FBankName").val();
        if (bankname == null || bankname == "")
            $('#BankId').val('');
    }
    $('#Consultant_BankName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ,-@@&]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });

    $('#Consultant_FBankName').keypress(function (e) {
        var regex = new RegExp("^[a-zA-Z ,-@@&]+$");
        var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
        if (regex.test(str)) {
            return true;
        }
        else {
            e.preventDefault();
            return false;
        }
    });
    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#displayImg')
                    .attr('src', e.target.result)
                    .width(30)
                    .height(30);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }
    function readFIURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#displayFIImg')
                    .attr('src', e.target.result)
                    .width(30)
                    .height(30);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    $('input[name="PersonImage"]').change(function (e) {
        var _size = this.files[0].size;
        var iSize = (_size / 1024);
        iSize = (Math.round(iSize * 100) / 100)
        var filename = e.target.files[0].name;
        var allowedextensions = [".jpeg", ".png", ".jpg", ".gif", ".JPEG", ".PNG", ".JPG"];
        var extension = filename.substr((filename.lastIndexOf('.') + 1)).toLowerCase();
        var imgformat = allowedextensions.includes('.' + extension);
        if (imgformat) {
            if (iSize > 1024) {
                $('#alert').html('Image size should be allow below 1MB');
                $('#Validation').modal('toggle');
                $(this).val('');
                return;
            }
        }
        else {
            $('#alert').html('Image should be allowd document type [.jpg,.jpeg,.png]');
            $('#Validation').modal('toggle');
            $(this).val('');
            return;
        }
    });

    $('input[name="PersonFIImage"]').change(function (e) {
        var _size = this.files[0].size;
        var iSize = (_size / 1024);
        iSize = (Math.round(iSize * 100) / 100)
        var filename = e.target.files[0].name;
        var allowedextensions = [".jpeg", ".png", ".jpg", ".gif", ".JPEG", ".PNG", ".JPG"];
        var extension = filename.substr((filename.lastIndexOf('.') + 1)).toLowerCase();
        var imgformat = allowedextensions.includes('.' + extension);
        if (imgformat) {
            if (iSize > 1024) {
                $('#alert').html('Image size should be allow below 1MB');
                $('#Validation').modal('toggle');
                $(this).val('');
                return;
            }
        }
        else {
            $('#alert').html('Image should be allowd document type [.jpg,.jpeg,.png]');
            $('#Validation').modal('toggle');
            $(this).val('');
            return;
        }
    });

    function Dayanamiccountryvalidation() {

        var consltcountry = $('#ddlcnsltctry').val();
        var consltCategory = $('#ddlcnsltCategory').val();
        applyAutoComplete($('#Consultant_BankName'), $('#BankId'), '@Url.Action("LoadBankNameList", "Requirement")');
        applyAutoComplete($('#Consultant_FBankName'), $('#BankId'), '@Url.Action("LoadBankNameList", "Requirement")');
        if (consltcountry == 1 && consltCategory == 1) {
            Reset();
            applyAutoComplete($('#Consultant_BankName'), $('#BankId'), '@Url.Action("LoadBankNameList", "Requirement")');
            //$("#lblemail").addClass("required");
            //$("#txtEmail").prop('required', true);

            $('#indfirmdiv').hide();
            $('#vendorhead2').show();
            $('#Divbutton').show();
            $('#frginddiv').hide();
            $('#frgfirmdiv').hide();
            $('#vendorhead4').show();
            $('#abaDiv').hide();
            $('#swiftCode').hide();
            $('#stateCodeDiv').show();


            //$("#lblifsc").addClass("required");
            $("#ifsccode").show();
            $("#hiddenBankcountry").hide();
            $("#Consultant_DOB").addClass("required");
            $("#Consultant_DOB").prop('required', true);
            $("#vendorhead5").show();

            $("#hiddenInBankname").show();
            $("#hiddenFrBankname").hide();
            $("#hiddenInAccno").show();
            $("#hiddenFrAccno").hide();




        }
        else if (consltcountry == 2 && consltCategory == 2) {
            Reset();
            //$("#lblemail").removeClass("required");
            //$("#txtEmail").prop('required', false);
            $('#indfirmdiv').hide();
            $('#vendorhead2').hide();
            $('#vendorhead4').show();
            $('#Divbutton').show();
            $('#frginddiv').hide();
            $('#frgfirmdiv').show();


            //$('#countryDiv').show();
            $('#abaDiv').show();
            $('#swiftCode').show();


            $("#ifsccode").hide();
            $("#hiddenBankcountry").show();
            $("#lblservice").removeClass("required");
            $("#ddlcategoryservice").prop('required', false);
            $("#ddlcountry option[value='128']").remove();
            $("#vendorhead5").show();

            $("#hiddenInBankname").hide();
            $("#hiddenFrBankname").show();
            $("#hiddenInAccno").hide();
            $("#hiddenFrAccno").show();


        }
        else if (consltcountry == 1 && consltCategory == 2) {
            Reset();
            applyAutoComplete($('#Consultant_BankName'), $('#BankId'), '@Url.Action("LoadBankNameList", "Requirement")');
            //$("#lblemail").removeClass("required");
            //$("#txtEmail").prop('required', false);


            $('#indfirmdiv').show();
            $('#vendorhead2').hide();
            $('#Divbutton').show();
            $('#vendorhead4').show();
            $('#frginddiv').hide();
            $('#frgfirmdiv').hide();

            $('#abaDiv').hide();
            $('#swiftCode').hide();
            //$("input[name='Consultant_DOB']").prop('required', false);
            //$("#txIcnslttDOB").prop('required', false);
            $("#ifsccode").show();
            $("#hiddenBankcountry").hide();
            $("#lblservice").removeClass("required");
            $("#ddlcategoryservice").prop('required', false);
            $("#ddlcountry option[value='128']").remove();
            $("#vendorhead5").show();

            $("#hiddenInBankname").show();
            $("#hiddenFrBankname").hide();
            $("#hiddenInAccno").show();
            $("#hiddenFrAccno").hide();


            $('#vendordocname,#vendordocfile,#txtVendorCode').val('');
        }
        else if (consltcountry == 2 && consltCategory == 1) {
            Reset();
            //$("#lblemail").removeClass("required");
            //$("#txtEmail").prop('required', false);
            $('#indfirmdiv').hide();
            $('#vendorhead2').hide();

            $('#frginddiv').show();
            $('#frgfirmdiv').hide();
            $('#Divbutton').show();
            $('#vendorhead4').show();
            $('#stateDiv').hide();
            //$('#countryDiv').show();
            $('#abaDiv').show();
            $('#swiftCode').show();

            $("#Consultant_fi_DOB").addClass("required");
            $("#Consultant_fi_DOB").prop('required', true);

            $("#ifsccode").hide();
            $("#hiddenBankcountry").show();
            $("#lblservice").removeClass("required");
            $("#ddlcategoryservice").prop('required', false);
            $("#ddlcountry option[value='128']").remove();
            $("#vendorhead5").show();

            $("#hiddenInBankname").hide();
            $("#hiddenFrBankname").show();
            $("#hiddenInAccno").hide();
            $("#hiddenFrAccno").show();

        }
        else if (consltcountry == "" && consltCategory == "") {
            Reset();
            $('#vendorMaster,#vendorhead1').show();
            $('#vendorhead4,#vendorhead5').hide();
            $('#Divbutton').hide();
        }

    }

    $('#txtConsultantName').on('blur', function () {
        if ($('#txtConsultantName').val() != '') {
            $('#txtRegisteredName,#txtAcctHolderName').val($('#txtConsultantName').val());

        }
    });

    $('#txtIConsultantName').on('blur', function () {
        if ($('#txtIConsultantName').val() != '') {
            $('#txtAcctHolderName').val($('#txtIConsultantName').val());

        }
    });
    $('#txtIFConsultantName').on('blur', function () {
        if ($('#txtIFConsultantName').val() != '') {
            $('#txtAcctHolderName').val($('#txtIFConsultantName').val());

        }
    });
    $('#txtFIConsultantName').on('blur', function () {
        if ($('#txtFIConsultantName').val() != '') {
            $('#txtAcctHolderName').val($('#txtFIConsultantName').val());

        }
    });
    $('#txtFFConsultantName').on('blur', function () {
        if ($('#txtFFConsultantName').val() != '') {
            $('#txtAcctHolderName').val($('#txtFFConsultantName').val());

        }
    });

    function Reset() {

        $('#indfirmdiv').hide();
        $('#vendorhead2').hide();

        $('#frginddiv').hide();
        $('#frgfirmdiv').hide();
        //#ddlIcnsltGender #ddlFIcnsltGender,
        $('#ddlIcnsltSalutation,#ddlIstate,#ddlBankcountry').prop('selectedIndex', 0);
        $('#ddlFIcnsltSalutation,#ddlFIcountry,#ddlBankcountry').prop('selectedIndex', 0);
        $('#ddlIFcnsltSalutation,#ddlIFcnsltGender,#ddlIFstate,#ddlBankcountry').prop('selectedIndex', 0);
        $('#ddlFFcnsltSalutation,#ddlFFcountry,#ddlBankcountry').prop('selectedIndex', 0);



        $('#txtIConsultantName,#txIcnslttDOB,#Consultant_DOB,#txtIAadhaarno,#txtIPANNumber,#txtIconsltquali,#txtIconsltexp,#txtIStateCode,#txtIAddress,#txtIPhoneNumber,#txtIEmail,#txtICity,#txtIPinCode,#txtIServiceAddress,#txtBankEmail,#txtMICRCode').val('');

        $('#txFIcnslttDOB,#Consultant_fi_DOB,#txtFIConsultantName,#txtFIAadhaarno,#txtFIPANNumber,#txtFIPhoneNumber,#txtFIEmail,#txtFIconsltquali,#txtFIconsltexp,#txtFIAddress,#txtFITin,#txtFIServiceAddress,#txtFICity,#txtBankNature,#txtBankEmail,#txtMICRCode,#txtCity,#txtPinCode').val('');
        $('#txtIFConsultantName,#txtIFAddress,#txtIFPANNumber,#txtIFStateCode,#txtIFCity,#txtIFPhoneNumber,#txtIFEmail,#txtIFPinCode,#txtIFServiceAddress').val('');
        $('#txtFFConsultantName,#txtFFAddress,#txtFFPhoneNumber,#txtFFCity,#txtIFEmail,#txtFFTin,#txtFFServiceAddress,#txtBankNature,#txtBankEmail,#txtMICRCode,#txtFFPinCode').val('');
        $('#txtAcctHolderName,#txtBranch,#Consultant_BankName,#Consultant_FBankName,#txtIfscCode,#txtAcctNum,#txtFrAcctNum,#txtBankAddress,#txtABANumber,#txtSortCode,#txtIBAN,#txtSwiftBICCode').val('');
        $('#vendordocname,#vendordocfile').val('');

    }

    function CheckIEmployeestate() {
        var stateid = $('#ddlIstate').val();
        if (stateid != null && stateid != "" ) {
            $.ajax({
                type: "Post",
                url: '@Url.Action("GetStateCode", "Account")',
                data: { StateId: stateid },
                dataType: "json",
                success: function (result) {
                    if (result != "") {
                        $('#txtIStateCode').val(result);
                    }
                    else {
                        $('#FailedAlert').html("Somthing went to worng please contact Admin!.");
                        $('#Failed').modal('toggle');
                    }
                }
            });
        }
        else {
            $('#txtIStateCode').val('');
        }
    }

    $('#ddlIstate').on('change', function () {

        var stateid = $('#ddlIstate').val();
        if (stateid != null && stateid != "" ) {
            $.ajax({
                type: "Post",
                url: '@Url.Action("GetStateCode", "Account")',
                data: { StateId: stateid },
                dataType: "json",
                success: function (result) {
                    if (result != "") {
                        $('#txtIStateCode').val(result);
                    }
                    else {
                        $('#FailedAlert').html("Somthing went to worng please contact Admin!.");
                        $('#Failed').modal('toggle');
                    }
                }
            });
        }
        else {
            $('#txtIStateCode').val('');
        }

    });

    $('#ddlIFstate').on('change', function () {

        var stateid = $('#ddlIFstate').val();
        $.ajax({
            type: "Post",
            url: '@Url.Action("GetStateCode", "Account")',
            data: { StateId: stateid },
            dataType: "json",
            success: function (result) {
                if (result != "") {
                    $('#txtIFStateCode').val(result);
                }
                else {
                    $('#FailedAlert').html("Somthing went to worng please contact Admin!.");
                    $('#Failed').modal('toggle');
                }
            }
        });

    });

    $(document).ready(function () {
        Reset();

        if (succMsg != '') {
            $('#alertSuccess').html(succMsg);
            $('#Success').modal('toggle');
        }
        else if (errMsg != '') {
            $('#FailedAlert').html(errMsg);
            $('#Failed').modal('toggle');
        }
        else if (alertMsg != '') {
            $('#alert').html(alertMsg);
            $('#Validation').modal('toggle');
        }
        var add = '@ViewBag.success';
        if (add != '') {
            $('#Success').modal('toggle');

        }
        var warrning = '@ViewBag.Msg';
        if (warrning != '') {
            $('#alert').html(warrning);
            $('#Validation').modal('toggle');
        }
        var update = '@ViewBag.update';
        if (update != '') {
            $('#alertSuccess').html(update);
            $('#Success').modal('toggle');
            $("#btnReset").trigger('click');
        }
        var error = '@ViewBag.error';
        if (error != '') {
            $('#FailedAlert').html(error);
            $('#Failed').modal('toggle');

        }
        var pfmsmsg = '@ViewBag.Msgs'
        if (pfmsmsg != '') {
            $('#alert').html(pfmsmsg);
            $('#Validation').modal('toggle');
        }
        var filemsg = '@ViewBag.filemsg';
        if (filemsg != '') {
            $('#alert').html(filemsg);
            $('#Validation').modal('toggle');
        }


    });
    var msg = '@Model'
    if (msg != '') {

        $('#gridlist').hide();
        $('#vendorMaster,#vendorhead1,#vendorhead2, #vendorhead4, #Divbutton').show();
        Dayanamiccountryvalidation();

    }


    $('#btnAddvendorDoc').click(function () {

        var cln = $("#DocprimaryVendorDiv").clone().find("input").val("").end();
        $(cln).find('.dis-none').removeClass('dis-none');
        $(cln).find('.doclink').addClass('dis-none');
        $(cln).find('#firstremoveButton').addClass('dis-none');
        var len = document.getElementsByName('AttachmentName').length;
        if (len == 1)
            $("#firstremoveButton").removeClass('dis-none');
        $('#DocdivVendorContent').append(cln)

    });
    $(document).on('click', '#DocdivVendorContent button', function () {

        $(this).parent().parent("Div").remove();

    });


    function isNumberKey(evt) {
        var charCode = (evt.which) ? evt.which : evt.keyCode;
        if (charCode != 46 && charCode > 31
            && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    $('#btnSave').click(function (d) {
        d.preventDefault();
        //Dayanamiccountryvalidation();
        var isValid = $('#formCP').valid();
        //var EmployeeIpanno1 = true;
        if (!isValid)
            return false;

        var consltcountry = $('#ddlcnsltctry').val();
        var consltCategory = $('#ddlcnsltCategory').val();
        //CheckIUpdateEmployeepanno();
        if (consltcountry == 1 && consltCategory == 1) {
            var EmployeeIpanno1 = CheckIUpdateEmployeepanno();
            if (EmployeeIpanno1 != "") {
                if ($('#IsGST').is(":checked")) {
                    if ($('#txtIGSTNumber').val() == "") {
                        //$("#igGSTNumber").text("GST Number is required");
                        $("#lblGSTNumber").text("GST Number is required");
                        $('#txtIGSTNumber').focus();
                        return false;
                    }

                }
                $('#alert').html("This Pan number is linked to " + EmployeeIpanno1);
                return false;


            }
            else if ($('#IsGST').is(":checked")) {
                if ($('#txtIGSTNumber').val() == "") {
                    //$("#igGSTNumber").text("GST Number is required");
                    $("#lblGSTNumber").text("GST Number is required");
                    $('#txtIGSTNumber').focus();
                    return false;
                }

            }

        }
        else if (consltcountry == 1 && consltCategory == 2) {
            var EmployeeIFpanno = CheckIFUpdateEmployeepanno();
            if (EmployeeIFpanno != "") {
                if ($('#IsGSTIF').is(":checked")) {
                    if ($('#txtIFGSTNumber').val() == "") {
                        //$("#ifgGSTNumber").text("GST Number is required");
                        $("#lblIFGSTNumber").text("GST Number is required");

                        $('#txtIFGSTNumber').focus();
                        return false;
                    }

                }
                $('#alert').html("This Pan number is linked to " + EmployeeIFpanno);
                return false;
            }
            else if ($('#IsGSTIF').is(":checked")) {
                if ($('#txtIFGSTNumber').val() == "") {
                    //$("#ifgGSTNumber").text("GST Number is required");
                    $("#lblIFGSTNumber").text("GST Number is required");
                    $('#txtIFGSTNumber').focus();
                    return false;
                }

            }
        }


        var docnamevendor = [];
        var attachvendorfile = [];
        var attachvendorfileSize = [];

        //$('select[name="VendorDocumentType"]').each(function (idx, val) { doctypevendor.push($(val).val()); });
        $('input[name="AttachmentName"]').each(function (idx, val) { docnamevendor.push($(val).val()); });
        $('input[name="ConsultantFile"]').each(function (idx, val) { attachvendorfile.push($(val).val()); });
        $('input[name="ConsultantFile"]').each(function (idx, val) { attachvendorfileSize.push($(this).size); });

        //doctypevendor.sort();
        docnamevendor.sort();
        attachvendorfile.sort();
        attachvendorfileSize.sort();

        for (var j = 0; j < docnamevendor.length; ++j) {
            if (docnamevendor.length > 1) {
                //if (doctypevendor[j] == null || doctypevendor[j] == 0) {
                //    isValid = false;
                //    $('#alert').html("Please select Attachment type");
                //    $('#Validation').modal('toggle');
                //    return false;
                //}
                if (docnamevendor[j] == null || docnamevendor[j] == "") {
                    isValid = false;
                    $('#alert').html("Please fill Attachment name");
                    $('#Validation').modal('toggle');
                    return false;
                }
                if (attachvendorfile[j] == null || attachvendorfile[j] == "") {
                    isValid = false;
                    $('#alert').html("Please upload any one of these type file [doc, docx, pdf].");
                    $('#Validation').modal('toggle');
                    return false;
                }

            }
            //if ((doctypevendor[j] > 0) && ((docnamevendor[j] == null) || docnamevendor[j] == "")) {
            //    isValid = false;

            //    $('#alert').html("Please fill Attachment name");
            //    $('#Validation').modal('toggle');
            //    return false;

            //}
            if ((docnamevendor[j] > 0) && ((docnamevendor[j] == null) || docnamevendor[j] == "")) {
                isValid = false;

                $('#alert').html("Please fill Attachment name");
                $('#Validation').modal('toggle');
                return false;

            }
            //if ((docnamevendor[j] != null && docnamevendor[j] != "") && (doctypevendor[j] == null || doctypevendor[j] == 0)) {
            //    isValid = false;

            //    $('#alert').html("Please select Attachment type");
            //    $('#Validation').modal('toggle');
            //    return false;

            //}
            if ((docnamevendor[j] != 0) && (docnamevendor[j] != null || docnamevendor[j] != "") && (attachvendorfile[j] == null || attachvendorfile[j] == "")) {
                isValid = false;
                $('#alert').html("Please upload any one of these type file [doc, docx, pdf].");
                $('#Validation').modal('toggle');
                return false;
            }
            //if ((docnamevendor[j] != 0) && (docnamevendor[j] != null || docnamevendor[j] != "")) {
            //    isValid = false;
            //    $('#alert').html("Please upload any one of these type file [doc, docx, pdf].");
            //    $('#Validation').modal('toggle');
            //    return false;
            //}
            if (attachvendorfile[j] != null || attachvendorfile[j] != "") {
                var vendorextension = attachvendorfile[j].split('.').pop().toLowerCase();
                if (vendorextension != "") {
                    if ($.inArray(vendorextension, ["pdf", "doc", "docx", "DOC", "DOCX", "PDF"]) === -1) {
                        isValid = false;
                        $('#alert').html("Please upload any one of these type doc [.pdf, .doc, .docx]");
                        $('#Validation').modal('toggle');
                        return false;
                    }
                    if (docnamevendor[j] == null || docnamevendor[j] == "") {
                        isValid = false;

                        $('#alert').html("Please fill Attachment name");
                        $('#Validation').modal('toggle');
                        return false;

                    }

                    if (attachvendorfileSize[j] > 5242880) {
                        isValid = false;
                        $('#alert').html("You can upload the file up to 5 MB.");
                        $('#Validation').modal('toggle');
                        return false;
                    }
                }
            }

        }

        if (isValid) {
            //$("#btnSave").attr('disabled', 'true');
            $('.loading-bg').removeClass('dis-none');
            $('#formCP').submit();
        }
    });

    $('#btnUpdate').click(function (d) {

        d.preventDefault();

        var isValid = $('#formCP').valid();
        if (!isValid)
            return false;
        var consltcountry = $('#ddlcnsltctry').val();
        var consltCategory = $('#ddlcnsltCategory').val();
        var gstNumber = $('#txtIGSTNumber').val();
        //CheckIUpdateEmployeepanno();
        if (consltcountry == 1 && consltCategory == 1) {
            var EmployeeIpanno1 = CheckIModifyUpdateEmployeepanno();
            if (EmployeeIpanno1 != "") {
                //$('#alert').html("This Pan number is linked to " + EmployeeIpanno1);
                //return false;
                if ($('#IsGST').is(":checked")) {
                    if ($('#txtIGSTNumber').val() == "") {
                        //$("#igGSTNumber").text("GST Number is required");
                        $("#lblGSTNumber").text("GST Number is required");
                        $('#txtIGSTNumber').focus();
                        return false;
                    }

                }

            }


        }
        else if (consltcountry == 1 && consltCategory == 2) {
            var EmployeeIFpanno = CheckIFModifyUpdateEmployeepanno();
            if (EmployeeIFpanno != "") {
                if ($('#IsGSTIF').is(":checked")) {
                    if ($('#txtIFGSTNumber').val() == "") {
                        //$("#ifgGSTNumber").text("GST Number is required");
                        $("#lblIFGSTNumber").text("GST Number is required");
                        $('#txtIFGSTNumber').focus();
                        return false;
                    }
                }
            }

        }
        //CheckIUpdateEmployeepanno();
        var docnamevendor = [];
        var attachvendorfile = [];
        var attachvendorfileSize = [];
        var attachvendordocid = [];
        var docpath = [];
        //$('select[name="VendorDocumentType"]').each(function (idx, val) { doctypevendor.push($(val).val()); });
        $('input[name="AttachmentName"]').each(function (idx, val) { docnamevendor.push($(val).val()); });
        $('input[name="ConsultantFile"]').each(function (idx, val) { attachvendorfile.push($(val).val()); });
        $('input[name="ConsultantFile"]').each(function (idx, val) { attachvendorfileSize.push($(this).size); });
        $('input[name="vendordocfile"]').each(function (idx, val) { docpath.push($(val).val()); });
        $('input[name="ConsultantDocumentID"]').each(function (idx, val) { attachvendordocid.push($(val).val()); });
        //doctypevendor.sort();
        docnamevendor.sort();
        attachvendorfile.sort();
        attachvendorfileSize.sort();


        for (var k = 0; k < docnamevendor.length; ++k) {
            if (docnamevendor.length > 1) {
                if (((docnamevendor[k] == null) || docnamevendor[k] == "")) {
                    isValid = false;
                    $('#alert').html("Please fill Attachment name");
                    $('#Validation').modal('toggle');
                    return false;

                }
                if ((attachvendordocid[k] == null || attachvendordocid[k] == "")) {
                    if ((docnamevendor[k] != null || docnamevendor[k] != "") && (docpath[k] == null || docpath[k] == "") && (attachvendorfile[k] == null || attachvendorfile[k] == "")) {
                        if (docpath[k] == "" && attachvendorfile[k] == "") {
                            isValid = false;
                            $('#alert').html("Please upload any one of these type file [doc, docx, pdf].");
                            $('#Validation').modal('toggle');
                            return false;
                        }
                    }
                }
            }


            if (attachvendorfile[k] != null || attachvendorfile[k] != "") {
                var extension = attachvendorfile[k].split('.').pop().toLowerCase();
                if (extension != "") {
                    if ($.inArray(extension, ["pdf", "doc", "docx", "DOC", "DOCX", "PDF"]) === -1) {
                        isValid = false;
                        $('#alert').html("Please upload any one of these type doc [.pdf, .doc, .docx]");
                        $('#Validation').modal('toggle');
                        return false;
                    }
                }
            }
            //if ((docnamevendor[k] > 1) && ((docnamevendor[k] == null) || docnamevendor[k] == "")) {
            //    isValid = false;

            //    $('#alert').html("Please fill Attachment name");
            //    $('#Validation').modal('toggle');
            //    return false;

            //}

            if ((attachvendordocid[k] == null || attachvendordocid[k] == "")) {

                if (docnamevendor[k] == "" && (docpath[k] == null || docpath[k] == "") && (attachvendorfile[k] == null || attachvendorfile[k] == "")) {
                    isValid = true;
                    //return false;

                }
                else if (docnamevendor[k] == "")
                {
                    isValid = false;
                    $('#alert').html("Please fill Attachment Name");
                    $('#Validation').modal('toggle');
                    return false;
                }

                else if (docpath[k] == "" && attachvendorfile[k] == "") {
                        isValid = false;
                        $('#alert').html("Please upload any one of these type file [doc, docx, pdf].");
                        $('#Validation').modal('toggle');
                        return false;
                    }

            }
        }


        if (isValid) {
            $("#btnUpdate").attr('disabled', 'true');
            $('.loading-bg').removeClass('dis-none');
            $('#formCP').submit();
        }


        //$(this).closest("form").submit();
    });

    $('#btnFilterUser').off("click").on("click", function () {
        $('#popFilterUser').css("display", "Block");
    });

    $('a[name="btnCloseUser"],button[name="btnCloseUser"]').click(function () {
        $('#popFilterUser').css("display", "none");
    });

    $('.selectpicker').selectpicker({
        liveSearch: true
    });

    $('.selectpicker').selectpicker('refresh');

    function CheckEmployeeadhar() {
        var adhar = $('#txtIAadhaarno').val() || null;
        var data = {};
        if(adhar != null && adhar.length == 12)
        {
            //var apprefNo = null;
            //if($('#ApplicationNo').val() != "")
            //    apprefNo = $('#ApplicationNo').val()
            data = { adharno : adhar};
            //if($('#OldEmployeeNumber').val() != "")
            //{
            //    data = { adharno : adhar , oldId : $('#OldEmployeeNumber').val() , apptype : "STE", appref : apprefNo };
            //}
            $.ajax({
                url: '@Url.Action("CheckPreviousEmployeeAdhar", "Requirement")',
                type: "Get",
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if(result!="")
                    {
                        $('#alert').html("This Aadhaar Number is linked to  " +result);
                        $('#Validation').modal('toggle');
                        $('#txtIAadhaarno').val('');
                        $('#txtIAadhaarno').focus();
                    }
                }
            });
        }
    }

    function CheckIEmployeepanno() {
        var pnno = $('#txtIPANNumber').val() || null;
        var gstno = $('#txtIGSTNumber').val() || null;
        var empid = $('#consultantempid').val() || null;
        var data = {};
        if (pnno != null && pnno.length == 10) {

            data = { Panno: pnno, GST: gstno, EmpID: empid };

            $.ajax({
                url: '@Url.Action("CheckConsultantEmployeePan", "Requirement")',
                type: "Get",
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if (result != "") {
                        $('#alert').html("This Pan number is linked to  " + result);
                        $('#Validation').modal('toggle');
                        //$('#txtIPANNumber').val('');
                        //$('#txtIPANNumber').focus();
                        //$('#IsGST').attr('disabled', 'disabled');
                        $('#IsGST').removeAttr('disabled');

                    }
                    else {
                        //$('#IsGST').attr('Enabled', 'Enabled');
                        $('#IsGST').removeAttr('disabled');

                    }
                }
            });
        }
        else {
            $('#IsGST').attr('disabled', 'disabled');

        }
    }


    function CheckIModifyUpdateEmployeepanno() {
        var pnno = $('#txtIPANNumber').val() || null;
        var gstno = $('#txtIGSTNumber').val() || null;
        var empid = $('#consultantempid').val() || null;

        var data = {};

        var isvalid = "";
        if (pnno != null && pnno.length == 10) {

            data = { Panno: pnno, GST: gstno, EmpID: empid };

            $.ajax({
                url: '@Url.Action("CheckConsultantEmployeePan", "Requirement")',
                type: "Get",
                async: false,
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if (result != "") {
                        //$('#alert').html("This Pan number is linked to" + result);
                        //$('#Validation').modal('toggle');
                        //$('#IsGST').removeAttr('disabled');
                        isvalid = result;
                        return isvalid;
                    }
                    else {
                        $('#IsGST').removeAttr('disabled');
                        isvalid = result;
                        return isvalid;
                    }
                }
            });


        }
        else {
            $('#IsGST').attr('disabled', 'disabled');
            isvalid = "";
            return isvalid;
        }
        return isvalid;


    }

    function CheckIFModifyUpdateEmployeepanno() {
        var pnno = $('#txtIFPANNumber').val() || null;
        var gstno = $('#txtIFGSTNumber').val() || null;
        var empid = $('#consultantempid').val() || null;
        var data = {};
        var isvalid = "";

        if(pnno != null && pnno.length == 10) {
            data = { Panno: pnno, GST: gstno, EmpID: empid };

            $.ajax({
                url: '@Url.Action("CheckConsultantEmployeePan", "Requirement")',
                type: "Get",
                async: false,
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if (result != "") {
                        isvalid = result;
                        return isvalid;
                    }
                    else {
                        $('#IsGSTIF').removeAttr('disabled');
                        //results = result;
                        isvalid = result;
                        return isvalid;
                    }
                }
            });
        }
        else {
            $('#IsGSTIF').attr('disabled', 'disabled');
            //results = result;
            isvalid = "";
            return isvalid;
        }
        return isvalid;
    }


    function CheckIUpdateEmployeepanno() {
        var pnno = $('#txtIPANNumber').val() || null;
        var gstno = $('#txtIGSTNumber').val() || null;
        var empid = $('#consultantempid').val() || null;

        var data = {};

            var isvalid = "";
            if (pnno != null && pnno.length == 10) {

                data = { Panno: pnno, GST: gstno, EmpID: empid };

                $.ajax({
                    url: '@Url.Action("CheckConsultantEmployeePan", "Requirement")',
                    type: "Get",
                    async: false,
                    dataType: "JSON",
                    data: data,
                    success: function (result) {
                        if (result != "") {
                            $('#alert').html("This Pan number is linked to " + result);
                            $('#Validation').modal('toggle');
                            $('#IsGST').removeAttr('disabled');
                            isvalid = result;
                            return isvalid ;
                        }
                        else {
                            $('#IsGST').removeAttr('disabled');
                            isvalid = result;
                            return isvalid;
                        }
                    }
                });


            }
            else {
                $('#IsGST').attr('disabled', 'disabled');
                isvalid = "";
                return isvalid;
            }
        return isvalid;


    }



    function CheckIFUpdateEmployeepanno() {
        var pnno = $('#txtIFPANNumber').val() || null;
        var gstno = $('#txtIFGSTNumber').val() || null;
        var empid = $('#consultantempid').val() || null;
        var data = {};
        var isvalid = "";

        if(pnno != null && pnno.length == 10) {
            data = { Panno: pnno, GST: gstno, EmpID: empid };

            $.ajax({
                url: '@Url.Action("CheckConsultantEmployeePan", "Requirement")',
                type: "Get",
                async: false,
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if (result != "") {
                        //if (txtIFGSTNumber.val() != "") {

                        //}
                        $('#alert').html("This Pan number is linked to  " + result);
                        $('#Validation').modal('toggle');
                        //$('#txtIFPANNumber').val('');
                        //$('#txtIFPANNumber').focus();
                        $('#IsGSTIF').removeAttr('disabled');
                        //results = result;
                        isvalid = result;
                        return isvalid;
                    }
                    else {
                        $('#IsGSTIF').removeAttr('disabled');
                        //results = result;
                        isvalid = result;
                        return isvalid;
                    }
                }
            });
        }
        else {
            $('#IsGSTIF').attr('disabled', 'disabled');
            //results = result;
            isvalid = "";
            return isvalid;
        }
        return isvalid;
    }

    function CheckEmployeepanno() {
        var pnno = $('#txtIFPANNumber').val() || null;
        var gstno = $('#txtIFGSTNumber').val() || null;
        var empid = $('#consultantempid').val() || null;
        var data = {};
        if(pnno != null && pnno.length == 10) {
            data = { Panno: pnno, GST: gstno, EmpID: empid };

            $.ajax({
                url: '@Url.Action("CheckConsultantEmployeePan", "Requirement")',
                type: "Get",
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if (result != "") {
                        $('#alert').html("This Pan number is linked to  " + result);
                        $('#Validation').modal('toggle');
                        //$('#txtIFPANNumber').val('');
                        //$('#txtIFPANNumber').focus();
                        $('#IsGSTIF').removeAttr('disabled');

                    }
                    else {
                        $('#IsGSTIF').removeAttr('disabled');

                    }
                }
            });
        }
        else {
            $('#IsGSTIF').attr('disabled', 'disabled');
        }
    }

    function CheckEmployeeFITINNo() {
        var pnno = $('#txtFITin').val() || null;
        var data = {};
        if(pnno != null && pnno.length == 11) {
            var apprefNo = null;
            //if($('#ApplicationNo').val() != "")
            //    apprefNo = $('#ApplicationNo').val()
            data = { TINno : pnno };
            //if($('#OldEmployeeNumber').val() != "")
            //{
            //    data = { Panno : pnno , oldId : $('#OldEmployeeNumber').val() , apptype : "STE" , appref : apprefNo};
            //}
            $.ajax({
                url: '@Url.Action("CheckTINNumber", "Requirement")',
                type: "Get",
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if(result!="")
                    {
                        $('#alert').html("This TIN number is linked to  " +result);
                        $('#Validation').modal('toggle');
                        $('#txtFITin').val('');
                        $('#txtFITin').focus();
                    }
                }
            });
        }
        //else {
        //    $('#alert').html("TIN Number should not exceed 11 characters");
        //    $('#Validation').modal('toggle');
        //    $('#txtFITin').val('');
        //    $('#txtFITin').focus();
        //}
    }

    function CheckEmployeeFFTINNo() {
        var pnno = $('#txtFFTin').val() || null;
        var data = {};
        if (pnno != null && pnno.length == 11) {
            var apprefNo = null;
            //if($('#ApplicationNo').val() != "")
            //    apprefNo = $('#ApplicationNo').val()
            data = { Panno: pnno };
            //if($('#OldEmployeeNumber').val() != "")
            //{
            //    data = { Panno : pnno , oldId : $('#OldEmployeeNumber').val() , apptype : "STE" , appref : apprefNo};
            //}
            $.ajax({
                url: '@Url.Action("CheckTINNumber", "Requirement")',
                type: "Get",
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if (result != "") {
                        $('#alert').html("This TIN number is linked to  " + result);
                        $('#Validation').modal('toggle');
                        $('#txtFFTin').val('');
                        $('#txtFFTin').focus();
                    }
                }
            });
        }
        //else {
        //    $('#alert').html("TIN Number should not exceed 11 characters");
        //    $('#Validation').modal('toggle');
        //    $('#txtFFTin').val('');
        //    $('#txtFFTin').focus();
        //}
    }
    function CheckIGSTno() {
        var Gst = $('#txtIGSTNumber').val() || null;
        var data = {};
        if (Gst != null && Gst.length == 15) {
            var apprefNo = null;
            //if($('#ApplicationNo').val() != "")
            //    apprefNo = $('#ApplicationNo').val()
            data = { GSTno: Gst };
            //if($('#OldEmployeeNumber').val() != "")
            //{
            //    data = { Panno : pnno , oldId : $('#OldEmployeeNumber').val() , apptype : "STE" , appref : apprefNo};
            //}
            $.ajax({
                url: '@Url.Action("CheckPreviousMasterGSTNumber", "Requirement")',
                type: "Get",
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if (result != "") {
                        $('#alert').html("This GST number is linked to  " + result);
                        $('#Validation').modal('toggle');
                        $('#txtIGSTNumber').val('');
                        $('#txtIGSTNumber').focus();
                    }
                    else {
                        //$("#igGSTNumber").text('');
                        $("#lblGSTNumber").text('');
                    }
                }
            });
        }
        //else {
        //    $("#txtIGSTNumber").prop('required', true);
        //}

    }

    function CheckIFGSTno() {
        var Gst = $('#txtIFGSTNumber').val() || null;
        var data = {};
        if (Gst != null && Gst.length == 15) {
            var apprefNo = null;
            //if($('#ApplicationNo').val() != "")
            //    apprefNo = $('#ApplicationNo').val()
            data = { GSTno: Gst };
            //if($('#OldEmployeeNumber').val() != "")
            //{
            //    data = { Panno : pnno , oldId : $('#OldEmployeeNumber').val() , apptype : "STE" , appref : apprefNo};
            //}
            $.ajax({
                url: '@Url.Action("CheckPreviousMasterGSTNumber", "Requirement")',
                type: "Get",
                dataType: "JSON",
                data: data,
                success: function (result) {
                    if(result!="")
                    {
                        $('#alert').html("This GST number is linked to  " +result);
                        $('#Validation').modal('toggle');
                        $('#txtIFGSTNumber').val('');
                        $('#txtIFGSTNumber').focus();
                    }
                    else {
                        //$("#ifgGSTNumber").text('');
                        $("#lblIFGSTNumber").text('');

                    }
                }
            });
        }
    }


    $('input[name^="IsGSTIF"]').on('click', function () {
        if ($(this).is(":checked")) {
            $('#txtIFGSTNumber').removeAttr('readonly');
            //$("#ifgGSTNumber").text('');
            $("#lblIFGSTNumber").text("GST Number is required");
            //$("#txtIFGSTNumber").prop('required', true);
            //$("#lblGSTNumber").addClass("required");
        } else {
            $('#txtIFGSTNumber').attr('readonly', 'readonly');
            $('#txtIFGSTNumber').val('');
            $("#lblIFGSTNumber").text('');
        }
    });

    $('input[name^="IsGST"]').on('click', function () {
        if ($(this).is(":checked")) {
            $('#txtIGSTNumber').removeAttr('readonly');
            //$('#igGSTNumber').text('');
            $("#lblGSTNumber").text("GST Number is required");
            //$("#txtIGSTNumber").prop('required', true);
            //$("#lblGSTNumber").addClass("required");
        } else {

            $('#txtIGSTNumber').attr('readonly', 'readonly');
            $('#txtIGSTNumber').val('');
            $("#lblGSTNumber").text('');
        }
    });

    $("#txtIConsultantName").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });

    var findtabs = $(".cust-tab");
    $(findtabs[0]).find('textarea,input[type="text"]').each(function () {
        var id = $(this).attr('id');
        var name = $(this).attr('name').split('.')[1];
        //var noexpid = ["DesignationCode", "ProjectNumber", "Comments", "PIJustificationRemarks"];
        var noexpname = ["DesignationautoComplete"];
        if (!noexpname.includes(name)) {
            $(this).attr('style', 'text-transform:uppercase');
        }
        //if (!noexpid.includes(id) && !noexpname.includes(name)) {
        //    $(this).attr('style', 'text-transform:uppercase');
        //}
    });


    $("#txtIFPANNumber").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });
    $("#txtIFGSTNumber").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });
    $("#txtIGSTNumber").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });
    $("#txtFITin").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });
    $("#txtFFTin").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });
    $("#txtIfscCode").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });
    $("#txtFrAcctNum").keyup(function () {
        this.value = this.value.toLocaleUpperCase();
    });


</script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")"></script>
