@model IOAS.Models.SalaryTransaction
@{
    ViewBag.Title = "Transaction";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}


<div class="wrapper">
    <div class="row hd-tt-bg">
        <div class="col-md-12">
            <h4><b>Salary Processing</b></h4>
            <ul class="nav nav-pills custom-nav-pills custom-spl-nav">
                <li id="picDel"><a href="javascript:void(0)" class="ml-null brd-rd-md">Salary Initiation</a></li>
                <li id="allOca"><a href="javascript:void(0)" class="ml-null brd-rd-md">Commitment</a></li>
                <li class="active" id="trans"><a href="javascript:void(0)" class="ml-null brd-rd-md">Transaction</a></li>
                <li id="modEof1"><a href="javascript:void(0)" class="ml-null brd-rd-md">Payment Process</a></li>
            </ul>
        </div>
    </div>
</div>

@using (Html.BeginForm("PensionerTransaction", "StaffPayment", new { page = 1, pageSize = 10 }, FormMethod.Post, new { @class = "form-horizontal", @id = "frmSalaryPayment", @name = "frmSalaryPayment", role = "form" }))
{
    @Html.AntiForgeryToken()


    if (!String.IsNullOrEmpty(ViewBag.Errors))
    {
        @:<script type="text/javascript">$.alert({title:'Validation', content:'@ViewBag.Errors'})</script>
    }
    if (!String.IsNullOrEmpty(ViewBag.Message))
    {
        @:<script type="text/javascript">$.alert({title:'Message', content:'@ViewBag.Message'})</script>
    }

    <div class="col-md-12 col-sm-12 m-b-sm">
        <div class="">
            <div class="row">

                <div class="col-md-12">
                    <div class="bl-lg-panel-box pb-null">
                        <div id="pnlTotalSalary" class="cmn-panel-box">
                            
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group custom-form-group">
                                    </div>
                                </div>
                                <div class="col-md-4 col-md-offset-2">
                                    <div class="reg-no mt-m-md">
                                        <div class="form-group custom-form-group">
                                            <label>Total Salary</label>
                                            @Html.TextBoxFor(m => m.Amount, new { @class = "form-control", @autocomplete = "off", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.Amount)
                                            @Html.HiddenFor(m => m.PaymentHeadId)
                                            @Html.Hidden("TransactionTypeCode", "PSAL")
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </div>
                </div>
            </div>
            @Html.Partial("_TransactionDetails", Model)

        </div>


    </div>

    <div class="row mb-lg">
        <div class="col-md-6">
            @*<a href='@Url.Action("List", "StaffPayment")' role="button" class="btn btn-gray  btn-md">List</a>*@
        </div>
        <div class="col-md-2"></div>
        <div class="col-md-4">
            <button type="submit" name="btnBack" class="btn btn-default">Back</button>

            <button type="submit" name="btnSave" class="btn btn-primary" @ViewBag.AllowSave>Save</button>
            <button type="submit" name="btnProceed" class="btn btn-primary" @ViewBag.AllowProceed>Proceed</button>
        </div>

    </div>

}


<script type="text/javascript">
    $("#btnAddExpense").css({'display':'none'});
    $(".removeExpense").css({'display':'none'});
    $("#pnlLedgerInfo").css({'display':'none'});
    $("#ttlCr").val('@ViewBag.CreditAmount');
    $("#ttlDr").val('@ViewBag.DebitAmount');
    CalculateDeductionTotal();
    function GetTransactionDetails() {
        
        EmptyExpenseDeductionDetails();
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetTransactionDetails", "CoreAccounts")",
            data: { "typeCode": "PSAL","tSubCode" : '1'},
        traditional: true,
        dataType: "json",
        success: function (result) {
            $.each(result.ExpenseDetail, function (i, item) {
                if (i == 0) {
                    var trEle = $('#tbodyExpenseList tr:first');
                    $(trEle).find('input[name$=".Amount"]').val('');
                    $(trEle).find('input[name$=".TransactionType"]').val(item.TransactionType);
                    $(trEle).find('input[name$=".IsJV"]').val(item.IsJV);
                    $(trEle).find('#lblTransType').text(item.TransactionType);
                    $(trEle).find("input[name='ExpenseDetail.Index']").val(i);

                    var selectGroup = $(trEle).find('select[name$=".AccountGroupId"]');
                    selectGroup.empty();
                    $.each(item.AccountGroupList, function (index, itemData) {
                        selectGroup.append($('<option/>', {
                            value: itemData.id,
                            text: itemData.name,
                        }));
                    });

                    var selectHead = $(trEle).find('select[name$=".AccountHeadId"]');
                    selectHead.empty();
                    $.each(item.AccountHeadList, function (index, itemData) {
                        selectHead.append($('<option/>', {
                            value: itemData.id,
                            text: itemData.name,
                        }));
                    });
                } else {
                    var trEleNew = $('#tbodyExpenseList tr:first').clone().find('input').val('').end();
                    $(trEleNew).find('input[name$=".Amount"]').val('');
                    $(trEleNew).find("input[name='ExpenseDetail.Index']").val(i);
                    $(trEleNew).find('input[name$=".TransactionType"]').val(item.TransactionType);
                    $(trEleNew).find('input[name$=".IsJV"]').val(item.IsJV);
                    $(trEleNew).find('#lblTransType').text(item.TransactionType);
                    $(trEleNew).find("input,Select").each(function () {
                        $(this).attr("name", $(this).attr("name").replace(/\d+/, i));
                        $(this).attr("id", $(this).attr("id").replace(/\d+/, i));
                    });
                    $(trEleNew).find("span[data-valmsg-for]").each(function () {
                        $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, i));
                    });

                    var selectGroup = $(trEleNew).find('select[name$=".AccountGroupId"]');
                    selectGroup.empty();
                    $.each(item.AccountGroupList, function (index, itemData) {
                        selectGroup.append($('<option/>', {
                            value: itemData.id,
                            text: itemData.name,
                        }));
                    });

                    var selectHead = $(trEleNew).find('select[name$=".AccountHeadId"]');
                    selectHead.empty();
                    $.each(item.AccountHeadList, function (index, itemData) {
                        selectHead.append($('<option/>', {
                            value: itemData.id,
                            text: itemData.name,
                        }));
                    });
                    $('#tbodyExpenseList').append(trEleNew);
                }
            });
            $.each(result.DeductionDetail, function (i, item) {
                if (i == 0) {
                    var trEle = $('#tbodyDeductionList tr:first');
                    var amtEle = $(trEle).find('input[name$=".Amount"]');
                    if(item.TDSPercentage == null){
                        amtEle.val('');
                    }else{
                        tds = ttlAdvTax * item.TDSPercentage / 100;
                        amtEle.val(tds);
                    }

                    amtEle.addClass('required');
                    $(trEle).find('input[name$=".AccountGroupId"]').val(item.AccountGroupId);
                    $(trEle).find('input[name$=".DeductionHeadId"]').val(item.DeductionHeadId);
                    $(trEle).find('input[name$=".DeductionHead"]').val(item.DeductionHead);
                    $(trEle).find('input[name$=".AccountGroup"]').val(item.AccountGroup);
                    $(trEle).find('td:nth-child(1)').html(item.AccountGroup);
                    $(trEle).find('td:nth-child(2)').html(item.DeductionHead);
                } else {
                    var trEleNew = $('#tbodyDeductionList tr:first').clone().find('input').val('').end();
                    //$(trEleNew).find("input[name='DeductionDetail.Index']").val(i);
                    $(trEleNew).find("input").each(function () {
                        $(this).attr("name", $(this).attr("name").replace(/\d+/, i));
                        $(this).attr("id", $(this).attr("id").replace(/\d+/, i));
                    });
                    $(trEleNew).find("span[data-valmsg-for]").each(function () {
                        $(this).attr("data-valmsg-for", $(this).attr("data-valmsg-for").replace(/\d+/, i));
                    });
                    var amtEle = $(trEleNew).find('input[name$=".Amount"]');
                    amtEle.addClass('required');
                    if(item.TDSPercentage != null){
                        tds = ttlAdvTax * item.TDSPercentage / 100;
                        amtEle.val(tds);
                    }
                    $(trEleNew).find('input[name$=".AccountGroupId"]').val(item.AccountGroupId);
                    $(trEleNew).find('input[name$=".DeductionHeadId"]').val(item.DeductionHeadId);
                    $(trEleNew).find('input[name$=".DeductionHead"]').val(item.DeductionHead);
                    $(trEleNew).find('input[name$=".AccountGroup"]').val(item.AccountGroup);
                    $(trEleNew).find('td:nth-child(1)').html(item.AccountGroup);
                    $(trEleNew).find('td:nth-child(2)').html(item.DeductionHead);
                    $('#tbodyDeductionList').append(trEleNew);
                }
            });
            $('#NeedUpdateTransDetail').val('false');
            CalculateDeductionTotal();
        },
        error: function (err) {
            console.log("error : " + err);
        }
    });
    }
</script>