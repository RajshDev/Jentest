
@model IOAS.Models.BillStatusModel

@{
    ViewBag.Title = "Form";
    ViewBag.Subtitle = "Reports";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}

<div class="row hd-tt-bg">
    <div class="col-md-12">
        <h4><b>IT TDS Return</b> </h4>
    </div>
</div>


<style>
    .vw-dts-bg .hgt-bg {
        background: #597df0;
        color: #fff;
    }

        .vw-dts-bg .hgt-bg label {
            font-size: 16px !important;
            color: #fff !important;
        }

        .vw-dts-bg .hgt-bg h4 {
            font-size: 18px !important;
            color: #fff;
        }

    .vw-dts-bg .hgt-bg-pl {
        background: #e11eda;
        color: #fff;
    }

        .vw-dts-bg .hgt-bg-pl label {
            font-size: 16px !important;
            color: #fff !important;
        }

        .vw-dts-bg .hgt-bg-pl h4 {
            font-size: 18px !important;
            color: #fff;
        }
</style>
@using (Html.BeginForm("Form", "Reports", FormMethod.Post, new { @class = "form-horizontal", @id = "formQ", @name = "formQ", role = "form", enctype = "multipart/form-data" }))
{

<div class="row">
    <div class="white-bg ad-navbar">
        <div class="col-md-3 ds-spl-bg">
            <div class="ds-icn">
                <i class="ion-ios-list-outline "></i>
            </div>
            <div class="ds-tt">
                <span class="required">Financial Year</span>
                @Html.DropDownListFor(m => m.FinancialYear, new SelectList(ViewBag.Finyr, "value", "label"), "---Fin Year---", new { @class = "form-control required", @id = "finyr" })
                @Html.ValidationMessage("FinancialYear")
             </div>
        </div>

        <div class="col-md-2 ds-spl-bg">
            <div class="ds-tt">
                <span class="required">Form Type</span>
                @Html.DropDownListFor(m => m.FormId, new SelectList(ViewBag.FormType, "id", "name"), "---Select---", new { @class = "form-control required", @id = "type" })
                @Html.ValidationMessage("FormId")
             </div>
        </div>
        <div class="col-md-2 ds-spl-bg">
            <div class="ds-tt">
                <span class="required">Period</span>
                @Html.DropDownListFor(m => m.Period, new SelectList(ViewBag.FormPeriod, "id", "name"), "---Select---", new { @class = "form-control required", @id = "period" })
                @Html.ValidationMessage("Period")
             </div>
        </div>
        @*<div class="col-md-2 ds-spl-bg">
            <div class="ds-tt">
                <span class="required">Period</span>
                @Html.EditorFor(m => m.Status,new { @class = "form-control required", @id = "status" })
              
            </div>
        </div>*@
        <div class="col-md-2 ds-spl-bg">
            <div class="ds-tt">
                <a href="javascript:void(0)" class="btndown">
                <input type="button" value="Download Report" class="btn btn-info mt-20" id="btndown" /></a>
                
            </div>
        </div>
        <div class="col-md-2 ds-spl-bg">
         <div class="ds-tt">
            <button type="button"  class="btn btn-warning mt-20" id="idPrevDoc">Prev Document</button></div>
        </div>
    </div>
</div>


<div class="row vw-dts-bg">
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-6">
                <div id="divdeleteContent">
                    <div class="row">
                        <label class="col-md-3 fn-normal">Attachment Name </label>
                        <label class="col-md-3 fn-normal">Attachment </label>
                    </div>
                    <div class="m-b-sm row" id="divdeletPrimary">
                        <div class="col-md-3">
                            <input class="form-control" name="AttachmentDetail[0].Remarks" value="" type="text">
                            @Html.ValidationMessage("AttachmentDetail[0].Remarks")
                            @Html.Hidden("AttachmentDetail.Index", "0")
                        </div>
                        <div class="col-md-3">
                            <input type="file" name="AttachmentDetail[0].DocumentFile" />&nbsp;&nbsp;&nbsp;
                            @Html.ValidationMessage("AttachmentDetail[0].DocumentFile")
                        </div>
                        <div class="col-md-2 dis-none mt6">
                            <a href="" target="_blank"></a>
                        </div>
                        <div class="col-md-1">
                            <button class="dis-none btn-sm btn btn-danger" type="button" name="removeDocButton"><i class="ion-android-close"></i></button>
                        </div>
                     </div>


                    <div class="row p-b-sm">
                        <div class="col-md-3">
                            <h4 class="text-right">
                                @*<button type="button" id="btnAddAttachment" class="btn-primary btn pull-left">Add New</button>*@
                            </h4>
                        </div>
                        <div class="col-md-3">
                            <h4 class="text-right">
                                <button type="submit" class="btn btn-success pull-right" value="Submit">Save Document</button>
                           
                            </h4>

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <div id="divAttachContent">
                    <div class="row">
                        <label class="col-md-3 fn-normal">Attachment Name </label>
                        <label class="col-md-3 fn-normal">Attachment </label>
                        <label class="col-md-3 fn-normal"></label>
                    </div>
                    @{

                        if (Model.AttachmentDetail2.Count() > 0)
                        {
                            var count = 0;
                            foreach (var item in Model.AttachmentDetail2)
                            {
                                var docType = "AttachmentDetail2[" + count + "].DocumentType";
                                var docId = "AttachmentDetail2[" + count + "].DocumentDetailId";
                                var docRemarks = "AttachmentDetail2[" + count + "].Remarks";
                                var docFile = "AttachmentDetail2[" + count + "].DocumentFile";
                                var docName = "AttachmentDetail2[" + count + "].DocumentName";
                                var docPath = "AttachmentDetail2[" + count + "].DocumentPath";
                                var docActName = "AttachmentDetail2[" + count + "].DocumentActualName";

                                <div class="m-b-sm row" id="divAttachPrimary">
                                    <div class="col-md-3">
                                         @Html.DisplayFor(m => item.Remarks);
                                         @Html.HiddenFor(m => item.Id);
                                    </div>                                   
                                    <div class="col-md-2 doclink mt6">
                                        <a href="@Url.Action("ShowDocument", "Project", new { file = item.DocumentName, filepath = item.DocumentPath })" target="_blank">@item.DocumentActualName</a>
                                    </div>
                                    <div class="col-md-2">
                                        <span id="deletebtn" data-id="@item.Id" class="glyphicon glyphicon-trash"></span>
                                    </div>
                                  
                                </div>
                                count++;
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

 }
@*<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDaQpNIzgqWlIO7MbIDs7z_I7ZxdH1BE0o&libraries=places"></script>*@ 
<script type="text/javascript">

        //google.maps.event.addDomListener(window, 'load', function () {
        //    var options = {
        //        types: ['address'],
        //        componentRestrictions: { country: "IN" }
        //    };

        //    var input = document.getElementById('Status');
        //    var places = new google.maps.places.Autocomplete(input, options);
        //    places.setFields(
        //             ['address_components', 'geometry', 'icon', 'name']);


        //});

    $('#btnAddAttachment').click(function () {
        var cln = $("#divAttachPrimary").clone().find("input").val("").end();
        $(cln).find('button.dis-none').removeClass('dis-none');
        $(cln).find('div.doclink').addClass('dis-none');
        var index = $('#divAttachContent div.m-b-sm').length;//$("#divAttachPrimary").length - 1;
        $(cln).find("input[name='AttachmentDetail.Index']").val(index);
        $(cln).find("input, select").each(function () {
            $(this).attr("name", $(this).attr("name").replace(/\d+/, index));
        });

      //  $(cln).insertBefore($('#divAttachContent').find('.p-b-sm'));
        $('#divAttachPrimary').append(cln);
    });
    $(document).on('click', '#divAttachContent button[name="removeDocButton"]', function () {
        $(this).closest('#divAttachPrimary').remove();
    });
    $(document).on('change', 'input[name$=".DocumentFile"]', function () {
        var file = $(this).val();
        if (file != "") {
            var file_size = $(this)[0].files[0].size;
            var extension = file.substr((file.lastIndexOf('.') + 1)).toLowerCase();
            switch (extension) {
                case 'doc':
                case 'docx':
                case 'pdf':
                case 'xls':
                    isValidExten = true;
                    break;
                default:
                    isValidExten = false;
            }
            if (isValidExten == false) {
                $('#alert').html("Please upload any one of these type file [doc, docx, pdf,xls].");
                $('#Validation').modal('toggle');
                $(this).val('');
                return false;
            }
            else if (file_size > 5242880) {
                $('#alert').html("You can upload the file up to 5 MB.");
                $('#Validation').modal('toggle');
                $(this).val('');
                return false;
            }
        }
    });
    $(document).on('change', '#finyr,#type,#period', function () {

    });
    //$('#btnPrev').click(function () {
    //    var FinancialYear = $('#finyr').val();
    //    var FormId = $('#type').val();
    //    var Period = $('#period').val();
    //    if (FinancialYear != '' && FormId != '' && Period != '') {

    //    } else
    //        preventDefault();
    //});
    //$('#btnSave').click(function () {
    //    var FinancialYear = $('#finyr').val();
    //    var FormId = $('#type').val();
    //    var Period = $('#period').val();
    //    if (FinancialYear != '' && FormId != '' && Period != '') {

    //    }else
    //        preventDefault();
    //});

    $(document).on('click', '#deletebtn', function () {
        var choice = confirm("Are you sure, Do you want to delete this document?");
        if (choice === true) {
           var Id = $(this).data("id")
           var curr = $(this);
        $.ajax({
            type: "POST",
            data: JSON.stringify({ 'Id': Id }),
            url: '@Url.Action("DeleteFormDoc", "Reports")',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result == true) {
                    curr.closest('#divAttachPrimary').remove();
}

            },
        })

        }
    });
    $(document).on('click', '#idPrevDoc', function () {

            var FinancialYear = $('#finyr').val();
            var FormId = $('#type').val();
            var Period = $('#period').val();
            if (FinancialYear != '' && FormId != '' && Period != '') {

                $.ajax({
                    type: "POST",
                    data: JSON.stringify({ 'FinancialYear': FinancialYear, 'FormId': FormId, 'Period': Period }),
                    url: '@Url.Action("GetFormDoc", "Reports")',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (result) {
                        $('#divAttachContent').empty();
                        var row='<div class="row"><label class="col-md-3 fn-normal">Attachment Name </label>'
                         +'<label class="col-md-3 fn-normal">Attachment </label>'
                         +'<label class="col-md-3 fn-normal"></label></div>';
                        if (result.AttachmentDetail2.length > 0) {$.each(result.AttachmentDetail2, function (i, v1) {
                           row += '<div class="m-b-sm row" id="divAttachPrimary"><div class="col-md-3">' + v1.Remarks
                               + '<input type="hidden"  value=' + v1.Id + '></div>'
                           + '<div class="col-md-2 doclink mt6">'
                           + '<a href="ShowFormDoc?file='+v1.DocumentName+'&filepath=Content/OtherDocuments" target="_blank">'
                           + v1.DocumentActualName + '</a></div>'
                           +' <div class="col-md-2"><span id="deletebtn" data-id='+v1.Id+' class="glyphicon glyphicon-trash"></span></div>'
                        });
                        }
                        else {
                            row += '<div class="m-b-sm row" id="divAttachPrimary"><div class="col-md-7">No record found!..</div></div>'
                        }
                     
                       $('#divAttachContent').append(row);
                    },
                })

            } else {
                $('#FailedAlert').html("Financial Year,Type,Period field required");
                $('#Failed').modal('toggle');
            }
    });
    $(document).on('click', 'a.btndown', function () {
        var FinancialYear = $('#finyr').val();
        var FormId = $('#type').val();
        var Period = $('#period').val();
        if (FinancialYear != '' && FormId == '1' && Period != '') {
            var url = '@Url.Action("Form26Q", "Reports")?Finyear=' + FinancialYear + "&Quator=" + Period ;
            window.location.href = url;
        }
        if (FinancialYear != '' && FormId == '2' && Period != '') {
            var url = '@Url.Action("Form27Q", "Reports")?Finyear=' + FinancialYear + "&Quator=" + Period;
            window.location.href = url;
        }
        if (FinancialYear != '' && FormId == '3' && Period != '') {
            var url = '@Url.Action("Form24Q", "Reports")?Finyear=' + FinancialYear + "&Quator=" + Period;
            window.location.href = url;
        }

    });

</script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/FoolProof/mvcfoolproof.unobtrusive.min.js")" type="text/javascript"></script>


