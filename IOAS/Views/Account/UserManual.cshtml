@model IOAS.Models.UserManualModel
@{
    ViewBag.Title = "UserManual";
    ViewBag.Subtitle = "Create UserManual";
    Layout = "~/Views/Shared/_LayoutFluid.cshtml";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("UserManual", "Account", FormMethod.Post, new { role = "form", @id = "UserManual", enctype = "multipart/form-data" }))
{
    <div class="row">

        <div class="row">
            <div class="page-wrapper">

                <div class="col-md-12">
                    <div class="white-bg">
                        <div class="row">
                            <div class="col-md-12">
                                <h3 class="spl-title">User Manual</h3>
                            </div>
                        </div>
                        @if (Model.ActualFileName != null)
                        {
                            <div class="col-md-3">
                                <div class="custom-view mb-null ">
                                    <label class="required">Module </label>
                                    @Html.DropDownListFor(m => m.ModuleId, new SelectList(ViewBag.VBModules, "id", "name"), "-Select-", new { @class = "form-control required", @disabled = "disabled" })
                                    <div>
                                        @Html.HiddenFor(m => m.ModuleId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="custom-view mb-null ">
                                    <label class="required">Menugroup </label>
                                    @Html.DropDownListFor(m => m.MenugroupId, new SelectList(ViewBag.VBMenugroup, "id", "name"), "-Select-", new { @class = "form-control required", @disabled = "disabled" })
                                    <div>
                                        @Html.HiddenFor(m => m.MenugroupId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="custom-view mb-null ">
                                    <label class="required">Function </label>
                                    @Html.DropDownListFor(m => m.FunctionId, new SelectList(ViewBag.VBFunction, "id", "name"), "-Select-", new { @class = "form-control required", @disabled = "disabled" })
                                    <div>
                                        @Html.HiddenFor(m => m.FunctionId)
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-3">
                                <div class="custom-view mb-null ">
                                    <label class="required">Module </label>
                                    @Html.DropDownListFor(m => m.ModuleId, new SelectList(ViewBag.VBModules, "id", "name"), "-Select-", new { @class = "form-control required" })
                                    <div class="txt-error txt-red">
                                        @Html.ValidationMessageFor(m => m.ModuleId)
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="custom-view mb-null ">
                                    <label class="required">Menugroup </label>
                                    @Html.DropDownListFor(m => m.MenugroupId, new SelectList(ViewBag.VBMenugroup, "id", "name"), "-Select-", new { @class = "form-control required" })
                                    <div class="txt-error txt-red">
                                        @Html.ValidationMessageFor(m => m.MenugroupId)
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-3">
                                <div class="custom-view mb-null ">
                                    <label class="required">Function </label>
                                    @Html.DropDownListFor(m => m.FunctionId, new SelectList(ViewBag.VBFunction, "id", "name"), "-Select-", new { @class = "form-control required" })
                                    <div class="txt-error txt-red">
                                        @Html.ValidationMessageFor(m => m.FunctionId)
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="col-md-3 ">
                            <div class="custom-view mb-null ">
                                <label class="required">Document  [ .pdf only]</label>
                                <input type="file" name="Attachment">
                                <div class="txt-error txt-red">
                                  
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 mt-20">

                    <div class="col-md-offset-5 ">
                        <input type="submit" class="btn btn-primary mr10" value="Save" id="Save" />
                        <a id="btnadd" href="@Url.Action("UserManualList")" type="button" class="btn btn-default"> Close</a>

                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script>
    $("#Save").click(function () {
        var file = $("input[name='Attachment']").val();
        if (file == "") {
            $('#Validation').modal('toggle');
            $("#alert").text("Document must be upload");
            return false;
        }

    })
    $(document).ready(function () {

        var errMsg = '@TempData["errMsg"]';
        var succMsg = '@TempData["succMsg"]';
        var alertMsg = '@TempData["alertMsg"]';

        if (succMsg != '') {
            $('#Success').modal('toggle');
            $("#alertSuccess").html(succMsg)
        }
        if (alertMsg != '') {
            $('#Validation').modal('toggle');
            $("#alert").text(alertMsg)
        }
        if (errMsg = '') {
            $('#Failed').modal('toggle');
            $("#FailedAlert").html(errMsg)
        }
    });
    $("#ModuleId").change(function () {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetMenuGroupBasedonModule")",
            data: { "ModuleId": $(this).val() },
            dataType: "json",
            success: function (result) {
                var MenugroupId = $("#MenugroupId");

                var FunctionId = $("#FunctionId");

                MenugroupId.empty();
                FunctionId.empty();
                MenugroupId.append('<option  value="' + " " + '">' + "-select-" + '</option>');
                $.each(result, function (key, value) {

                    MenugroupId.append('<option  value="' + value.id + '">' + value.name + '</option>');
                });
                //fillMasterDropDown(MenugroupId, result, true);
            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
    })
    $("#MenugroupId").change(function () {
        $.ajax({
            type: "GET",
            url: "@Url.Action("GetFunctionBasedonMenugroup")",
            data: { "MenugroupId": $(this).val() },
            dataType: "json",
            success: function (result) {

                var FunctionId = $("#FunctionId");

                FunctionId.empty();
                FunctionId.append('<option  value="' + " " + '">' + "-select-" + '</option>');
                $.each(result, function (key, value) {

                    FunctionId.append('<option  value="' + value.id + '">' + value.name + '</option>');
                });
                //fillMasterDropDown(FunctionId, result, true);
            },
            error: function (err) {
                console.log("error : " + err);
            }
        });
    })

    $("input[name='Attachment']").change(function () {

        var link = $(".filelink");
        var ext = $(this).val().split(".");
        ext = ext[ext.length - 1].toLowerCase();
        var arrayExtensions = ["pdf"];
        if (arrayExtensions.lastIndexOf(ext) == -1) {
            $('#Validation').modal('show');
            $("#alert").text("Allowed pdf type only ");            
            $(this).val("");
            //link.show();
        }
        var filesize = this.files[0].size;
        var MAXFILESIZE = 10 * 1024 * 1024;
        if (filesize > MAXFILESIZE) {
            $('#Validation').modal('show');
            $("#alert").text("Please upload file less than 10MB");           
            $(this).val('');
            //link.show();
        }
    });



</script>